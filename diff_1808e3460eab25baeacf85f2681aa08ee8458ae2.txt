diff --git a/.vscode/configurationCache.log b/.vscode/configurationCache.log
new file mode 100644
index 0000000..a6f2304
--- /dev/null
+++ b/.vscode/configurationCache.log
@@ -0,0 +1 @@
+{"buildTargets":[".PHONY","/home/felipe/git/UFSC/SO-II/ine5424/app/alarm/alarm_traits.h","/home/felipe/git/UFSC/SO-II/ine5424/app/hello/hello_traits.h","/home/felipe/git/UFSC/SO-II/ine5424/app/philosophers_dinner/philosophers_dinner_traits.h","/home/felipe/git/UFSC/SO-II/ine5424/app/pmu/pmu_traits.h","/home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h","/home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h","FORCE","all","all1","app","bin","buildtest","clean","clean1","cleanapps","cleantest","config","debug","debug1","dist","eposcc.conf","eposcfg","eposmkbi.conf","etc","flash","flash1","gittest","img","img/","img/alarm.img","img/hello.img","img/philosophers_dinner.img","img/pmu.img","img/producer_consumer.img","img/uart.img","linktest","posbuild_","posbuild_alarm","posbuild_hello","posbuild_philosophers_dinner","posbuild_pmu","posbuild_producer_consumer","posbuild_uart","prebuild_","prebuild_alarm","prebuild_hello","prebuild_philosophers_dinner","prebuild_pmu","prebuild_producer_consumer","prebuild_uart","prerun_","prerun_alarm","prerun_hello","prerun_philosophers_dinner","prerun_pmu","prerun_producer_consumer","prerun_uart","run","run1","runtest","src","test","tools","veryclean"],"launchTargets":["/home/felipe/git/UFSC/SO-II/ine5424/src/system>system_sifive_u.o()","/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg>eposcfg()","/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi>eposmkbi()"],"customConfigurationProvider":{"workspaceBrowse":{"browsePath":["/home/felipe/git/UFSC/SO-II/ine5424/include","/home/felipe/git/UFSC/SO-II/ine5424/src/api","/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common","/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64","/home/felipe/git/UFSC/SO-II/ine5424/src/init","/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common","/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv","/home/felipe/git/UFSC/SO-II/ine5424/src/setup","/home/felipe/git/UFSC/SO-II/ine5424/src/system","/home/felipe/git/UFSC/SO-II/ine5424/src/utility","/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg","/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi"],"compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","standard":"c++14","windowsSdkVersion":""},"fileIndex":[["/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg/eposcfg.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg/eposcfg.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg/eposcfg.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"intelliSenseMode":"gcc-x64","compilerPath":"/usr/bin/g++","compilerArgs":["-c","-ansi","-fno-exceptions","-m64","-Wall","-O"],"windowsSdkVersion":""},"compileCommand":{"command":"g++ -c -ansi -fno-exceptions -std=c++14 -m64 -Wall -O -I/home/felipe/git/UFSC/SO-II/ine5424/include eposcfg.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg","file":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg/eposcfg.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi/eposmkbi.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi/eposmkbi.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi/eposmkbi.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"intelliSenseMode":"gcc-x64","compilerPath":"/usr/bin/g++","compilerArgs":["-c","-ansi","-fno-exceptions","-m64","-Wall","-O"],"windowsSdkVersion":""},"compileCommand":{"command":"g++ -c -ansi -fno-exceptions -std=c++14 -m64 -Wall -O -I/home/felipe/git/UFSC/SO-II/ine5424/include eposmkbi.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi","file":"/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi/eposmkbi.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/aes.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/aes.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/aes.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include aes.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/aes.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/bignum.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/bignum.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/bignum.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include bignum.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/bignum.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/delete.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/delete.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/delete.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include delete.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/delete.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/elf.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/elf.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/elf.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include elf.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/elf.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/heap.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/heap.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/heap.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include heap.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/heap.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/ostream.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/ostream.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/ostream.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include ostream.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/ostream.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/random.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/random.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/random.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include random.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/random.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/srec.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/srec.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/srec.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include srec.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/srec.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/utility/string.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/string.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/string.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include string.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/utility/string.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include mmu_common.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include mmu_common_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/mmu_common_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtbegin.c",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtbegin.c","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtbegin.c","scheme":"file"},"configuration":{"defines":[],"includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-gcc","compilerArgs":["-ansi","-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-stack-protector","--no-pie","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-address-of-packed-member","-Wno-stringop-overflow","-o","rv64_crtbegin.o"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-gcc -ansi -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include ../common/crtbegin.c -o rv64_crtbegin.o","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtbegin.c"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtend.c",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtend.c","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtend.c","scheme":"file"},"configuration":{"defines":[],"includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-gcc","compilerArgs":["-ansi","-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-stack-protector","--no-pie","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-address-of-packed-member","-Wno-stringop-overflow","-o","rv64_crtend.o"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-gcc -ansi -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include ../common/crtend.c -o rv64_crtend.o","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common/crtend.c"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_cpu.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_pmu.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_cpu_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_cpu_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_pmu_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64/rv64_pmu_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/info.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/info.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/info.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include info.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/info.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/machine_common.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/machine_common.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/machine_common.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include machine_common.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/machine_common.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/rtc_common.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/rtc_common.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/rtc_common.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rtc_common.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/rtc_common.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/scratchpad_common.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/scratchpad_common.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/scratchpad_common.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include scratchpad_common.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/scratchpad_common.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_display.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_display.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_display.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include serial_display.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_display.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_keyboard.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_keyboard.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_keyboard.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include serial_keyboard.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common/serial_keyboard.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_ic.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_machine.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_timer.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_ic_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_ic_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_machine_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_machine_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_timer_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv/riscv_timer_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/address_space.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/address_space.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/address_space.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include address_space.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/address_space.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include alarm.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/condition.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/condition.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/condition.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include condition.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/condition.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/mutex.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/mutex.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/mutex.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include mutex.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/mutex.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/scheduler.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/scheduler.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/scheduler.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include scheduler.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/scheduler.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/segment.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/segment.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/segment.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include segment.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/segment.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/semaphore.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/semaphore.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/semaphore.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include semaphore.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/semaphore.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include thread.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include alarm_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/alarm_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/system_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/system_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/system_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include system_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/system_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread_init.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread_init.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread_init.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include thread_init.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/api","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/api/thread_init.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/setup/setup_sifive_u.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/setup/setup_sifive_u.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/setup/setup_sifive_u.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include setup_sifive_u.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/setup","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/setup/setup_sifive_u.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/system/system_scaffold.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/system_scaffold.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/system_scaffold.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include system_scaffold.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/system","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/system_scaffold.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/system/application_scaffold.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/application_scaffold.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/application_scaffold.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include application_scaffold.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/system","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/application_scaffold.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/system/flash_scaffold.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/flash_scaffold.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/flash_scaffold.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include flash_scaffold.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/system","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/system/flash_scaffold.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_application.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_application.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_application.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_application.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/init","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_application.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_begin.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_begin.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_begin.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_begin.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/init","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_begin.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_end.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_end.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_end.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_end.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/init","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_end.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_flash.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_flash.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_flash.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_flash.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/init","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_flash.cc"}}],["/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_system.cc",{"uri":{"$mid":1,"fsPath":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_system.cc","path":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_system.cc","scheme":"file"},"configuration":{"defines":[],"standard":"c++14","includePath":["/home/felipe/git/UFSC/SO-II/ine5424/include"],"forcedInclude":[],"compilerPath":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++","compilerArgs":["-c","-march=rv64gc","-mabi=lp64d","-Wl,","-mno-relax","-mcmodel=medany","-O","-nostdinc","--no-exceptions","--no-rtti","--no-use-cxa-atexit","--no-unwind-tables","--no-asynchronous-unwind-tables","--no-stack-protector","--no-pie","--data-sections","--function-sections","-Wall","-Werror","-Wno-builtin-declaration-mismatch","-Wno-array-bounds","-Wno-attribute-alias","-Wno-placement-new","-Wno-class-memaccess","-Wno-address-of-packed-member","-Wno-stringop-overflow"],"windowsSdkVersion":""},"compileCommand":{"command":"/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_system.cc","directory":"/home/felipe/git/UFSC/SO-II/ine5424/src/init","file":"/home/felipe/git/UFSC/SO-II/ine5424/src/init/init_system.cc"}}]]}}
\ No newline at end of file
diff --git a/.vscode/dryrun.log b/.vscode/dryrun.log
new file mode 100644
index 0000000..8880ef9
--- /dev/null
+++ b/.vscode/dryrun.log
@@ -0,0 +1,384 @@
+make --dry-run --always-make --keep-going --print-directory
+make: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+make --print-directory APPLICATION=uart clean1 prebuild_uart all1 posbuild_uart; make --print-directory APPLICATION=producer_consumer clean1 prebuild_producer_consumer all1 posbuild_producer_consumer; make --print-directory APPLICATION=pmu clean1 prebuild_pmu all1 posbuild_pmu; make --print-directory APPLICATION=philosophers_dinner clean1 prebuild_philosophers_dinner all1 posbuild_philosophers_dinner; make --print-directory APPLICATION=hello clean1 prebuild_hello all1 posbuild_hello; make --print-directory APPLICATION=alarm clean1 prebuild_alarm all1 posbuild_alarm;
+make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --ignore-errors clean)
+(cd app && make --ignore-errors clean)
+(cd src && make --ignore-errors clean)
+(cd img && make --ignore-errors clean)
+find /home/felipe/git/UFSC/SO-II/ine5424/lib -maxdepth 1 -type f -not -name .gitignore -exec rm -f {} \;
+echo -n "Building uart ..."
+ 
+(cd etc && make --print-directory)
+ 
+make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+makefile:8: *** Missing traits file /home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h !.  Stop.
+
+make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+make[1]: *** [makefile:17: etc] Error 2
+
+(cd tools && make --print-directory)
+ 
+make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools'
+ 
+(cd eposcc && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcc'
+ 
+install -m 775 eposcc /home/felipe/git/UFSC/SO-II/ine5424/bin
+sed -e 's/^EPOS=.*$/EPOS=\/home\/felipe\/git\/UFSC\/SO-II\/ine5424/' -i /home/felipe/git/UFSC/SO-II/ine5424/bin/eposcc
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcc'
+ 
+(cd eposcfg && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg'
+ 
+g++ -c -ansi -fno-exceptions -std=c++14 -m64 -Wall -O -I/home/felipe/git/UFSC/SO-II/ine5424/include eposcfg.cc
+gcc -m64 -o eposcfg eposcfg.o
+install -m 775 eposcfg /home/felipe/git/UFSC/SO-II/ine5424/bin
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcfg'
+ 
+(cd eposctors && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposctors'
+ 
+install -m 775 eposctors /home/felipe/git/UFSC/SO-II/ine5424/bin
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposctors'
+ 
+(cd eposmkbi && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi'
+ 
+g++ -c -ansi -fno-exceptions -std=c++14 -m64 -Wall -O -I/home/felipe/git/UFSC/SO-II/ine5424/include eposmkbi.cc
+gcc -m64 -o eposmkbi eposmkbi.o
+install -m 775 eposmkbi /home/felipe/git/UFSC/SO-II/ine5424/bin
+ 
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposmkbi'
+ 
+(cd epostest && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/epostest'
+ 
+install -m 775 epostest /home/felipe/git/UFSC/SO-II/ine5424/bin
+sed -e 's/^EPOS=.*$/EPOS=\/home\/felipe\/git\/UFSC\/SO-II\/ine5424/' -i /home/felipe/git/UFSC/SO-II/ine5424/bin/epostest
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/epostest'
+ 
+make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/tools'
+ 
+(cd src && make --print-directory)
+ 
+make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src'
+ 
+(cd utility && make --print-directory)
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/utility'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include aes.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a aes.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include bignum.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a bignum.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include delete.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a delete.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include elf.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a elf.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include heap.cc
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a heap.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include ostream.cc
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a ostream.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include random.cc
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a random.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include srec.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a srec.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include string.cc
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libutil_sifive_u.a string.o
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/utility'
+(cd architecture && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/architecture'
+ 
+(cd common && make --print-directory)
+ 
+make[4]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include mmu_common.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a mmu_common.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include mmu_common_init.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a mmu_common_init.o
+make[4]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/common'
+ 
+(cd rv64 && make --print-directory)
+ 
+make[4]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-gcc -E -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_crt0.S -o rv64_crt0.s
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-as -march=rv64gc -mabi=lp64d rv64_crt0.s -o rv64_crt0.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-gcc -ansi -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include ../common/crtbegin.c -o rv64_crtbegin.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-gcc -ansi -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include ../common/crtend.c -o rv64_crtend.o
+ 
+install rv64_crt0.o /home/felipe/git/UFSC/SO-II/ine5424/lib/crt0_sifive_u.o
+install rv64_crtbegin.o /home/felipe/git/UFSC/SO-II/ine5424/lib/crtbegin_sifive_u.o
+install rv64_crtend.o /home/felipe/git/UFSC/SO-II/ine5424/lib/crtend_sifive_u.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_cpu.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libarch_sifive_u.a rv64_cpu.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_pmu.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libarch_sifive_u.a rv64_pmu.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_cpu_init.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a rv64_cpu_init.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rv64_pmu_init.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a rv64_pmu_init.o
+rm rv64_crt0.s
+make[4]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/architecture/rv64'
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/architecture'
+(cd machine && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/machine'
+ 
+(cd common && make --print-directory)
+ 
+make[4]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include info.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a info.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include machine_common.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a machine_common.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include rtc_common.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a rtc_common.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include scratchpad_common.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a scratchpad_common.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include serial_display.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a serial_display.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include serial_keyboard.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a serial_keyboard.o
+make[4]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/machine/common'
+ 
+(cd "riscv" && make --print-directory)
+ 
+make[4]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_ic.cc
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a riscv_ic.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_machine.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a riscv_machine.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_timer.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libmach_sifive_u.a riscv_timer.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_ic_init.cc
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a riscv_ic_init.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_machine_init.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a riscv_machine_init.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include riscv_timer_init.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a riscv_timer_init.o
+make[4]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/machine/riscv'
+ 
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/machine'
+ 
+(cd api && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/api'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include address_space.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a address_space.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include alarm.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a alarm.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include condition.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a condition.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include mutex.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a mutex.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include scheduler.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a scheduler.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include segment.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a segment.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include semaphore.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a semaphore.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include thread.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libsys_sifive_u.a thread.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include alarm_init.cc
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a alarm_init.o
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include system_init.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a system_init.o
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include thread_init.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ar rcs /home/felipe/git/UFSC/SO-II/ine5424/lib/libinit_sifive_u.a thread_init.o
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/api'
+ 
+(cd setup && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/setup'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include setup_sifive_u.cc
+install setup_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/setup'
+ 
+(cd boot && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/boot'
+ 
+make[3]: Nothing to be done for 'all'.
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/boot'
+ 
+(cd system && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/system'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include system_scaffold.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include application_scaffold.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include flash_scaffold.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-ld -m elf64lriscv_lp64f --no-relax -nostdlib -L/home/felipe/git/UFSC/SO-II/ine5424/lib -Bstatic -i system_scaffold.o -o system_sifive_u.o
+install application_scaffold.o application_sifive_u.o
+install flash_scaffold.o flash_sifive_u.o
+ 
+install system_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+install flash_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+install application_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/system'
+ 
+(cd init && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/src/init'
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_application.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_begin.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_end.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_flash.cc
+ 
+/usr/local/rv64/bin/riscv64-unknown-linux-gnu-g++ -c -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -I/home/felipe/git/UFSC/SO-II/ine5424/include init_system.cc
+ 
+install init_begin.o init_begin_sifive_u.o
+install init_system.o init_system_sifive_u.o
+install init_application.o init_application_sifive_u.o
+install init_flash.o init_flash_sifive_u.o
+install init_end.o init_end_sifive_u.o
+ 
+install init_begin_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+install init_system_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+install init_application_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+install init_flash_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+install init_end_sifive_u.o /home/felipe/git/UFSC/SO-II/ine5424/lib
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src/init'
+ 
+make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/src'
+(cd app && make --print-directory)
+ 
+make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/app'
+ 
+(cd uart && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/app/uart'
+ 
+/home/felipe/git/UFSC/SO-II/ine5424/bin/eposcc -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow  -c -ansi -O -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow -o uart.o uart.cc
+ 
+make[3]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/app/uart'
+ 
+make[3]: *** No rule to make target '/home/felipe/git/UFSC/SO-II/ine5424/lib/*', needed by 'uart'.
+
+make[2]: *** [makefile:10: uart] Error 2
+
+make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/app'
+ 
+make[1]: *** [makefile:17: app] Error 2
+
+(cd img && make --print-directory)
+ 
+make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/img'
+ 
+make[2]: *** No rule to make target 'uart', needed by 'strip'.
+
+make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/img'
+ 
+make[1]: *** [makefile:17: img] Error 2
+
+echo " done!"
+make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --ignore-errors clean)
+(cd app && make --ignore-errors clean)
+(cd src && make --ignore-errors clean)
+(cd img && make --ignore-errors clean)
+find /home/felipe/git/UFSC/SO-II/ine5424/lib -maxdepth 1 -type f -not -name .gitignore -exec rm -f {} \;
+echo -n "Building producer_consumer ..."
+(cd etc && make --print-directory)
+ 
+make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+makefile:8: *** Missing traits file /home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h !.  Stop.
+
+make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+make[1]: *** [makefile:17: etc] Error 2
+
+(cd tools && make --print-directory)
+ 
+make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools'
+ 
+(cd eposcc && make --print-directory)
+ 
+make[3]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/tools/eposcc'
+ 
diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..00efd3f
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,3 @@
+{
+  "makefile.extensionOutputFolder": "./.vscode"
+}
\ No newline at end of file
diff --git a/.vscode/targets.log b/.vscode/targets.log
new file mode 100644
index 0000000..8aba2c9
--- /dev/null
+++ b/.vscode/targets.log
@@ -0,0 +1,11307 @@
+make all --print-data-base --no-builtin-variables --no-builtin-rules --question
+make --print-directory APPLICATION=uart clean1 prebuild_uart all1 posbuild_uart; make --print-directory APPLICATION=producer_consumer clean1 prebuild_producer_consumer all1 posbuild_producer_consumer; make --print-directory APPLICATION=pmu clean1 prebuild_pmu all1 posbuild_pmu; make --print-directory APPLICATION=philosophers_dinner clean1 prebuild_philosophers_dinner all1 posbuild_philosophers_dinner; make --print-directory APPLICATION=hello clean1 prebuild_hello all1 posbuild_hello; make --print-directory APPLICATION=alarm clean1 prebuild_alarm all1 posbuild_alarm;
+ 
+# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --print-directory)
+ 
+# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+# makefile (from '../makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from '../makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from '../makedefs', line 21)
+LMACHNAME := mach
+# makefile (from '../makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+ 
+# makefile (from '../makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 311)
+LINK := ln -sf
+# makefile (from '../makedefs', line 329)
+SHELL := bash
+# makefile (from '../makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from '../makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from '../makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from '../makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from '../makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from '../makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from '../makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from '../makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from '../makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from '../makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 1)
+MAKEFILE_LIST :=  makefile ../makedefs
+# makefile (from '../makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from '../makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from '../makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from '../makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from '../makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from '../makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from '../makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from '../makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from '../makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from '../makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from '../makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from '../makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from '../makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from '../makedefs', line 273)
+TLD := gcc
+# makefile (from '../makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from '../makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from '../makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from '../makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from '../makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from '../makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from '../makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from '../makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from '../makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from '../makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from '../makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from '../makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from '../makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from '../makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from '../makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from '../makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from '../makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from '../makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from '../makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from '../makedefs', line 302)
+DD := dd
+# makefile (from '../makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from '../makedefs', line 22)
+LSYSNAME := sys
+# makefile (from '../makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from '../makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from '../makedefs', line 121)
+pc_FLASHER := 
+# makefile (from '../makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from '../makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from '../makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from '../makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from '../makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from '../makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=uart
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from '../makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from '../makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from '../makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from '../makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from '../makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 2
+# makefile (from '../makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from '../makedefs', line 316)
+MAKE := make --print-directory
+# environment
+SHLVL = 3
+# makefile (from '../makedefs', line 299)
+CLEAN := rm -f
+# makefile (from '../makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from '../makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from '../makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from '../makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from '../makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from '../makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from '../makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from '../makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from '../makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from '../makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from '../makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from '../makedefs', line 236)
+atmega_EMULATOR = 
+# environment
+OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 84)
+BOOT_ROM = 
+# makefile (from '../makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from '../makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from '../makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from '../makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from '../makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from '../makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+ 
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from '../makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from '../makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from '../makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from '../makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from '../makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from '../makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 23)
+LINITNAME := init
+# makefile (from '../makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from '../makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from '../makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from '../makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from '../makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from '../makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from '../makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from '../makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from '../makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from '../makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from '../makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from '../makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from '../makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from '../makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from '../makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from '../makedefs', line 335)
+TEE := tee
+# makefile (from '../makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from '../makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from '../makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from '../makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from '../makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from '../makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from '../makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from '../makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from '../makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from '../makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from '../makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from '../makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from '../makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from '../makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = uart
+# makefile (from '../makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from '../makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from '../makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from '../makedefs', line 343)
+TOUCH := touch
+# makefile (from '../makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# environment
+LANG = C
+# makefile (from '../makedefs', line 340)
+TERM := konsole -e
+# makefile (from '../makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from '../makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from '../makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from '../makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 14897): 4 files, 4 impossibilities.
+# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
+# .. (device 2080, inode 1652): 19 files, 2 impossibilities.
+
+# 31 files, 8 impossibilities in 3 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from '../makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from '../makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from '../makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from '../makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from '../makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from '../makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from '../makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from '../makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from '../makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from '../makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from '../makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from '../makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from '../makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from '../makedefs', line 389):
+ 
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from '../makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from '../makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from '../makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from '../makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from '../makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from '../makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+# Not a target:
+/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:44:06.8804869
+#  File has been updated.
+#  Successfully updated.
+
+config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := config
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# | := 
+# automatic
+# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
+#  recipe to execute (from 'makefile', line 14):
+		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
+ 
+		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
+	  		
+
+all: /home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h config eposcfg eposcc.conf eposmkbi.conf
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/133=0%
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1785899
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+../makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+clean: /home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 56):
+		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
+		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
+		$(CLEAN) *.conf
+
+eposmkbi.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+ 
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
+		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
+		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
+		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
+		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
+		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
+		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
+		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
+		@echo "NODE_ID=$(NODE_ID)" >> $@
+		@echo "UUID=$(UUID)" >> $@
+
+eposcfg: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		(cd $(TLS)/eposcfg && $(MAKE) clean all)
+
+/home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h:
+#  Implicit rule search has not been done.
+#  Last modified 2022-06-13 09:44:57.5383429
+#  File has been updated.
+#  Successfully updated.
+#  recipe to execute (from 'makefile', line 8):
+		$(error Missing traits file $@ !)
+
+eposcc.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 25):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
+		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
+		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
+		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
+		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
+		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
+		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
+		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
+		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@
+
+# files hash-table stats:
+# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 75 / storage = 862 B / avg = 11 B
+# current buf: size = 8162 B / used = 862 B / count = 75 / avg = 11 B
+
+# strcache performance: lookups = 136 / hit rate = 44%
+# hash-table stats:
+ 
+# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+# makefile (from 'makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from 'makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from 'makedefs', line 21)
+LMACHNAME := mach
+# makefile (from 'makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from 'makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 311)
+LINK := ln -sf
+# makefile (from 'makedefs', line 329)
+SHELL := bash
+# makefile (from 'makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from 'makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from 'makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from 'makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from 'makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from 'makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from 'makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from 'makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from 'makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from 'makedefs', line 73)
+ 
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 1)
+MAKEFILE_LIST :=  makefile makedefs
+# makefile (from 'makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from 'makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from 'makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from 'makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from 'makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from 'makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from 'makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from 'makefile', line 55)
+TESTS := active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makefile', line 60)
+UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from 'makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from 'makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from 'makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from 'makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from 'makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from 'makedefs', line 273)
+TLD := gcc
+# makefile (from 'makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from 'makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from 'makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from 'makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from 'makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from 'makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from 'makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from 'makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from 'makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from 'makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from 'makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from 'makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from 'makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from 'makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from 'makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from 'makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from 'makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from 'makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from 'makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from 'makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from 'makedefs', line 302)
+DD := dd
+# makefile (from 'makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from 'makedefs', line 22)
+LSYSNAME := sys
+# makefile (from 'makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from 'makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from 'makedefs', line 121)
+pc_FLASHER := 
+# makefile (from 'makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from 'makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from 'makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# makefile (from 'makefile', line 58)
+TESTS_COMPILED := $(subst ,, )
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from 'makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from 'makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from 'makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=uart
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from 'makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from 'makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from 'makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from 'makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from 'makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 1
+# makefile (from 'makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from 'makedefs', line 316)
+MAKE := make --print-directory
+# default
+MAKECMDGOALS := clean1 prebuild_uart all1 posbuild_uart
+# environment
+SHLVL = 2
+# makefile (from 'makedefs', line 299)
+CLEAN := rm -f
+# makefile (from 'makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from 'makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from 'makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from 'makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from 'makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile (from 'makefile', line 56)
+TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from 'makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from 'makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from 'makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from 'makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from 'makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from 'makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from 'makedefs', line 236)
+atmega_EMULATOR = 
+# makefile (from 'makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# makefile (from 'makedefs', line 84)
+BOOT_ROM = 
+# makefile (from 'makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from 'makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from 'makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from 'makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from 'makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from 'makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from 'makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from 'makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from 'makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from 'makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from 'makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from 'makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 23)
+LINITNAME := init
+# makefile (from 'makefile', line 59)
+TESTS_FINISHED := 
+# makefile (from 'makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from 'makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from 'makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from 'makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from 'makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from 'makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from 'makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from 'makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from 'makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from 'makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from 'makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from 'makefile', line 61)
+UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from 'makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from 'makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from 'makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from 'makedefs', line 335)
+TEE := tee
+# makefile (from 'makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from 'makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from 'makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from 'makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from 'makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from 'makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from 'makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from 'makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from 'makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from 'makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from 'makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+ 
+# default
+SUFFIXES := 
+# makefile (from 'makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from 'makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from 'makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = uart
+# makefile (from 'makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from 'makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from 'makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from 'makedefs', line 343)
+TOUCH := touch
+# makefile (from 'makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# makefile (from 'makefile', line 5)
+SUBDIRS := etc tools src app img
+# environment
+LANG = C
+# makefile (from 'makedefs', line 340)
+TERM := konsole -e
+# makefile (from 'makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from 'makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from 'makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from 'makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 1652): 19 files, 8 impossibilities.
+
+# 19 files, 8 impossibilities in 1 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from 'makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from 'makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from 'makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from 'makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from 'makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from 'makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from 'makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from 'makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from 'makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from 'makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from 'makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from 'makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from 'makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from 'makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from 'makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from 'makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from 'makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from 'makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from 'makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from 'makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+posbuild_uart:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 85):
+		@echo " done!"
+
+all: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		$(MAKE) all1
+
+bin: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 53):
+		$(MAKE) APPLICATION=hello etc tools
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Successfully updated.
+
+prebuild_uart:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+ 
+# @ := prebuild_uart
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := 
+# automatic
+# | := 
+# automatic
+# < := 
+# automatic
+# ^ := 
+# automatic
+# ? := 
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
+#  recipe to execute (from 'makefile', line 83):
+		@echo -n "Building $(APPLICATION) ..."
+
+.PHONY: prebuild_uart posbuild_uart prerun_uart
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+buildtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 66):
+		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+img/uart.img:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 30):
+		$(MAKE) $(PRECLEAN) all1
+		
+
+all1: etc tools src app img
+#  Command line target.
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has not been updated.
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+gittest: buildtest runtest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+debug: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 36):
+		$(MAKE) DEBUG=1 all1 debug1
+
+app: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+test: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 63):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
+		
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1985899
+#  File has been updated.
+#  Successfully updated.
+
+prerun_uart:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 89):
+		@echo "Running $(APPLICATION):"
+
+src: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+debug1: etc img/uart.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		(cd img && $(MAKE) DEBUG=1 debug)
+
+# Not a target:
+makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+etc: FORCE
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  Modification time never checked.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := etc
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+ 
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+runtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 69):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)
+
+cleantest: cleanapps
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 77):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
+		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;
+
+run: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 23):
+		$(MAKE) run1
+
+clean: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 95):
+		$(MAKE) clean1
+
+veryclean: clean cleanapps cleantest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 109):
+		(cd tools && $(MAKECLEAN))
+		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
+		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;
+
+img: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+dist: veryclean
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 121):
+		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
+		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
+		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		$(CLEAN) $(ETC)/license.mk
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
+		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
+		$(CLEAN) $(ETC)/license.as
+
+flash: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 46):
+		$(MAKE) flash1
+
+run1: etc img/uart.img
+#  Implicit rule search has not been done.
+ 
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 27):
+		(cd img && $(MAKE) run1)
+		
+
+clean1: FORCE
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := clean1
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
+#  recipe to execute (from 'makefile', line 99):
+		(cd etc && $(MAKECLEAN))
+		(cd app && $(MAKECLEAN))
+		(cd src && $(MAKECLEAN))
+		(cd img && $(MAKECLEAN))
+		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+
+tools: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+flash1: all1
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 50):
+		(cd img && $(MAKE) flash)
+
+cleanapps: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 106):
+		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)
+
+linktest: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 74):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+
+# files hash-table stats:
+# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 78 / storage = 598 B / avg = 7 B
+# current buf: size = 8162 B / used = 598 B / count = 78 / avg = 7 B
+
+# strcache performance: lookups = 201 / hit rate = 61%
+# hash-table stats:
+# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --print-directory)
+ 
+# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+ 
+# makefile (from '../makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from '../makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from '../makedefs', line 21)
+LMACHNAME := mach
+# makefile (from '../makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from '../makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 311)
+LINK := ln -sf
+# makefile (from '../makedefs', line 329)
+SHELL := bash
+# makefile (from '../makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from '../makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from '../makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from '../makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from '../makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from '../makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from '../makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from '../makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from '../makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from '../makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 1)
+MAKEFILE_LIST :=  makefile ../makedefs
+# makefile (from '../makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from '../makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from '../makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from '../makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from '../makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from '../makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from '../makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from '../makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from '../makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from '../makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from '../makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from '../makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from '../makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from '../makedefs', line 273)
+TLD := gcc
+# makefile (from '../makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from '../makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from '../makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from '../makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from '../makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from '../makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from '../makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from '../makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from '../makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from '../makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from '../makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from '../makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from '../makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from '../makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from '../makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from '../makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from '../makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from '../makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from '../makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from '../makedefs', line 302)
+DD := dd
+# makefile (from '../makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from '../makedefs', line 22)
+LSYSNAME := sys
+# makefile (from '../makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from '../makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from '../makedefs', line 121)
+pc_FLASHER := 
+# makefile (from '../makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from '../makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from '../makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from '../makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from '../makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from '../makedefs', line 267)
+ 
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=producer_consumer
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from '../makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from '../makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from '../makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from '../makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from '../makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 2
+# makefile (from '../makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from '../makedefs', line 316)
+MAKE := make --print-directory
+# environment
+SHLVL = 3
+# makefile (from '../makedefs', line 299)
+CLEAN := rm -f
+# makefile (from '../makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from '../makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from '../makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from '../makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from '../makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from '../makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from '../makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from '../makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from '../makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from '../makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from '../makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from '../makedefs', line 236)
+atmega_EMULATOR = 
+# environment
+OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 84)
+BOOT_ROM = 
+# makefile (from '../makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from '../makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from '../makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from '../makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from '../makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from '../makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from '../makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from '../makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from '../makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from '../makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from '../makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from '../makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 23)
+LINITNAME := init
+# makefile (from '../makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from '../makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from '../makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from '../makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from '../makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from '../makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from '../makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from '../makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from '../makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from '../makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from '../makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from '../makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from '../makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from '../makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from '../makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from '../makedefs', line 335)
+TEE := tee
+# makefile (from '../makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from '../makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from '../makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from '../makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from '../makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from '../makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from '../makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from '../makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from '../makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from '../makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from '../makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from '../makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from '../makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from '../makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = producer_consumer
+# makefile (from '../makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from '../makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from '../makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from '../makedefs', line 343)
+TOUCH := touch
+# makefile (from '../makedefs', line 306)
+ 
+EMULATOR = $(MACH_EMULATOR)
+# environment
+LANG = C
+# makefile (from '../makedefs', line 340)
+TERM := konsole -e
+# makefile (from '../makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from '../makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from '../makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from '../makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 14897): 4 files, 4 impossibilities.
+# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
+# .. (device 2080, inode 1652): 19 files, 2 impossibilities.
+
+# 31 files, 8 impossibilities in 3 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from '../makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from '../makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from '../makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from '../makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from '../makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from '../makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from '../makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from '../makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from '../makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from '../makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from '../makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from '../makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from '../makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from '../makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from '../makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from '../makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from '../makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from '../makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+ 
+#  recipe to execute (from '../makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from '../makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+# Not a target:
+/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:44:06.8804869
+#  File has been updated.
+#  Successfully updated.
+
+config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := config
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# | := 
+# automatic
+# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
+#  recipe to execute (from 'makefile', line 14):
+		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
+	  		
+
+all: /home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h config eposcfg eposcc.conf eposmkbi.conf
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/133=0%
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+ 
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1785899
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+../makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+clean: /home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 56):
+		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
+		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
+		$(CLEAN) *.conf
+
+eposmkbi.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
+		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
+		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
+		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
+		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
+		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
+		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
+		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
+		@echo "NODE_ID=$(NODE_ID)" >> $@
+		@echo "UUID=$(UUID)" >> $@
+
+/home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h:
+#  Implicit rule search has not been done.
+#  Last modified 2022-06-13 09:44:57.4883429
+#  File has been updated.
+#  Successfully updated.
+#  recipe to execute (from 'makefile', line 8):
+		$(error Missing traits file $@ !)
+
+eposcfg: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		(cd $(TLS)/eposcfg && $(MAKE) clean all)
+
+eposcc.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 25):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
+		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
+		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
+		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
+		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
+		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
+		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
+		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
+		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@
+
+# files hash-table stats:
+# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+ 
+# strcache buffers: 1 (0) / strings = 75 / storage = 888 B / avg = 11 B
+# current buf: size = 8162 B / used = 888 B / count = 75 / avg = 11 B
+
+# strcache performance: lookups = 136 / hit rate = 44%
+# hash-table stats:
+# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+# makefile (from 'makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from 'makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from 'makedefs', line 21)
+LMACHNAME := mach
+# makefile (from 'makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from 'makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 311)
+LINK := ln -sf
+# makefile (from 'makedefs', line 329)
+SHELL := bash
+# makefile (from 'makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from 'makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from 'makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from 'makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+ 
+# makefile (from 'makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from 'makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from 'makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from 'makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from 'makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from 'makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 1)
+MAKEFILE_LIST :=  makefile makedefs
+# makefile (from 'makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from 'makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from 'makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from 'makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from 'makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from 'makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from 'makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from 'makefile', line 55)
+TESTS := active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makefile', line 60)
+UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from 'makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from 'makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from 'makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from 'makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from 'makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from 'makedefs', line 273)
+TLD := gcc
+# makefile (from 'makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from 'makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from 'makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from 'makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from 'makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from 'makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from 'makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from 'makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from 'makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from 'makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from 'makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from 'makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from 'makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from 'makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from 'makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from 'makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from 'makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from 'makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from 'makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from 'makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from 'makedefs', line 302)
+DD := dd
+# makefile (from 'makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from 'makedefs', line 22)
+LSYSNAME := sys
+# makefile (from 'makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from 'makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from 'makedefs', line 121)
+pc_FLASHER := 
+# makefile (from 'makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from 'makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from 'makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# makefile (from 'makefile', line 58)
+TESTS_COMPILED := $(subst ,, )
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from 'makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from 'makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from 'makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=producer_consumer
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from 'makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from 'makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from 'makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from 'makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from 'makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 1
+# makefile (from 'makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from 'makedefs', line 316)
+MAKE := make --print-directory
+# default
+MAKECMDGOALS := clean1 prebuild_producer_consumer all1 posbuild_producer_consumer
+# environment
+SHLVL = 2
+# makefile (from 'makedefs', line 299)
+CLEAN := rm -f
+# makefile (from 'makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from 'makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from 'makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from 'makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from 'makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile (from 'makefile', line 56)
+TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from 'makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from 'makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from 'makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from 'makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from 'makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from 'makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from 'makedefs', line 236)
+atmega_EMULATOR = 
+# makefile (from 'makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# makefile (from 'makedefs', line 84)
+BOOT_ROM = 
+# makefile (from 'makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from 'makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from 'makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+ 
+# automatic
+*F = $(notdir $*)
+# makefile (from 'makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from 'makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from 'makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from 'makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from 'makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from 'makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from 'makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from 'makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from 'makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 23)
+LINITNAME := init
+# makefile (from 'makefile', line 59)
+TESTS_FINISHED := 
+# makefile (from 'makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from 'makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from 'makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from 'makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from 'makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from 'makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from 'makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from 'makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from 'makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from 'makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from 'makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from 'makefile', line 61)
+UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from 'makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from 'makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from 'makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from 'makedefs', line 335)
+TEE := tee
+# makefile (from 'makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from 'makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from 'makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from 'makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from 'makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from 'makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from 'makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from 'makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from 'makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from 'makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from 'makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from 'makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from 'makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from 'makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = producer_consumer
+# makefile (from 'makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from 'makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from 'makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from 'makedefs', line 343)
+TOUCH := touch
+# makefile (from 'makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# makefile (from 'makefile', line 5)
+SUBDIRS := etc tools src app img
+# environment
+LANG = C
+# makefile (from 'makedefs', line 340)
+TERM := konsole -e
+# makefile (from 'makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from 'makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from 'makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from 'makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 1652): 19 files, 8 impossibilities.
+
+# 19 files, 8 impossibilities in 1 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from 'makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from 'makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from 'makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from 'makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from 'makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from 'makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+ 
+%.o: %.c
+#  recipe to execute (from 'makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from 'makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from 'makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from 'makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from 'makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from 'makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from 'makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from 'makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from 'makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from 'makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from 'makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from 'makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from 'makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from 'makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+img/producer_consumer.img:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 30):
+		$(MAKE) $(PRECLEAN) all1
+		
+
+all: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		$(MAKE) all1
+
+bin: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 53):
+		$(MAKE) APPLICATION=hello etc tools
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Successfully updated.
+
+.PHONY: prebuild_producer_consumer posbuild_producer_consumer prerun_producer_consumer
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+buildtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 66):
+		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+all1: etc tools src app img
+#  Command line target.
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has not been updated.
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+gittest: buildtest runtest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+debug: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 36):
+		$(MAKE) DEBUG=1 all1 debug1
+
+app: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+test: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 63):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
+		
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+ 
+#  Last modified 2022-06-02 14:19:05.1985899
+#  File has been updated.
+#  Successfully updated.
+
+src: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+debug1: etc img/producer_consumer.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		(cd img && $(MAKE) DEBUG=1 debug)
+
+posbuild_producer_consumer:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 85):
+		@echo " done!"
+
+# Not a target:
+makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+prebuild_producer_consumer:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := prebuild_producer_consumer
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := 
+# automatic
+# | := 
+# automatic
+# < := 
+# automatic
+# ^ := 
+# automatic
+# ? := 
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
+#  recipe to execute (from 'makefile', line 83):
+		@echo -n "Building $(APPLICATION) ..."
+
+etc: FORCE
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  Modification time never checked.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := etc
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+runtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 69):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)
+
+cleantest: cleanapps
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 77):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
+		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;
+
+run: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 23):
+		$(MAKE) run1
+
+clean: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 95):
+		$(MAKE) clean1
+
+veryclean: clean cleanapps cleantest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 109):
+		(cd tools && $(MAKECLEAN))
+		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
+		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;
+
+img: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+ 
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+dist: veryclean
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 121):
+		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
+		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
+		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		$(CLEAN) $(ETC)/license.mk
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
+		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
+		$(CLEAN) $(ETC)/license.as
+
+flash: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 46):
+		$(MAKE) flash1
+
+run1: etc img/producer_consumer.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 27):
+		(cd img && $(MAKE) run1)
+		
+
+clean1: FORCE
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := clean1
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
+#  recipe to execute (from 'makefile', line 99):
+		(cd etc && $(MAKECLEAN))
+		(cd app && $(MAKECLEAN))
+		(cd src && $(MAKECLEAN))
+		(cd img && $(MAKECLEAN))
+		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+
+prerun_producer_consumer:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 89):
+		@echo "Running $(APPLICATION):"
+
+tools: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+flash1: all1
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 50):
+		(cd img && $(MAKE) flash)
+
+cleanapps: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 106):
+		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)
+
+linktest: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 74):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+
+# files hash-table stats:
+# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+ 
+# strcache buffers: 1 (0) / strings = 78 / storage = 650 B / avg = 8 B
+# current buf: size = 8162 B / used = 650 B / count = 78 / avg = 8 B
+
+# strcache performance: lookups = 201 / hit rate = 61%
+# hash-table stats:
+# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --print-directory)
+ 
+# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+# makefile (from '../makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from '../makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from '../makedefs', line 21)
+LMACHNAME := mach
+# makefile (from '../makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from '../makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 311)
+LINK := ln -sf
+# makefile (from '../makedefs', line 329)
+SHELL := bash
+# makefile (from '../makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from '../makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from '../makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from '../makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from '../makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from '../makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from '../makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from '../makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from '../makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from '../makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 1)
+MAKEFILE_LIST :=  makefile ../makedefs
+# makefile (from '../makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from '../makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from '../makedefs', line 10)
+ 
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from '../makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from '../makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from '../makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from '../makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from '../makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from '../makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from '../makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from '../makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from '../makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from '../makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from '../makedefs', line 273)
+TLD := gcc
+# makefile (from '../makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from '../makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from '../makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from '../makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from '../makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from '../makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from '../makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from '../makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from '../makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from '../makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from '../makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from '../makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from '../makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from '../makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from '../makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from '../makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from '../makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from '../makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from '../makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from '../makedefs', line 302)
+DD := dd
+# makefile (from '../makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from '../makedefs', line 22)
+LSYSNAME := sys
+# makefile (from '../makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from '../makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from '../makedefs', line 121)
+pc_FLASHER := 
+# makefile (from '../makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from '../makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from '../makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from '../makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from '../makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from '../makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=pmu
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from '../makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from '../makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from '../makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from '../makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from '../makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 2
+# makefile (from '../makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from '../makedefs', line 316)
+MAKE := make --print-directory
+# environment
+SHLVL = 3
+# makefile (from '../makedefs', line 299)
+CLEAN := rm -f
+# makefile (from '../makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from '../makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from '../makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from '../makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from '../makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from '../makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from '../makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from '../makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from '../makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from '../makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from '../makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from '../makedefs', line 236)
+atmega_EMULATOR = 
+# environment
+OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 84)
+BOOT_ROM = 
+# makefile (from '../makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from '../makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from '../makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from '../makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from '../makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from '../makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from '../makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from '../makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from '../makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from '../makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from '../makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from '../makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 23)
+LINITNAME := init
+# makefile (from '../makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from '../makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from '../makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+ 
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from '../makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from '../makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from '../makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from '../makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from '../makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from '../makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from '../makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from '../makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from '../makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from '../makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from '../makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from '../makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from '../makedefs', line 335)
+TEE := tee
+# makefile (from '../makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from '../makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from '../makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from '../makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from '../makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from '../makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from '../makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from '../makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from '../makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from '../makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from '../makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from '../makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from '../makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from '../makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = pmu
+# makefile (from '../makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from '../makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from '../makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from '../makedefs', line 343)
+TOUCH := touch
+# makefile (from '../makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# environment
+LANG = C
+# makefile (from '../makedefs', line 340)
+TERM := konsole -e
+# makefile (from '../makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from '../makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from '../makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from '../makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 14897): 4 files, 4 impossibilities.
+# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
+# .. (device 2080, inode 1652): 19 files, 2 impossibilities.
+
+# 31 files, 8 impossibilities in 3 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from '../makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from '../makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from '../makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from '../makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from '../makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from '../makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from '../makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from '../makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from '../makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from '../makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from '../makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from '../makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from '../makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from '../makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from '../makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from '../makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from '../makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from '../makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from '../makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from '../makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+# Not a target:
+/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:44:06.8804869
+#  File has been updated.
+#  Successfully updated.
+
+config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+#  Implicit rule search has not been done.
+ 
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := config
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# | := 
+# automatic
+# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
+#  recipe to execute (from 'makefile', line 14):
+		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
+	  		
+
+all: /home/felipe/git/UFSC/SO-II/ine5424/app/pmu/pmu_traits.h config eposcfg eposcc.conf eposmkbi.conf
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/133=0%
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+/home/felipe/git/UFSC/SO-II/ine5424/app/pmu/pmu_traits.h:
+#  Implicit rule search has not been done.
+#  Last modified 2022-06-13 09:44:57.4383429
+#  File has been updated.
+#  Successfully updated.
+#  recipe to execute (from 'makefile', line 8):
+		$(error Missing traits file $@ !)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1785899
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+../makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+clean: /home/felipe/git/UFSC/SO-II/ine5424/app/pmu/pmu_traits.h
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 56):
+		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
+		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
+		$(CLEAN) *.conf
+
+eposmkbi.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
+		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
+		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
+		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
+		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
+		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
+		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
+		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
+		@echo "NODE_ID=$(NODE_ID)" >> $@
+		@echo "UUID=$(UUID)" >> $@
+
+eposcfg: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		(cd $(TLS)/eposcfg && $(MAKE) clean all)
+
+eposcc.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 25):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
+		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
+		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
+		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
+		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
+		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
+		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
+		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
+		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@
+
+# files hash-table stats:
+# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 75 / storage = 860 B / avg = 11 B
+# current buf: size = 8162 B / used = 860 B / count = 75 / avg = 11 B
+
+# strcache performance: lookups = 136 / hit rate = 44%
+# hash-table stats:
+# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+# makefile (from 'makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from 'makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from 'makedefs', line 21)
+LMACHNAME := mach
+# makefile (from 'makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from 'makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 311)
+LINK := ln -sf
+# makefile (from 'makedefs', line 329)
+SHELL := bash
+# makefile (from 'makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from 'makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from 'makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from 'makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from 'makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from 'makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from 'makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from 'makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from 'makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from 'makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 1)
+MAKEFILE_LIST :=  makefile makedefs
+# makefile (from 'makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from 'makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from 'makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from 'makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from 'makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from 'makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from 'makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from 'makefile', line 55)
+TESTS := active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makefile', line 60)
+UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from 'makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from 'makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from 'makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from 'makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from 'makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from 'makedefs', line 273)
+TLD := gcc
+# makefile (from 'makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from 'makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from 'makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from 'makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from 'makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from 'makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from 'makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from 'makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from 'makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from 'makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from 'makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from 'makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from 'makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from 'makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from 'makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from 'makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from 'makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from 'makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from 'makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from 'makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from 'makedefs', line 302)
+DD := dd
+# makefile (from 'makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from 'makedefs', line 22)
+LSYSNAME := sys
+# makefile (from 'makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from 'makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from 'makedefs', line 121)
+pc_FLASHER := 
+# makefile (from 'makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from 'makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from 'makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# makefile (from 'makefile', line 58)
+TESTS_COMPILED := $(subst ,, )
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from 'makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from 'makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from 'makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=pmu
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from 'makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from 'makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from 'makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from 'makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from 'makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 1
+# makefile (from 'makedefs', line 238)
+ 
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from 'makedefs', line 316)
+MAKE := make --print-directory
+# default
+MAKECMDGOALS := clean1 prebuild_pmu all1 posbuild_pmu
+# environment
+SHLVL = 2
+# makefile (from 'makedefs', line 299)
+CLEAN := rm -f
+# makefile (from 'makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from 'makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from 'makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from 'makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from 'makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile (from 'makefile', line 56)
+TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from 'makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from 'makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from 'makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from 'makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from 'makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from 'makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from 'makedefs', line 236)
+atmega_EMULATOR = 
+# makefile (from 'makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# makefile (from 'makedefs', line 84)
+BOOT_ROM = 
+# makefile (from 'makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from 'makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from 'makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from 'makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from 'makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from 'makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from 'makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from 'makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from 'makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from 'makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from 'makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from 'makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 23)
+LINITNAME := init
+# makefile (from 'makefile', line 59)
+TESTS_FINISHED := 
+# makefile (from 'makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from 'makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from 'makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from 'makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from 'makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from 'makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from 'makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from 'makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from 'makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from 'makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from 'makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from 'makefile', line 61)
+UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from 'makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from 'makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from 'makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from 'makedefs', line 335)
+TEE := tee
+# makefile (from 'makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from 'makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from 'makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from 'makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from 'makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from 'makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from 'makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from 'makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from 'makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from 'makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from 'makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from 'makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from 'makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from 'makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = pmu
+# makefile (from 'makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from 'makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from 'makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from 'makedefs', line 343)
+TOUCH := touch
+# makefile (from 'makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# makefile (from 'makefile', line 5)
+SUBDIRS := etc tools src app img
+# environment
+LANG = C
+# makefile (from 'makedefs', line 340)
+TERM := konsole -e
+# makefile (from 'makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from 'makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from 'makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from 'makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 1652): 19 files, 8 impossibilities.
+
+# 19 files, 8 impossibilities in 1 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from 'makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from 'makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from 'makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from 'makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from 'makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from 'makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from 'makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from 'makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from 'makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from 'makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from 'makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from 'makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from 'makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from 'makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from 'makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from 'makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from 'makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from 'makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from 'makedefs', line 406):
+ 
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from 'makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+all: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		$(MAKE) all1
+
+bin: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 53):
+		$(MAKE) APPLICATION=hello etc tools
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Successfully updated.
+
+.PHONY: prebuild_pmu posbuild_pmu prerun_pmu
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+buildtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 66):
+		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+posbuild_pmu:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 85):
+		@echo " done!"
+
+prebuild_pmu:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := prebuild_pmu
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := 
+# automatic
+# | := 
+# automatic
+# < := 
+# automatic
+# ^ := 
+# automatic
+# ? := 
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
+#  recipe to execute (from 'makefile', line 83):
+		@echo -n "Building $(APPLICATION) ..."
+
+all1: etc tools src app img
+#  Command line target.
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has not been updated.
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+gittest: buildtest runtest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+debug: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 36):
+		$(MAKE) DEBUG=1 all1 debug1
+
+app: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+test: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 63):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
+		
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1985899
+#  File has been updated.
+#  Successfully updated.
+
+src: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+debug1: etc img/pmu.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		(cd img && $(MAKE) DEBUG=1 debug)
+
+# Not a target:
+makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+prerun_pmu:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 89):
+		@echo "Running $(APPLICATION):"
+
+etc: FORCE
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  Modification time never checked.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := etc
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+runtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 69):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)
+
+cleantest: cleanapps
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 77):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
+		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;
+
+run: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 23):
+		$(MAKE) run1
+
+clean: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 95):
+		$(MAKE) clean1
+
+veryclean: clean cleanapps cleantest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 109):
+		(cd tools && $(MAKECLEAN))
+		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
+		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;
+
+img: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+dist: veryclean
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 121):
+		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
+		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
+		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		$(CLEAN) $(ETC)/license.mk
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
+		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
+		$(CLEAN) $(ETC)/license.as
+
+img/pmu.img:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 30):
+		$(MAKE) $(PRECLEAN) all1
+ 
+		
+
+flash: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 46):
+		$(MAKE) flash1
+
+run1: etc img/pmu.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 27):
+		(cd img && $(MAKE) run1)
+		
+
+clean1: FORCE
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := clean1
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
+#  recipe to execute (from 'makefile', line 99):
+		(cd etc && $(MAKECLEAN))
+		(cd app && $(MAKECLEAN))
+		(cd src && $(MAKECLEAN))
+		(cd img && $(MAKECLEAN))
+		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+
+tools: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+flash1: all1
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 50):
+		(cd img && $(MAKE) flash)
+
+cleanapps: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 106):
+		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)
+
+linktest: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 74):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+
+# files hash-table stats:
+# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 78 / storage = 594 B / avg = 7 B
+# current buf: size = 8162 B / used = 594 B / count = 78 / avg = 7 B
+
+# strcache performance: lookups = 201 / hit rate = 61%
+# hash-table stats:
+# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --print-directory)
+ 
+# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+ 
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+# makefile (from '../makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from '../makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from '../makedefs', line 21)
+LMACHNAME := mach
+# makefile (from '../makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from '../makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 311)
+LINK := ln -sf
+# makefile (from '../makedefs', line 329)
+SHELL := bash
+# makefile (from '../makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from '../makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from '../makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from '../makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from '../makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from '../makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from '../makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from '../makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from '../makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from '../makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 1)
+MAKEFILE_LIST :=  makefile ../makedefs
+# makefile (from '../makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from '../makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from '../makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from '../makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from '../makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from '../makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from '../makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from '../makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from '../makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from '../makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from '../makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from '../makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from '../makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from '../makedefs', line 273)
+TLD := gcc
+# makefile (from '../makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from '../makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from '../makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from '../makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from '../makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from '../makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from '../makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from '../makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from '../makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from '../makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from '../makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from '../makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from '../makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from '../makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from '../makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from '../makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from '../makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from '../makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from '../makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from '../makedefs', line 302)
+DD := dd
+# makefile (from '../makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from '../makedefs', line 22)
+LSYSNAME := sys
+# makefile (from '../makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from '../makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from '../makedefs', line 121)
+pc_FLASHER := 
+# makefile (from '../makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from '../makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from '../makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from '../makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from '../makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from '../makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=philosophers_dinner
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from '../makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from '../makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from '../makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from '../makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from '../makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 2
+# makefile (from '../makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from '../makedefs', line 316)
+MAKE := make --print-directory
+# environment
+SHLVL = 3
+# makefile (from '../makedefs', line 299)
+CLEAN := rm -f
+# makefile (from '../makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from '../makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from '../makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from '../makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from '../makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from '../makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from '../makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from '../makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from '../makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from '../makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from '../makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from '../makedefs', line 236)
+atmega_EMULATOR = 
+# environment
+OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 84)
+BOOT_ROM = 
+# makefile (from '../makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from '../makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from '../makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from '../makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from '../makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from '../makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from '../makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from '../makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from '../makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from '../makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from '../makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from '../makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 23)
+LINITNAME := init
+# makefile (from '../makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from '../makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from '../makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from '../makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from '../makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from '../makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from '../makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from '../makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from '../makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from '../makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from '../makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from '../makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from '../makedefs', line 214)
+ 
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from '../makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from '../makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from '../makedefs', line 335)
+TEE := tee
+# makefile (from '../makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from '../makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from '../makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from '../makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from '../makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from '../makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from '../makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from '../makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from '../makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from '../makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from '../makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from '../makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from '../makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from '../makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = philosophers_dinner
+# makefile (from '../makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from '../makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from '../makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from '../makedefs', line 343)
+TOUCH := touch
+# makefile (from '../makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# environment
+LANG = C
+# makefile (from '../makedefs', line 340)
+TERM := konsole -e
+# makefile (from '../makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from '../makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from '../makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from '../makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 14897): 4 files, 4 impossibilities.
+# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
+# .. (device 2080, inode 1652): 19 files, 2 impossibilities.
+
+# 31 files, 8 impossibilities in 3 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from '../makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from '../makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from '../makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from '../makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from '../makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from '../makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from '../makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from '../makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from '../makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from '../makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from '../makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from '../makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from '../makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from '../makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from '../makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from '../makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from '../makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from '../makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from '../makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from '../makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+/home/felipe/git/UFSC/SO-II/ine5424/app/philosophers_dinner/philosophers_dinner_traits.h:
+#  Implicit rule search has not been done.
+#  Last modified 2022-06-13 09:44:57.3683429
+#  File has been updated.
+#  Successfully updated.
+#  recipe to execute (from 'makefile', line 8):
+		$(error Missing traits file $@ !)
+
+# Not a target:
+/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:44:06.8804869
+#  File has been updated.
+#  Successfully updated.
+
+config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := config
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# | := 
+# automatic
+# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
+#  recipe to execute (from 'makefile', line 14):
+		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
+ 
+		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
+	  		
+
+all: /home/felipe/git/UFSC/SO-II/ine5424/app/philosophers_dinner/philosophers_dinner_traits.h config eposcfg eposcc.conf eposmkbi.conf
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/133=0%
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1785899
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+../makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+clean: /home/felipe/git/UFSC/SO-II/ine5424/app/philosophers_dinner/philosophers_dinner_traits.h
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 56):
+		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
+		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
+		$(CLEAN) *.conf
+
+eposmkbi.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
+		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
+		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
+		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
+		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
+		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
+		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
+		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
+		@echo "NODE_ID=$(NODE_ID)" >> $@
+		@echo "UUID=$(UUID)" >> $@
+
+eposcfg: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		(cd $(TLS)/eposcfg && $(MAKE) clean all)
+
+eposcc.conf: FORCE
+#  Implicit rule search has not been done.
+ 
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 25):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
+		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
+		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
+		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
+		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
+		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
+		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
+		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
+		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@
+
+# files hash-table stats:
+# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 75 / storage = 892 B / avg = 11 B
+# current buf: size = 8162 B / used = 892 B / count = 75 / avg = 11 B
+
+# strcache performance: lookups = 136 / hit rate = 44%
+# hash-table stats:
+# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:34 2022
+
+# Variables
+
+# makefile (from 'makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from 'makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from 'makedefs', line 21)
+LMACHNAME := mach
+# makefile (from 'makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from 'makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 311)
+LINK := ln -sf
+# makefile (from 'makedefs', line 329)
+SHELL := bash
+# makefile (from 'makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from 'makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from 'makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from 'makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from 'makedefs', line 92)
+ 
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from 'makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from 'makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from 'makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from 'makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from 'makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 1)
+MAKEFILE_LIST :=  makefile makedefs
+# makefile (from 'makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from 'makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from 'makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from 'makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from 'makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from 'makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from 'makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from 'makefile', line 55)
+TESTS := active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makefile', line 60)
+UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from 'makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from 'makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from 'makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from 'makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from 'makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from 'makedefs', line 273)
+TLD := gcc
+# makefile (from 'makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from 'makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from 'makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from 'makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from 'makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from 'makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from 'makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from 'makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from 'makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from 'makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from 'makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from 'makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from 'makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from 'makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from 'makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from 'makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from 'makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from 'makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from 'makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from 'makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from 'makedefs', line 302)
+DD := dd
+# makefile (from 'makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from 'makedefs', line 22)
+LSYSNAME := sys
+# makefile (from 'makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from 'makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from 'makedefs', line 121)
+pc_FLASHER := 
+# makefile (from 'makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from 'makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from 'makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# makefile (from 'makefile', line 58)
+TESTS_COMPILED := $(subst ,, )
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from 'makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from 'makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from 'makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=philosophers_dinner
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from 'makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from 'makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from 'makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from 'makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from 'makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 1
+# makefile (from 'makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from 'makedefs', line 316)
+MAKE := make --print-directory
+# default
+MAKECMDGOALS := clean1 prebuild_philosophers_dinner all1 posbuild_philosophers_dinner
+# environment
+SHLVL = 2
+# makefile (from 'makedefs', line 299)
+CLEAN := rm -f
+# makefile (from 'makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from 'makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from 'makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from 'makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from 'makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile (from 'makefile', line 56)
+TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from 'makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from 'makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from 'makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from 'makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from 'makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from 'makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from 'makedefs', line 236)
+atmega_EMULATOR = 
+# makefile (from 'makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# makefile (from 'makedefs', line 84)
+BOOT_ROM = 
+# makefile (from 'makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from 'makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from 'makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from 'makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from 'makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from 'makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from 'makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from 'makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from 'makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from 'makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from 'makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from 'makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 23)
+LINITNAME := init
+# makefile (from 'makefile', line 59)
+TESTS_FINISHED := 
+# makefile (from 'makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from 'makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from 'makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from 'makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from 'makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from 'makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from 'makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from 'makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from 'makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from 'makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from 'makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from 'makefile', line 61)
+UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from 'makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from 'makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from 'makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from 'makedefs', line 335)
+TEE := tee
+# makefile (from 'makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from 'makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from 'makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from 'makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from 'makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from 'makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from 'makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from 'makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from 'makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from 'makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from 'makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from 'makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from 'makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from 'makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = philosophers_dinner
+# makefile (from 'makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from 'makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from 'makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from 'makedefs', line 343)
+TOUCH := touch
+# makefile (from 'makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# makefile (from 'makefile', line 5)
+SUBDIRS := etc tools src app img
+# environment
+LANG = C
+# makefile (from 'makedefs', line 340)
+TERM := konsole -e
+# makefile (from 'makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from 'makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from 'makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from 'makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 1652): 19 files, 8 impossibilities.
+
+# 19 files, 8 impossibilities in 1 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from 'makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from 'makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from 'makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from 'makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from 'makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from 'makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from 'makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from 'makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from 'makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from 'makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from 'makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from 'makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from 'makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from 'makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+ 
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from 'makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from 'makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from 'makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from 'makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from 'makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from 'makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+all: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		$(MAKE) all1
+
+bin: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 53):
+		$(MAKE) APPLICATION=hello etc tools
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Successfully updated.
+
+.PHONY: prebuild_philosophers_dinner posbuild_philosophers_dinner prerun_philosophers_dinner
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+buildtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 66):
+		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+img/philosophers_dinner.img:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 30):
+		$(MAKE) $(PRECLEAN) all1
+		
+
+all1: etc tools src app img
+#  Command line target.
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has not been updated.
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+gittest: buildtest runtest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+debug: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 36):
+		$(MAKE) DEBUG=1 all1 debug1
+
+app: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+test: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 63):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
+		
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1985899
+#  File has been updated.
+#  Successfully updated.
+
+src: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+debug1: etc img/philosophers_dinner.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		(cd img && $(MAKE) DEBUG=1 debug)
+
+# Not a target:
+makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+etc: FORCE
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  Modification time never checked.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := etc
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+posbuild_philosophers_dinner:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 85):
+		@echo " done!"
+
+runtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 69):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)
+
+cleantest: cleanapps
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 77):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
+		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;
+
+run: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 23):
+		$(MAKE) run1
+
+prebuild_philosophers_dinner:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := prebuild_philosophers_dinner
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := 
+# automatic
+# | := 
+# automatic
+# < := 
+# automatic
+# ^ := 
+# automatic
+# ? := 
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
+#  recipe to execute (from 'makefile', line 83):
+		@echo -n "Building $(APPLICATION) ..."
+
+clean: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 95):
+		$(MAKE) clean1
+
+veryclean: clean cleanapps cleantest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 109):
+		(cd tools && $(MAKECLEAN))
+		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
+		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;
+
+img: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+dist: veryclean
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 121):
+		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
+		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
+		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		$(CLEAN) $(ETC)/license.mk
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
+		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
+		$(CLEAN) $(ETC)/license.as
+
+flash: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 46):
+		$(MAKE) flash1
+
+run1: etc img/philosophers_dinner.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 27):
+		(cd img && $(MAKE) run1)
+		
+
+clean1: FORCE
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := clean1
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
+#  recipe to execute (from 'makefile', line 99):
+		(cd etc && $(MAKECLEAN))
+		(cd app && $(MAKECLEAN))
+		(cd src && $(MAKECLEAN))
+		(cd img && $(MAKECLEAN))
+		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+
+tools: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+flash1: all1
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 50):
+		(cd img && $(MAKE) flash)
+
+cleanapps: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 106):
+		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)
+
+prerun_philosophers_dinner:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 89):
+		@echo "Running $(APPLICATION):"
+
+linktest: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 74):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+
+# files hash-table stats:
+# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 78 / storage = 658 B / avg = 8 B
+# current buf: size = 8162 B / used = 658 B / count = 78 / avg = 8 B
+
+# strcache performance: lookups = 201 / hit rate = 61%
+# hash-table stats:
+# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
+# Finished Make data base on Sat Jun 25 13:00:34 2022
+
+# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --print-directory)
+ 
+# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:35 2022
+
+# Variables
+
+# makefile (from '../makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from '../makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from '../makedefs', line 21)
+LMACHNAME := mach
+# makefile (from '../makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from '../makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 311)
+LINK := ln -sf
+# makefile (from '../makedefs', line 329)
+SHELL := bash
+# makefile (from '../makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from '../makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from '../makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from '../makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from '../makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from '../makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from '../makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from '../makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from '../makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from '../makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 1)
+MAKEFILE_LIST :=  makefile ../makedefs
+# makefile (from '../makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from '../makedefs', line 310)
+INSTALL := install
+ 
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from '../makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from '../makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from '../makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from '../makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from '../makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from '../makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from '../makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from '../makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from '../makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from '../makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from '../makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from '../makedefs', line 273)
+TLD := gcc
+# makefile (from '../makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from '../makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from '../makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from '../makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from '../makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from '../makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from '../makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from '../makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from '../makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from '../makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from '../makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from '../makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from '../makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from '../makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from '../makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from '../makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from '../makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from '../makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from '../makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from '../makedefs', line 302)
+DD := dd
+# makefile (from '../makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from '../makedefs', line 22)
+LSYSNAME := sys
+# makefile (from '../makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from '../makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from '../makedefs', line 121)
+pc_FLASHER := 
+# makefile (from '../makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from '../makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from '../makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from '../makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from '../makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from '../makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=hello
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from '../makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from '../makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from '../makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from '../makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from '../makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 2
+# makefile (from '../makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from '../makedefs', line 316)
+MAKE := make --print-directory
+# environment
+SHLVL = 3
+# makefile (from '../makedefs', line 299)
+CLEAN := rm -f
+# makefile (from '../makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from '../makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from '../makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from '../makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from '../makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from '../makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from '../makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from '../makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from '../makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from '../makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from '../makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from '../makedefs', line 236)
+atmega_EMULATOR = 
+# environment
+OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 84)
+BOOT_ROM = 
+# makefile (from '../makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from '../makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from '../makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from '../makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from '../makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from '../makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from '../makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from '../makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from '../makedefs', line 245)
+ 
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from '../makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from '../makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from '../makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 23)
+LINITNAME := init
+# makefile (from '../makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from '../makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from '../makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from '../makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from '../makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from '../makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from '../makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from '../makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from '../makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from '../makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from '../makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from '../makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from '../makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from '../makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from '../makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from '../makedefs', line 335)
+TEE := tee
+# makefile (from '../makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from '../makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from '../makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from '../makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from '../makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from '../makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from '../makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from '../makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from '../makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from '../makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from '../makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from '../makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from '../makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from '../makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = hello
+# makefile (from '../makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from '../makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from '../makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from '../makedefs', line 343)
+TOUCH := touch
+# makefile (from '../makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# environment
+LANG = C
+# makefile (from '../makedefs', line 340)
+TERM := konsole -e
+# makefile (from '../makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from '../makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from '../makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from '../makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 14897): 4 files, 4 impossibilities.
+# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
+# .. (device 2080, inode 1652): 19 files, 2 impossibilities.
+
+# 31 files, 8 impossibilities in 3 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from '../makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from '../makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from '../makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from '../makedefs', line 357):
+ 
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from '../makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from '../makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from '../makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from '../makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from '../makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from '../makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from '../makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from '../makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from '../makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from '../makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from '../makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from '../makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from '../makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from '../makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from '../makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from '../makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+# Not a target:
+/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:44:06.8804869
+#  File has been updated.
+#  Successfully updated.
+
+config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := config
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# | := 
+# automatic
+# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
+#  recipe to execute (from 'makefile', line 14):
+		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
+	  		
+
+all: /home/felipe/git/UFSC/SO-II/ine5424/app/hello/hello_traits.h config eposcfg eposcc.conf eposmkbi.conf
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/133=0%
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+ 
+#  File has not been updated.
+
+/home/felipe/git/UFSC/SO-II/ine5424/app/hello/hello_traits.h:
+#  Implicit rule search has not been done.
+#  Last modified 2022-06-13 09:44:57.3683429
+#  File has been updated.
+#  Successfully updated.
+#  recipe to execute (from 'makefile', line 8):
+		$(error Missing traits file $@ !)
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1785899
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+../makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+clean: /home/felipe/git/UFSC/SO-II/ine5424/app/hello/hello_traits.h
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 56):
+		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
+		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
+		$(CLEAN) *.conf
+
+eposmkbi.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
+		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
+		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
+		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
+		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
+		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
+		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
+		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
+		@echo "NODE_ID=$(NODE_ID)" >> $@
+		@echo "UUID=$(UUID)" >> $@
+
+eposcfg: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		(cd $(TLS)/eposcfg && $(MAKE) clean all)
+
+eposcc.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 25):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
+		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
+		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
+		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
+		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
+		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
+		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
+		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
+		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@
+
+# files hash-table stats:
+# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 75 / storage = 864 B / avg = 11 B
+# current buf: size = 8162 B / used = 864 B / count = 75 / avg = 11 B
+
+# strcache performance: lookups = 136 / hit rate = 44%
+# hash-table stats:
+# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
+# Finished Make data base on Sat Jun 25 13:00:35 2022
+
+# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:35 2022
+
+# Variables
+
+# makefile (from 'makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from 'makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from 'makedefs', line 21)
+LMACHNAME := mach
+# makefile (from 'makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from 'makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 311)
+LINK := ln -sf
+# makefile (from 'makedefs', line 329)
+SHELL := bash
+# makefile (from 'makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from 'makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from 'makedefs', line 300)
+CLEANDIR := rm -rf
+ 
+# makefile (from 'makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from 'makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from 'makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from 'makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from 'makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from 'makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from 'makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 1)
+MAKEFILE_LIST :=  makefile makedefs
+# makefile (from 'makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from 'makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from 'makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from 'makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from 'makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from 'makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from 'makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from 'makefile', line 55)
+TESTS := active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makefile', line 60)
+UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from 'makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from 'makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from 'makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from 'makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from 'makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from 'makedefs', line 273)
+TLD := gcc
+# makefile (from 'makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from 'makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from 'makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from 'makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from 'makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from 'makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from 'makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from 'makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from 'makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from 'makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from 'makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from 'makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from 'makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from 'makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from 'makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from 'makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from 'makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from 'makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from 'makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from 'makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from 'makedefs', line 302)
+DD := dd
+# makefile (from 'makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from 'makedefs', line 22)
+LSYSNAME := sys
+# makefile (from 'makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from 'makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from 'makedefs', line 121)
+pc_FLASHER := 
+# makefile (from 'makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from 'makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from 'makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# makefile (from 'makefile', line 58)
+TESTS_COMPILED := $(subst ,, )
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from 'makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from 'makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from 'makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=hello
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from 'makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from 'makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from 'makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from 'makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from 'makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 1
+# makefile (from 'makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from 'makedefs', line 316)
+MAKE := make --print-directory
+# default
+MAKECMDGOALS := clean1 prebuild_hello all1 posbuild_hello
+# environment
+SHLVL = 2
+# makefile (from 'makedefs', line 299)
+CLEAN := rm -f
+# makefile (from 'makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from 'makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from 'makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from 'makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from 'makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile (from 'makefile', line 56)
+TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from 'makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from 'makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from 'makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from 'makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from 'makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from 'makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from 'makedefs', line 236)
+atmega_EMULATOR = 
+# makefile (from 'makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# makefile (from 'makedefs', line 84)
+BOOT_ROM = 
+# makefile (from 'makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from 'makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from 'makedefs', line 106)
+ 
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from 'makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from 'makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from 'makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from 'makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from 'makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from 'makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from 'makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from 'makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from 'makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 23)
+LINITNAME := init
+# makefile (from 'makefile', line 59)
+TESTS_FINISHED := 
+# makefile (from 'makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from 'makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from 'makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from 'makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from 'makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from 'makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from 'makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from 'makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from 'makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from 'makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from 'makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from 'makefile', line 61)
+UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from 'makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from 'makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from 'makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from 'makedefs', line 335)
+TEE := tee
+# makefile (from 'makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from 'makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from 'makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from 'makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from 'makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from 'makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from 'makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from 'makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from 'makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from 'makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from 'makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from 'makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from 'makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from 'makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = hello
+# makefile (from 'makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from 'makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from 'makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from 'makedefs', line 343)
+TOUCH := touch
+# makefile (from 'makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# makefile (from 'makefile', line 5)
+SUBDIRS := etc tools src app img
+# environment
+LANG = C
+# makefile (from 'makedefs', line 340)
+TERM := konsole -e
+# makefile (from 'makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from 'makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from 'makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from 'makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 1652): 19 files, 8 impossibilities.
+
+# 19 files, 8 impossibilities in 1 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from 'makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from 'makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from 'makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+ 
+%_test.o: %_test.c
+#  recipe to execute (from 'makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from 'makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from 'makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from 'makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from 'makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from 'makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from 'makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from 'makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from 'makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from 'makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from 'makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from 'makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from 'makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from 'makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from 'makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from 'makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from 'makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+prerun_hello:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 89):
+		@echo "Running $(APPLICATION):"
+
+all: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		$(MAKE) all1
+
+bin: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 53):
+		$(MAKE) APPLICATION=hello etc tools
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Successfully updated.
+
+.PHONY: prebuild_hello posbuild_hello prerun_hello
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+buildtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 66):
+		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+all1: etc tools src app img
+#  Command line target.
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has not been updated.
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+gittest: buildtest runtest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+debug: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+ 
+#  recipe to execute (from 'makefile', line 36):
+		$(MAKE) DEBUG=1 all1 debug1
+
+app: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+test: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 63):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
+		
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1985899
+#  File has been updated.
+#  Successfully updated.
+
+img/hello.img:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 30):
+		$(MAKE) $(PRECLEAN) all1
+		
+
+src: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+debug1: etc img/hello.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		(cd img && $(MAKE) DEBUG=1 debug)
+
+# Not a target:
+makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+etc: FORCE
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  Modification time never checked.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := etc
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+runtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 69):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)
+
+cleantest: cleanapps
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 77):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
+		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;
+
+run: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 23):
+		$(MAKE) run1
+
+posbuild_hello:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 85):
+		@echo " done!"
+
+clean: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 95):
+ 
+		$(MAKE) clean1
+
+veryclean: clean cleanapps cleantest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 109):
+		(cd tools && $(MAKECLEAN))
+		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
+		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;
+
+img: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+dist: veryclean
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 121):
+		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
+		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
+		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		$(CLEAN) $(ETC)/license.mk
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
+		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
+		$(CLEAN) $(ETC)/license.as
+
+prebuild_hello:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := prebuild_hello
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := 
+# automatic
+# | := 
+# automatic
+# < := 
+# automatic
+# ^ := 
+# automatic
+# ? := 
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
+#  recipe to execute (from 'makefile', line 83):
+		@echo -n "Building $(APPLICATION) ..."
+
+flash: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 46):
+		$(MAKE) flash1
+
+run1: etc img/hello.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 27):
+		(cd img && $(MAKE) run1)
+		
+
+clean1: FORCE
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := clean1
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
+#  recipe to execute (from 'makefile', line 99):
+		(cd etc && $(MAKECLEAN))
+		(cd app && $(MAKECLEAN))
+		(cd src && $(MAKECLEAN))
+		(cd img && $(MAKECLEAN))
+		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+
+tools: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+flash1: all1
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 50):
+		(cd img && $(MAKE) flash)
+
+cleanapps: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 106):
+		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)
+
+linktest: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 74):
+ 
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+
+# files hash-table stats:
+# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 78 / storage = 602 B / avg = 7 B
+# current buf: size = 8162 B / used = 602 B / count = 78 / avg = 7 B
+
+# strcache performance: lookups = 201 / hit rate = 61%
+# hash-table stats:
+# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
+# Finished Make data base on Sat Jun 25 13:00:35 2022
+
+# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+(cd etc && make --print-directory)
+ 
+# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:35 2022
+
+# Variables
+
+# makefile (from '../makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from '../makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from '../makedefs', line 21)
+LMACHNAME := mach
+# makefile (from '../makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from '../makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 311)
+LINK := ln -sf
+# makefile (from '../makedefs', line 329)
+SHELL := bash
+# makefile (from '../makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from '../makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from '../makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from '../makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from '../makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from '../makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from '../makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from '../makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from '../makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from '../makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 1)
+MAKEFILE_LIST :=  makefile ../makedefs
+# makefile (from '../makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from '../makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from '../makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from '../makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from '../makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+ 
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from '../makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from '../makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from '../makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from '../makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from '../makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from '../makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from '../makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from '../makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from '../makedefs', line 273)
+TLD := gcc
+# makefile (from '../makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from '../makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from '../makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from '../makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from '../makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from '../makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from '../makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from '../makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from '../makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from '../makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from '../makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from '../makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from '../makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from '../makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from '../makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from '../makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from '../makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from '../makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from '../makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from '../makedefs', line 302)
+DD := dd
+# makefile (from '../makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# makefile (from '../makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from '../makedefs', line 22)
+LSYSNAME := sys
+# makefile (from '../makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from '../makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
+# makefile (from '../makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from '../makedefs', line 121)
+pc_FLASHER := 
+# makefile (from '../makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from '../makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from '../makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from '../makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from '../makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from '../makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=alarm
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from '../makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from '../makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from '../makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from '../makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from '../makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from '../makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 2
+# makefile (from '../makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from '../makedefs', line 316)
+MAKE := make --print-directory
+# environment
+SHLVL = 3
+# makefile (from '../makedefs', line 299)
+CLEAN := rm -f
+# makefile (from '../makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from '../makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from '../makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from '../makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from '../makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from '../makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from '../makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from '../makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from '../makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from '../makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from '../makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from '../makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from '../makedefs', line 236)
+atmega_EMULATOR = 
+# environment
+OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 84)
+BOOT_ROM = 
+# makefile (from '../makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from '../makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from '../makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from '../makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from '../makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from '../makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from '../makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from '../makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from '../makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from '../makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from '../makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from '../makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from '../makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from '../makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from '../makedefs', line 23)
+LINITNAME := init
+# makefile (from '../makedefs', line 72)
+ 
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from '../makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from '../makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from '../makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from '../makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from '../makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from '../makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from '../makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from '../makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from '../makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from '../makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from '../makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from '../makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from '../makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from '../makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from '../makedefs', line 335)
+TEE := tee
+# makefile (from '../makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from '../makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from '../makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from '../makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from '../makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from '../makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from '../makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from '../makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from '../makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from '../makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from '../makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from '../makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from '../makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from '../makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = alarm
+# makefile (from '../makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from '../makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from '../makedefs', line 246)
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from '../makedefs', line 343)
+TOUCH := touch
+# makefile (from '../makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# environment
+LANG = C
+# makefile (from '../makedefs', line 340)
+TERM := konsole -e
+# makefile (from '../makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from '../makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from '../makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from '../makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 14897): 4 files, 4 impossibilities.
+# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
+# .. (device 2080, inode 1652): 19 files, 2 impossibilities.
+
+# 31 files, 8 impossibilities in 3 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from '../makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from '../makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from '../makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from '../makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from '../makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from '../makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from '../makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from '../makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from '../makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from '../makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from '../makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from '../makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from '../makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from '../makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from '../makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from '../makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from '../makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from '../makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from '../makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from '../makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+# Not a target:
+/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:44:06.8804869
+#  File has been updated.
+#  Successfully updated.
+
+config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := config
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# | := 
+# automatic
+# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# automatic
+# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
+#  recipe to execute (from 'makefile', line 14):
+		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
+		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
+	  		
+
+all: /home/felipe/git/UFSC/SO-II/ine5424/app/alarm/alarm_traits.h config eposcfg eposcc.conf eposmkbi.conf
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/133=0%
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+ 
+#  Last modified 2022-06-02 14:19:05.1785899
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+../makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+/home/felipe/git/UFSC/SO-II/ine5424/app/alarm/alarm_traits.h:
+#  Implicit rule search has not been done.
+#  Last modified 2022-06-20 19:41:17.1781797
+#  File has been updated.
+#  Successfully updated.
+#  recipe to execute (from 'makefile', line 8):
+		$(error Missing traits file $@ !)
+
+clean: /home/felipe/git/UFSC/SO-II/ine5424/app/alarm/alarm_traits.h
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 56):
+		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
+		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
+		$(CLEAN) *.conf
+
+eposmkbi.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
+		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
+		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
+		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
+		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
+		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
+		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
+		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
+		@echo "NODE_ID=$(NODE_ID)" >> $@
+		@echo "UUID=$(UUID)" >> $@
+
+eposcfg: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		(cd $(TLS)/eposcfg && $(MAKE) clean all)
+
+eposcc.conf: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 25):
+		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
+		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
+		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
+		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
+		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
+		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
+		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
+		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
+		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
+		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
+		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
+		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
+		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@
+
+# files hash-table stats:
+# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 75 / storage = 864 B / avg = 11 B
+# current buf: size = 8162 B / used = 864 B / count = 75 / avg = 11 B
+
+# strcache performance: lookups = 136 / hit rate = 44%
+# hash-table stats:
+# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
+# Finished Make data base on Sat Jun 25 13:00:35 2022
+
+# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+
+# Make data base, printed on Sat Jun 25 13:00:35 2022
+
+# Variables
+
+# makefile (from 'makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from 'makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from 'makedefs', line 21)
+LMACHNAME := mach
+# makefile (from 'makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from 'makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 311)
+LINK := ln -sf
+# makefile (from 'makedefs', line 329)
+SHELL := bash
+# makefile (from 'makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from 'makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /usr/bin/make
+# makefile (from 'makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from 'makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from 'makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from 'makedefs', line 229)
+riscv_DATA_NAME := .data
+# makefile (from 'makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from 'makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from 'makedefs', line 278)
+ 
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from 'makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 1)
+MAKEFILE_LIST :=  makefile makedefs
+# makefile (from 'makedefs', line 248)
+MACH_CODE_NAME := .init
+# makefile (from 'makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from 'makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from 'makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from 'makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from 'makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from 'makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from 'makefile', line 55)
+TESTS := active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makefile', line 60)
+UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 228)
+riscv_CODE_NAME := .init
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from 'makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from 'makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from 'makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from 'makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from 'makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from 'makedefs', line 273)
+TLD := gcc
+# makefile (from 'makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from 'makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+# makefile (from 'makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from 'makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from 'makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from 'makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from 'makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from 'makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from 'makedefs', line 227)
+riscv_MAGIC := --nmagic
+# makefile (from 'makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from 'makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from 'makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from 'makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from 'makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from 'makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from 'makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from 'makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from 'makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from 'makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from 'makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from 'makedefs', line 302)
+DD := dd
+# makefile (from 'makedefs', line 230)
+riscv_IMG_SUFFIX := .img
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from 'makedefs', line 22)
+LSYSNAME := sys
+# makefile (from 'makedefs', line 251)
+MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
+# makefile (from 'makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from 'makedefs', line 121)
+pc_FLASHER := 
+# makefile (from 'makedefs', line 254)
+MACH_IMGSUFF := .img
+# default
+.LOADED := 
+# makefile (from 'makedefs', line 247)
+MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# makefile (from 'makedefs', line 212)
+riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# makefile (from 'makefile', line 58)
+TESTS_COMPILED := $(subst ,, )
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from 'makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from 'makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from 'makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# automatic
+-*-command-variables-*- := APPLICATION=alarm
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from 'makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from 'makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 244)
+MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from 'makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from 'makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from 'makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 1
+# makefile (from 'makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from 'makedefs', line 316)
+MAKE := make --print-directory
+# default
+ 
+MAKECMDGOALS := clean1 prebuild_alarm all1 posbuild_alarm
+# environment
+SHLVL = 2
+# makefile (from 'makedefs', line 299)
+CLEAN := rm -f
+# makefile (from 'makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# environment
+MAKEOVERRIDES = ${-*-command-variables-*-}
+# makefile (from 'makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from 'makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from 'makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from 'makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile (from 'makefile', line 56)
+TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from 'makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from 'makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from 'makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from 'makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from 'makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from 'makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from 'makedefs', line 236)
+atmega_EMULATOR = 
+# makefile (from 'makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# makefile (from 'makedefs', line 84)
+BOOT_ROM = 
+# makefile (from 'makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from 'makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from 'makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from 'makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from 'makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from 'makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
+# environment
+MFLAGS = -pqrRw
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from 'makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from 'makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from 'makedefs', line 245)
+MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from 'makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from 'makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from 'makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 23)
+LINITNAME := init
+# makefile (from 'makefile', line 59)
+TESTS_FINISHED := 
+# makefile (from 'makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from 'makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from 'makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from 'makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from 'makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from 'makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from 'makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from 'makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from 'makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from 'makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from 'makedefs', line 253)
+MACH_MAGIC := --nmagic
+# makefile (from 'makefile', line 61)
+UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 249)
+MACH_DATA_NAME := .data
+# makefile (from 'makedefs', line 214)
+riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# makefile (from 'makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from 'makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from 'makedefs', line 335)
+TEE := tee
+# makefile (from 'makedefs', line 226)
+riscv_FLASHER := 
+# environment
+LC_ALL = C
+# makefile (from 'makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from 'makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from 'makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from 'makedefs', line 52)
+TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
+# makefile (from 'makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from 'makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from 'makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from 'makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from 'makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from 'makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from 'makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from 'makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# makefile (from 'makedefs', line 225)
+riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# command line
+APPLICATION = alarm
+# makefile (from 'makedefs', line 211)
+riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+# makefile (from 'makedefs', line 213)
+riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
+# default
+.RECIPEPREFIX := 
+# makefile (from 'makedefs', line 246)
+ 
+MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
+# makefile (from 'makedefs', line 343)
+TOUCH := touch
+# makefile (from 'makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# makefile (from 'makefile', line 5)
+SUBDIRS := etc tools src app img
+# environment
+LANG = C
+# makefile (from 'makedefs', line 340)
+TERM := konsole -e
+# makefile (from 'makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from 'makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from 'makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from 'makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 1652): 19 files, 8 impossibilities.
+
+# 19 files, 8 impossibilities in 1 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from 'makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from 'makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from 'makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from 'makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from 'makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from 'makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from 'makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from 'makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from 'makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from 'makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from 'makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from 'makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from 'makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from 'makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+#  recipe to execute (from 'makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from 'makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from 'makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from 'makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from 'makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from 'makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+img/alarm.img:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 30):
+		$(MAKE) $(PRECLEAN) all1
+		
+
+all: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 11):
+		$(MAKE) all1
+
+bin: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 53):
+		$(MAKE) APPLICATION=hello etc tools
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Successfully updated.
+ 
+
+.PHONY: prebuild_alarm posbuild_alarm prerun_alarm
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+buildtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 66):
+		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+all1: etc tools src app img
+#  Command line target.
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has not been updated.
+# variable set hash-table stats:
+# Load=0/32=0%, Rehash=0, Collisions=0/6=0%
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+gittest: buildtest runtest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+debug: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 36):
+		$(MAKE) DEBUG=1 all1 debug1
+
+app: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+test: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 63):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
+		
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1985899
+#  File has been updated.
+#  Successfully updated.
+
+src: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+posbuild_alarm:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 85):
+		@echo " done!"
+
+debug1: etc img/alarm.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		(cd img && $(MAKE) DEBUG=1 debug)
+
+# Not a target:
+makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+prebuild_alarm:
+#  Phony target (prerequisite of .PHONY).
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := prebuild_alarm
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := 
+# automatic
+# | := 
+# automatic
+# < := 
+# automatic
+# ^ := 
+# automatic
+# ? := 
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
+#  recipe to execute (from 'makefile', line 83):
+		@echo -n "Building $(APPLICATION) ..."
+
+etc: FORCE
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  Modification time never checked.
+ 
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := etc
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+runtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 69):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)
+
+cleantest: cleanapps
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 77):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
+		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;
+
+run: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 23):
+		$(MAKE) run1
+
+clean: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 95):
+		$(MAKE) clean1
+
+veryclean: clean cleanapps cleantest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 109):
+		(cd tools && $(MAKECLEAN))
+		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
+		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;
+
+img: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+dist: veryclean
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 121):
+		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
+		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
+		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		$(CLEAN) $(ETC)/license.mk
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
+		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
+		$(CLEAN) $(ETC)/license.as
+
+flash: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 46):
+		$(MAKE) flash1
+
+run1: etc img/alarm.img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 27):
+		(cd img && $(MAKE) run1)
+		
+
+clean1: FORCE
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  File does not exist.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := clean1
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
+#  recipe to execute (from 'makefile', line 99):
+		(cd etc && $(MAKECLEAN))
+		(cd app && $(MAKECLEAN))
+		(cd src && $(MAKECLEAN))
+		(cd img && $(MAKECLEAN))
+		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+
+prerun_alarm:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 89):
+		@echo "Running $(APPLICATION):"
+
+tools: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+flash1: all1
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 50):
+		(cd img && $(MAKE) flash)
+
+cleanapps: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 106):
+		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)
+
+linktest: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 74):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+
+# files hash-table stats:
+# Load=37/1024=4%, Rehash=0, Collisions=3/116=3%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+ 
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 78 / storage = 602 B / avg = 7 B
+# current buf: size = 8162 B / used = 602 B / count = 78 / avg = 7 B
+
+# strcache performance: lookups = 201 / hit rate = 61%
+# hash-table stats:
+# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
+# Finished Make data base on Sat Jun 25 13:00:35 2022
+
+# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
+ 
+# GNU Make 4.2.1
+# Built for x86_64-pc-linux-gnu
+# Copyright (C) 1988-2016 Free Software Foundation, Inc.
+# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+# This is free software: you are free to change and redistribute it.
+# There is NO WARRANTY, to the extent permitted by law.
+ 
+
+# Make data base, printed on Sat Jun 25 13:00:35 2022
+
+# Variables
+
+# makefile (from 'makedefs', line 38)
+PRECLEAN := clean1
+# automatic
+<D = $(patsubst %/,%,$(dir $<))
+# automatic
+?F = $(notdir $?)
+# environment
+WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
+# default
+.SHELLFLAGS := -c
+# environment
+XDG_SESSION_CLASS = user
+# makefile (from 'makedefs', line 12)
+SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
+# makefile (from 'makedefs', line 21)
+LMACHNAME := mach
+# makefile (from 'makedefs', line 19)
+TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
+# environment
+XDG_SESSION_TYPE = tty
+# environment
+VSCODE_LOG_NATIVE = false
+# automatic
+?D = $(patsubst %/,%,$(dir $?))
+# makefile (from 'makedefs', line 294)
+CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# automatic
+@D = $(patsubst %/,%,$(dir $@))
+# automatic
+@F = $(notdir $@)
+# default
+MAKE_VERSION := 4.2.1
+# makefile
+CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 311)
+LINK := ln -sf
+# makefile (from 'makedefs', line 329)
+SHELL := bash
+# makefile (from 'makedefs', line 14)
+BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
+# makefile (from 'makedefs', line 75)
+LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
+# environment
+VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
+# environment
+_ = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin/code
+# makefile (from 'makedefs', line 300)
+CLEANDIR := rm -rf
+# makefile (from 'makedefs', line 277)
+ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
+# environment
+SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
+# makefile (from 'makedefs', line 92)
+IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
+# environment
+HUSHLOGIN = FALSE
+# makefile (from 'makedefs', line 6)
+TOLOWER = $(shell echo $(1) | tr A-Z a-z)
+# makefile (from 'makedefs', line 102)
+armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
+# makefile (from 'makedefs', line 278)
+ACCFLAGS = $(MACH_CXX_FLAGS)
+# makefile (from 'makedefs', line 73)
+LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 1)
+MAKEFILE_LIST :=  makefile makedefs
+# makefile (from 'makedefs', line 248)
+MACH_CODE_NAME := 
+# makefile (from 'makedefs', line 310)
+INSTALL := install
+# environment
+PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
+# 'override' directive
+GNUMAKEFLAGS := 
+# makefile (from 'makedefs', line 10)
+TOP := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 327)
+OBJDUMPFLAGS := 
+# makefile (from 'makedefs', line 239)
+atmega_MAGIC := --omagic
+# environment
+XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
+# makefile (from 'makedefs', line 241)
+atmega_DATA_NAME := .data
+# environment
+DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
+# environment
+VSCODE_VERBOSE_LOGGING = true
+# makefile (from 'makedefs', line 289)
+CC = $(COMP_PREFIX)gcc -ansi -c
+# makefile (from 'makedefs', line 109)
+ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
+# 'override' directive
+.SHELLSTATUS := 0
+# makefile (from 'makefile', line 55)
+TESTS := active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makefile', line 60)
+UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# environment
+LESSOPEN = | /usr/bin/lesspipe %s
+# makefile (from 'makedefs', line 13)
+APP := /home/felipe/git/UFSC/SO-II/ine5424/app
+# makefile (from 'makedefs', line 293)
+CPP = $(COMP_PREFIX)gcc -E
+# environment
+VSCODE_CWD = /
+# makefile (from 'makedefs', line 110)
+ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 242)
+atmega_IMG_SUFFIX := .hex
+# default
+MAKE_HOST := x86_64-pc-linux-gnu
+# environment
+PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
+# makefile (from 'makedefs', line 264)
+TCC := gcc -ansi -c -Werror
+# makefile (from 'makedefs', line 333)
+TCPDUMP := tcpdump -tttttennvvvXXr
+# makefile (from 'makedefs', line 273)
+TLD := gcc
+# makefile (from 'makedefs', line 280)
+ALDFLAGS = --gc-sections $(MACH_MAGIC)
+# makefile (from 'makedefs', line 265)
+TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# environment
+XDG_RUNTIME_DIR = /run/user/1000
+ 
+# makefile (from 'makedefs', line 122)
+pc_MAGIC := --nmagic
+# makefile (from 'makedefs', line 234)
+atmega_AS_FLAGS := -mmcu=atmega128
+# makefile (from 'makedefs', line 124)
+pc_DATA_NAME := .data
+# makefile (from 'makedefs', line 66)
+SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
+# makefile (from 'makedefs', line 81)
+LINIT = $(LINITNAME)_$(MMOD)
+# makefile (from 'makedefs', line 70)
+CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
+# makefile (from 'makedefs', line 24)
+LUTILNAME := util
+# environment
+PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
+# makefile (from 'makedefs', line 317)
+MAKECLEAN := make --ignore-errors clean
+# makefile (from 'makedefs', line 283)
+AR = $(COMP_PREFIX)ar
+# makefile (from 'makedefs', line 250)
+MACH_EMULATOR = $($(MACH)_EMULATOR)
+# environment
+VSCODE_LOG_STACK = false
+# environment
+VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
+# makefile (from 'makedefs', line 274)
+TLDFLAGS = $(CC_M_FLAG)
+# makefile (from 'makedefs', line 15)
+LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
+# makefile (from 'makedefs', line 252)
+MACH_FLASHER = $($(MACH)_FLASHER)
+# default
+.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
+# makefile (from 'makedefs', line 125)
+pc_IMG_SUFFIX := .img
+# makefile (from 'makedefs', line 97)
+UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
+# makefile (from 'makedefs', line 321)
+MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
+# environment
+LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
+# makefile (from 'makedefs', line 101)
+armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
+# automatic
+%F = $(notdir $%)
+# environment
+DISPLAY = :0
+# makefile (from 'makedefs', line 302)
+DD := dd
+# environment
+VSCODE_PIPE_LOGGING = true
+# makefile (from 'makedefs', line 22)
+LSYSNAME := sys
+# makefile (from 'makedefs', line 251)
+MACH_DEBUGGER := xterm-256color  -ex "target remote:1235" -ex "set confirm off"
+# makefile (from 'makedefs', line 20)
+LARCHNAME := arch
+# environment
+PWD = /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 324)
+OBJCOPYFLAGS := -R .note -R .comment
+# makefile (from 'makedefs', line 121)
+pc_FLASHER := 
+# makefile (from 'makedefs', line 254)
+MACH_IMGSUFF := 
+# default
+.LOADED := 
+# makefile (from 'makedefs', line 247)
+MACH_LD_FLAGS := 
+# environment
+WSL_INTEROP = /run/WSL/2387_interop
+# makefile (from 'makefile', line 58)
+TESTS_COMPILED := $(subst ,, )
+# environment
+PULSE_SERVER = /mnt/wslg/PulseServer
+# environment
+WT_SESSION = 
+# environment
+VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
+# environment
+HOME = /home/felipe
+# makefile (from 'makedefs', line 240)
+atmega_CODE_NAME := .init
+# makefile (from 'makedefs', line 68)
+MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
+# environment
+LESSCLOSE = /usr/bin/lesspipe %s %s
+# makefile (from 'makedefs', line 267)
+TCXX := g++ -c -ansi -fno-exceptions -std=c++14
+# environment
+SUDO_USER = felipe
+# environment
+LOGNAME = felipe
+# environment
+SUDO_GID = 1000
+# environment
+APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
+# makefile (from 'makedefs', line 76)
+LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 313)
+LD = $(COMP_PREFIX)ld
+# makefile (from 'makedefs', line 271)
+TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 244)
+MACH_CC_FLAGS :=  -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 279)
+ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
+# makefile (from 'makedefs', line 304)
+DEBUGGER = $(MACH_DEBUGGER)
+# makefile (from 'makedefs', line 90)
+MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
+# environment
+VSCODE_HANDLES_UNCAUGHT_ERRORS = true
+# automatic
+^D = $(patsubst %/,%,$(dir $^))
+# makefile (from 'makedefs', line 111)
+ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
+# makefile (from 'makedefs', line 27)
+APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
+# environment
+MAKELEVEL := 0
+# makefile (from 'makedefs', line 238)
+atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
+# makefile (from 'makedefs', line 316)
+MAKE := make --print-directory
+# default
+MAKECMDGOALS := all
+# environment
+SHLVL = 1
+# makefile (from 'makedefs', line 299)
+CLEAN := rm -f
+# makefile (from 'makedefs', line 286)
+AS = $(COMP_PREFIX)as
+# makefile (from 'makedefs', line 100)
+ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
+# environment
+SUDO_UID = 1000
+# makefile (from 'makedefs', line 96)
+SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
+# makefile (from 'makedefs', line 123)
+pc_CODE_NAME := .init
+# makefile (from 'makedefs', line 287)
+ASFLAGS = $(MACH_AS_FLAGS)
+# environment
+XDG_SESSION_ID = c2
+# environment
+USER = felipe
+# makefile (from 'makefile', line 56)
+ 
+TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile
+.DEFAULT_GOAL := all
+# makefile (from 'makedefs', line 11)
+INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
+# makefile (from 'makedefs', line 290)
+CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
+# environment
+LIBVIRT_DEFAULT_URI = qemu:///system
+# makefile (from 'makedefs', line 69)
+MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
+# automatic
+%D = $(patsubst %/,%,$(dir $%))
+# makefile (from 'makedefs', line 79)
+LMACH = $(LMACHNAME)_$(MMOD)
+# environment
+VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
+# makefile (from 'makedefs', line 284)
+ARFLAGS := rcs
+# default
+MAKE_COMMAND := make
+# makefile (from 'makedefs', line 117)
+pc_AS_FLAGS := --32
+# makefile (from 'makedefs', line 18)
+TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
+# makefile (from 'makedefs', line 236)
+atmega_EMULATOR = 
+# makefile (from 'makedefs', line 103)
+rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+# makefile (from 'makedefs', line 86)
+BOOT_ROM = -device loader,file=$(APPLICATION).img,addr=$(IMAGE_ADDR),force-raw=on 
+# makefile (from 'makedefs', line 94)
+INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
+# makefile (from 'makedefs', line 4)
+GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
+# default
+.VARIABLES := 
+# makefile (from 'makedefs', line 106)
+COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
+# automatic
+*F = $(notdir $*)
+# makefile (from 'makedefs', line 16)
+IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
+# makefile (from 'makedefs', line 71)
+NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
+# makefile (from 'makedefs', line 67)
+ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
+# makefile
+MAKEFLAGS = pqrR
+# environment
+MFLAGS = -pqrR
+# automatic
+*D = $(patsubst %/,%,$(dir $*))
+# environment
+MAIL = /var/mail/felipe
+# automatic
++D = $(patsubst %/,%,$(dir $+))
+# makefile (from 'makedefs', line 318)
+MAKETEST := make --no-print-directory --silent --stop
+# makefile (from 'makedefs', line 326)
+OBJDUMP = $(COMP_PREFIX)objdump
+# makefile (from 'makedefs', line 245)
+MACH_CXX_FLAGS :=  -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
+# makefile (from 'makedefs', line 77)
+LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
+# automatic
++F = $(notdir $+)
+# makefile (from 'makedefs', line 237)
+atmega_DEBUGGER = 
+# makefile (from 'makedefs', line 59)
+MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
+# makefile (from 'makedefs', line 74)
+LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
+# makefile (from 'makedefs', line 9)
+EPOS := /home/felipe/git/UFSC/SO-II/ine5424
+# makefile (from 'makedefs', line 23)
+LINITNAME := init
+# makefile (from 'makefile', line 59)
+TESTS_FINISHED := 
+# makefile (from 'makedefs', line 72)
+STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
+# makefile (from 'makedefs', line 331)
+STRIP = $(COMP_PREFIX)strip -R .note -R .comment
+# makefile (from 'makedefs', line 82)
+LUTIL = $(LUTILNAME)_$(MMOD)
+# environment
+VSCODE_HANDLES_SIGPIPE = true
+# makefile (from 'makedefs', line 235)
+atmega_LD_FLAGS := -m avr5
+# environment
+WT_PROFILE_ID = 
+# makefile (from 'makedefs', line 314)
+LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
+# makefile (from 'makedefs', line 17)
+ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
+# default
+MAKEFILES := 
+# makefile (from 'makedefs', line 119)
+pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
+# makefile (from 'makedefs', line 112)
+CC_M_FLAG = -m$(ARCH_WORD_SIZE)
+# makefile (from 'makedefs', line 297)
+CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
+# makefile (from 'makedefs', line 268)
+TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
+# automatic
+<F = $(notdir $<)
+# makefile (from 'makedefs', line 253)
+MACH_MAGIC := 
+# makefile (from 'makefile', line 61)
+UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
+# makefile (from 'makedefs', line 249)
+MACH_DATA_NAME := 
+# makefile (from 'makedefs', line 296)
+CXX = $(COMP_PREFIX)g++ -c
+# makefile (from 'makedefs', line 91)
+BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
+# makefile (from 'makedefs', line 335)
+TEE := tee
+# environment
+LC_ALL = C
+# makefile (from 'makedefs', line 104)
+rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# makefile (from 'makedefs', line 233)
+atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
+# makefile (from 'makedefs', line 78)
+LARCH = $(LARCHNAME)_$(MMOD)
+# makefile (from 'makedefs', line 54)
+TRAITS = $(INCLUDE)/system/traits.h
+ 
+# makefile (from 'makedefs', line 308)
+FLASHER = $(MACH_FLASHER)
+# makefile (from 'makedefs', line 80)
+LSYS = $(LSYSNAME)_$(MMOD)
+# makefile (from 'makedefs', line 291)
+CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
+# makefile (from 'makedefs', line 270)
+TCPP := gcc -E
+# environment
+HOSTTYPE = x86_64
+# makefile (from 'makedefs', line 120)
+pc_DEBUGGER := gdb
+# automatic
+^F = $(notdir $^)
+# makefile (from 'makedefs', line 323)
+OBJCOPY = $(COMP_PREFIX)objcopy
+# default
+SUFFIXES := 
+# makefile (from 'makedefs', line 95)
+SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
+# environment
+WAYLAND_DISPLAY = wayland-0
+# makefile (from 'makedefs', line 118)
+pc_LD_FLAGS := -m elf_i386
+# default
+.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
+# default
+.RECIPEPREFIX := 
+# makefile (from 'makedefs', line 246)
+MACH_AS_FLAGS := 
+# makefile (from 'makedefs', line 343)
+TOUCH := touch
+# makefile (from 'makedefs', line 306)
+EMULATOR = $(MACH_EMULATOR)
+# makefile (from 'makefile', line 5)
+SUBDIRS := etc tools src app img
+# environment
+LANG = C
+# makefile (from 'makedefs', line 340)
+TERM := konsole -e
+# makefile (from 'makedefs', line 5)
+DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
+# environment
+VSCODE_EXTHOST_WILL_SEND_SOCKET = true
+# environment
+WSL_DISTRO_NAME = Ubuntu-20.04
+# makefile (from 'makedefs', line 116)
+pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
+# makefile (from 'makedefs', line 93)
+SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
+# environment
+MOTD_SHOWN = pam
+# makefile (from 'makedefs', line 64)
+ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
+# variable set hash-table stats:
+# Load=229/1024=22%, Rehash=0, Collisions=107/594=18%
+
+# Pattern-specific Variable Values
+
+# No pattern-specific variable values.
+
+# Directories
+
+# . (device 2080, inode 1652): 19 files, 6 impossibilities.
+
+# 19 files, 6 impossibilities in 1 directories.
+
+# Implicit Rules
+
+lib%.o: lib%.cc
+#  recipe to execute (from 'makedefs', line 348):
+		$(CXX) $(CXXFLAGS) $<
+
+%_test_traits.h: %_test.cc
+#  recipe to execute (from 'makedefs', line 351):
+		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@
+
+%_test.o: %_test.cc
+#  recipe to execute (from 'makedefs', line 354):
+		$(ACXX) $(ACXXFLAGS) $<
+
+%_test.o: %_test.c
+#  recipe to execute (from 'makedefs', line 357):
+		$(ACC) $(ACCFLAGS) $<
+
+%_test: %_test.o
+#  recipe to execute (from 'makedefs', line 360):
+		$(ALD) $(ALDFLAGS) $< -o $@
+
+%.o: %.cc
+#  recipe to execute (from 'makedefs', line 363):
+		$(CXX) $(CXXFLAGS) $<
+
+%.o: %.c
+#  recipe to execute (from 'makedefs', line 366):
+		$(CC) $(CCFLAGS) $<
+
+%.s: %.S
+#  recipe to execute (from 'makedefs', line 369):
+		$(CPP) $(CPPFLAGS) $< -o $@
+
+%.o: %.s
+#  recipe to execute (from 'makedefs', line 372):
+		$(AS) $(ASFLAGS) $< -o $@
+
+%: %.cc
+#  recipe to execute (from 'makedefs', line 375):
+		$(CXX) $(CXXFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+%: %.c
+#  recipe to execute (from 'makedefs', line 379):
+		$(CC) $(CCFLAGS) $<
+		$(LD) $(LDFLAGS) %@.o -o $@
+
+(%.o): %.o
+#  recipe to execute (from 'makedefs', line 383):
+		$(AR) $(ARFLAGS) $@ $^
+
+%.img: %
+#  recipe to execute (from 'makedefs', line 386):
+		$(MKBI) $@ $<
+
+%.hex: %
+#  recipe to execute (from 'makedefs', line 389):
+		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
+		$(MKBI) $@ $<.tmp
+		$(CLEAN) $<.tmp
+
+%.bin: %.img
+ 
+#  recipe to execute (from 'makedefs', line 394):
+		$(OBJCOPY) -O binary $< $@
+
+%.out: %.img
+#  recipe to execute (from 'makedefs', line 397):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.out: %.bin
+#  recipe to execute (from 'makedefs', line 400):
+		$(EMULATOR) $< | $(TEE) $@
+
+%.net: %.pcap
+#  recipe to execute (from 'makedefs', line 403):
+		$(TCPDUMP) $< > $@
+
+%.key: %.cc
+#  recipe to execute (from 'makedefs', line 406):
+		$(EPOSANL) $<
+
+%.key: %.c
+#  recipe to execute (from 'makedefs', line 409):
+		$(EPOSANL) $<
+
+# 20 implicit rules, 0 (0.0%) terminal.
+
+# Files
+
+prerun_:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 89):
+		@echo "Running $(APPLICATION):"
+
+all: FORCE
+#  Command line target.
+#  Implicit rule search has not been done.
+#  Implicit/static pattern stem: ''
+#  Modification time never checked.
+#  File has been updated.
+#  Needs to be updated (-q is set).
+# automatic
+# @ := all
+# automatic
+# % := 
+# automatic
+# * := 
+# automatic
+# + := FORCE
+# automatic
+# | := 
+# automatic
+# < := FORCE
+# automatic
+# ^ := FORCE
+# automatic
+# ? := FORCE
+# variable set hash-table stats:
+# Load=8/32=25%, Rehash=0, Collisions=13/24=54%
+#  recipe to execute (from 'makefile', line 9):
+		$(foreach app,$(APPLICATIONS),$(MAKE) APPLICATION=$(app) $(PRECLEAN) prebuild_$(app) all1 posbuild_$(app);)
+
+bin: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 53):
+		$(MAKE) APPLICATION=hello etc tools
+
+# Not a target:
+%.o:
+#  Precious file (prerequisite of .PRECIOUS).
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+FORCE:
+#  Implicit rule search has been done.
+#  File does not exist.
+#  File has been updated.
+#  Successfully updated.
+
+.PHONY: prebuild_ posbuild_ prerun_
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+buildtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 66):
+		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)
+
+.PRECIOUS: %.o
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+all1: etc tools src app img
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+# Not a target:
+.SUFFIXES:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+gittest: buildtest runtest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+debug: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 34):
+ 
+		$(foreach app,$(APPLICATIONS),$(MAKE) DEBUG=1 APPLICATION=$(app) debug1;)
+
+app: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+test: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 63):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
+		
+
+# Not a target:
+makefile:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-02 14:19:05.1985899
+#  File has been updated.
+#  Successfully updated.
+
+src: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+debug1: etc img/
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 40):
+		(cd img && $(MAKE) DEBUG=1 debug)
+
+# Not a target:
+makedefs:
+#  Implicit rule search has been done.
+#  Last modified 2022-06-16 14:41:08.0204869
+#  File has been updated.
+#  Successfully updated.
+
+etc: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+# Not a target:
+.DEFAULT:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+
+runtest: linktest
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 69):
+		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)
+
+cleantest: cleanapps
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 77):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
+		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;
+
+posbuild_:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 85):
+		@echo " done!"
+
+run: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 21):
+		$(foreach app,$(APPLICATIONS),$(MAKE) APPLICATION=$(app) prerun_$(app) run1;)
+
+img/:
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 30):
+		$(MAKE) $(PRECLEAN) all1
+		
+
+clean: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 93):
+		$(MAKE) APPLICATION=$(word 1,$(APPLICATIONS)) clean1
+
+veryclean: clean cleanapps cleantest
+ 
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 109):
+		(cd tools && $(MAKECLEAN))
+		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
+		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
+		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;
+
+img: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+dist: veryclean
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 121):
+		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
+		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
+		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
+		$(CLEAN) $(ETC)/license.mk
+		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
+		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
+		$(CLEAN) $(ETC)/license.as
+
+prebuild_:
+#  Phony target (prerequisite of .PHONY).
+#  Implicit rule search has not been done.
+#  File does not exist.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 83):
+		@echo -n "Building $(APPLICATION) ..."
+
+flash: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 44):
+		$(foreach app,$(APPLICATIONS),$(MAKE) APPLICATION=$(app) $(PRECLEAN) flash1;)
+
+run1: etc img/
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 27):
+		(cd img && $(MAKE) run1)
+		
+
+clean1: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 99):
+		(cd etc && $(MAKECLEAN))
+		(cd app && $(MAKECLEAN))
+		(cd src && $(MAKECLEAN))
+		(cd img && $(MAKECLEAN))
+		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
+
+tools: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 17):
+		(cd $@ && $(MAKE))
+
+flash1: all1
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 50):
+		(cd img && $(MAKE) flash)
+
+cleanapps: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 106):
+		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)
+
+linktest: FORCE
+#  Implicit rule search has not been done.
+#  Modification time never checked.
+#  File has not been updated.
+#  recipe to execute (from 'makefile', line 74):
+		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
+
+# files hash-table stats:
+# Load=37/1024=4%, Rehash=0, Collisions=2/109=2%
+# VPATH Search Paths
+
+# No 'vpath' search paths.
+
+# No general ('VPATH' variable) search path.
+
+# strcache buffers: 1 (0) / strings = 76 / storage = 563 B / avg = 7 B
+# current buf: size = 8162 B / used = 563 B / count = 76 / avg = 7 B
+
+# strcache performance: lookups = 187 / hit rate = 59%
+# hash-table stats:
+# Load=76/8192=1%, Rehash=0, Collisions=1/187=1%
+# Finished Make data base on Sat Jun 25 13:00:35 2022
+
+ 
diff --git a/app/alarm/alarm.cc b/app/alarm/alarm.cc
new file mode 100644
index 0000000..56de2c5
--- /dev/null
+++ b/app/alarm/alarm.cc
@@ -0,0 +1,48 @@
+// EPOS Alarm Component Test Program
+
+#include <time.h>
+
+using namespace EPOS;
+
+const int iterations = 10;
+
+void scream_hello(void);
+void whisper_bye(void);
+
+OStream cout;
+
+int main()
+{
+    cout << "Alarm test" << endl;
+
+    cout << "Creating two alarms, then going to sleep" << endl;
+
+    Function_Handler handler_a(&scream_hello);
+    Alarm alarm_a(3000000, &handler_a, iterations);
+
+    Function_Handler handler_b(&whisper_bye);
+    Alarm alarm_b(2000000, &handler_b, iterations);
+
+    // Note that in case of idle-waiting, this thread will go into suspend
+    // and the alarm handlers above will trigger the functions in the context
+    // of the idle thread!
+    Alarm::delay(3000000 * (iterations + 2));
+
+    cout << "the end" << endl;
+
+    return 0;
+}
+
+void scream_hello()
+{
+    for(int i = 0; i < 10; i++)
+        cout << "HELLO!";
+    cout << endl;
+}
+
+void whisper_bye(void)
+{
+    for(int i = 0; i < 10; i++)
+        cout << "goodbye";
+    cout << endl;
+}
\ No newline at end of file
diff --git a/app/alarm/alarm_traits.h b/app/alarm/alarm_traits.h
new file mode 100644
index 0000000..9d372c2
--- /dev/null
+++ b/app/alarm/alarm_traits.h
@@ -0,0 +1,157 @@
+#ifndef __traits_h
+#define __traits_h
+
+#include <system/config.h>
+
+__BEGIN_SYS
+
+// Build
+template<> struct Traits<Build>: public Traits_Tokens
+{
+    // Basic configuration
+    static const unsigned int MODE = LIBRARY;
+    static const unsigned int ARCHITECTURE = RV64;
+    static const unsigned int MACHINE = RISCV;
+    static const unsigned int MODEL = SiFive_U;
+    static const unsigned int CPUS = 1;
+    static const unsigned int NODES = 1; // (> 1 => NETWORKING)
+    static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
+
+    // Default flags
+    static const bool enabled = true;
+    static const bool monitored = true;
+    static const bool debugged = true;
+    static const bool hysterically_debugged = false;
+
+    // Default aspects
+    typedef ALIST<> ASPECTS;
+};
+
+
+// Utilities
+template<> struct Traits<Debug>: public Traits<Build>
+{
+    static const bool error   = true;
+    static const bool warning = true;
+    static const bool info    = false;
+    static const bool trace   = false;
+};
+
+template<> struct Traits<Lists>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Spin>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Heaps>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Observers>: public Traits<Build>
+{
+    // Some observed objects are created before initializing the Display
+    // Enabling debug may cause trouble in some Machines
+    static const bool debugged = false;
+};
+
+
+// System Parts (mostly to fine control debugging)
+template<> struct Traits<Boot>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Setup>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Init>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Framework>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Aspect>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+
+__END_SYS
+
+// Mediators
+#include __ARCHITECTURE_TRAITS_H
+#include __MACHINE_TRAITS_H
+
+__BEGIN_SYS
+
+
+// API Components
+template<> struct Traits<Application>: public Traits<Build>
+{
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = Traits<Machine>::HEAP_SIZE;
+    static const unsigned int MAX_THREADS = Traits<Machine>::MAX_THREADS;
+};
+
+template<> struct Traits<System>: public Traits<Build>
+{
+    static const unsigned int mode = Traits<Build>::MODE;
+    static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multitask = (mode != Traits<Build>::LIBRARY);
+    static const bool multicore = (Traits<Build>::CPUS > 1) && multithread;
+    static const bool multiheap = Traits<Scratchpad>::enabled;
+
+    static const unsigned long LIFE_SPAN = 1 * YEAR; // s
+    static const unsigned int DUTY_CYCLE = 1000000; // ppm
+
+    static const bool reboot = true;
+
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = (Traits<Application>::MAX_THREADS + 1) * Traits<Application>::STACK_SIZE;
+};
+
+template<> struct Traits<Task>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multitask;
+};
+
+template<> struct Traits<Thread>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+    static const bool smp = Traits<System>::multicore;
+    static const bool trace_idle = hysterically_debugged;
+    static const bool simulate_capacity = false;
+    static const unsigned int QUANTUM = 10000; // us
+
+    typedef RR Criterion;
+};
+
+template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
+{
+    static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
+};
+
+template<> struct Traits<Synchronizer>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+};
+
+template<> struct Traits<Alarm>: public Traits<Build>
+{
+    static const bool visible = hysterically_debugged;
+};
+
+template<> struct Traits<Address_Space>: public Traits<Build> {};
+
+template<> struct Traits<Segment>: public Traits<Build> {};
+
+__END_SYS
+
+#endif
diff --git a/app/alarm/makefile b/app/alarm/makefile
new file mode 100644
index 0000000..8a6578a
--- /dev/null
+++ b/app/alarm/makefile
@@ -0,0 +1,17 @@
+# EPOS Application Makefile
+
+include ../../makedefs
+
+all: install
+
+$(APPLICATION):	$(APPLICATION).o $(LIB)/*
+		$(ALD) $(ALDFLAGS) -o $@ $(APPLICATION).o
+
+$(APPLICATION).o: $(APPLICATION).cc $(SRC)
+		$(ACC) $(ACCFLAGS) -o $@ $<
+
+install: $(APPLICATION)
+		$(INSTALL) $(APPLICATION) $(IMG)
+
+clean:
+		$(CLEAN) *.o $(APPLICATION)
diff --git a/app/hello/hello_traits.h b/app/hello/hello_traits.h
index 5328337..1329563 100644
--- a/app/hello/hello_traits.h
+++ b/app/hello/hello_traits.h
@@ -13,7 +13,7 @@ template<> struct Traits<Build>: public Traits_Tokens
     static const unsigned int ARCHITECTURE = RV64;
     static const unsigned int MACHINE = RISCV;
     static const unsigned int MODEL = SiFive_U;
-    static const unsigned int CPUS = 1;
+    static const unsigned int CPUS = 2;
     static const unsigned int NODES = 1; // (> 1 => NETWORKING)
     static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
 
@@ -34,7 +34,7 @@ template<> struct Traits<Debug>: public Traits<Build>
     static const bool error   = true;
     static const bool warning = true;
     static const bool info    = false;
-    static const bool trace   = false;
+    static const bool trace   = true;
 };
 
 template<> struct Traits<Lists>: public Traits<Build>
@@ -104,6 +104,8 @@ template<> struct Traits<System>: public Traits<Build>
 {
     static const unsigned int mode = Traits<Build>::MODE;
     static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multitask = (mode != Traits<Build>::LIBRARY);
+    static const bool multicore = (Traits<Build>::CPUS > 1) && multithread;
     static const bool multiheap = Traits<Scratchpad>::enabled;
 
     static const unsigned long LIFE_SPAN = 1 * YEAR; // s
@@ -115,14 +117,20 @@ template<> struct Traits<System>: public Traits<Build>
     static const unsigned int HEAP_SIZE = (Traits<Application>::MAX_THREADS + 1) * Traits<Application>::STACK_SIZE;
 };
 
+template<> struct Traits<Task>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multitask;
+};
+
 template<> struct Traits<Thread>: public Traits<Build>
 {
     static const bool enabled = Traits<System>::multithread;
+    static const bool smp = Traits<System>::multicore;
     static const bool trace_idle = hysterically_debugged;
     static const bool simulate_capacity = false;
     static const unsigned int QUANTUM = 10000; // us
 
-    typedef RR Criterion;
+    typedef TimePreemptive Criterion;
 };
 
 template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
diff --git a/app/p2_test/makefile b/app/p2_test/makefile
new file mode 100644
index 0000000..8a6578a
--- /dev/null
+++ b/app/p2_test/makefile
@@ -0,0 +1,17 @@
+# EPOS Application Makefile
+
+include ../../makedefs
+
+all: install
+
+$(APPLICATION):	$(APPLICATION).o $(LIB)/*
+		$(ALD) $(ALDFLAGS) -o $@ $(APPLICATION).o
+
+$(APPLICATION).o: $(APPLICATION).cc $(SRC)
+		$(ACC) $(ACCFLAGS) -o $@ $<
+
+install: $(APPLICATION)
+		$(INSTALL) $(APPLICATION) $(IMG)
+
+clean:
+		$(CLEAN) *.o $(APPLICATION)
diff --git a/app/p2_test/p2_test.cc b/app/p2_test/p2_test.cc
new file mode 100644
index 0000000..99b304f
--- /dev/null
+++ b/app/p2_test/p2_test.cc
@@ -0,0 +1,59 @@
+#include <machine.h>
+#include <time.h>
+#include <process.h>
+#include <synchronizer.h>
+
+using namespace EPOS;
+
+const int ITERATIONS = 50;
+const int CPU_WORK_ITERATIONS = 100000000;
+
+OStream cout;
+
+int one() {
+    for (int i = 0; i < ITERATIONS; i++) {
+        cout << CPU::id() << " 1" << endl;
+
+        for (int j = 0; j < CPU_WORK_ITERATIONS; j++) {
+        }
+    }
+
+    cout << "UM!" << endl;
+    return 0;
+}
+
+int two() {
+    for (int i = 0; i < ITERATIONS; i++) {
+        cout << CPU::id() << " 2" << endl;
+
+        for (int j = 0; j < CPU_WORK_ITERATIONS; j++) {
+        }
+    }
+    cout << "DOIS!" << endl;
+    return 0;
+}
+
+int three() {
+    for (int i = 0; i < ITERATIONS; i++) {
+        cout << CPU::id() << " 3" << endl;
+
+        for (int j = 0; j < CPU_WORK_ITERATIONS; j++) {
+        }
+    }
+
+    cout << "TRES!" << endl;
+    return 0;
+}
+
+int main() {
+    new Thread(&one);
+    new Thread(&two);
+    new Thread(&three);
+
+    Thread::self()->pass();
+
+
+    cout << "fim da main" << endl;
+
+    return 0;
+}
diff --git a/app/p2_test/p2_test_traits.h b/app/p2_test/p2_test_traits.h
new file mode 100644
index 0000000..e851ddf
--- /dev/null
+++ b/app/p2_test/p2_test_traits.h
@@ -0,0 +1,149 @@
+#ifndef __traits_h
+#define __traits_h
+
+#include <system/config.h>
+
+__BEGIN_SYS
+
+// Build
+template<> struct Traits<Build>: public Traits_Tokens
+{
+    // Basic configuration
+    static const unsigned int MODE = LIBRARY;
+    static const unsigned int ARCHITECTURE = RV64;
+    static const unsigned int MACHINE = RISCV;
+    static const unsigned int MODEL = SiFive_U;
+    static const unsigned int CPUS = 2;
+    static const unsigned int NODES = 1; // (> 1 => NETWORKING)
+    static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
+
+    // Default flags
+    static const bool enabled = true;
+    static const bool monitored = true;
+    static const bool debugged = true;
+    static const bool hysterically_debugged = false;
+
+    // Default aspects
+    typedef ALIST<> ASPECTS;
+};
+
+
+// Utilities
+template<> struct Traits<Debug>: public Traits<Build>
+{
+    static const bool error   = true;
+    static const bool warning = true;
+    static const bool info    = false;
+    static const bool trace   = true;
+};
+
+template<> struct Traits<Lists>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Spin>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Heaps>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Observers>: public Traits<Build>
+{
+    // Some observed objects are created before initializing the Display
+    // Enabling debug may cause trouble in some Machines
+    static const bool debugged = false;
+};
+
+
+// System Parts (mostly to fine control debugging)
+template<> struct Traits<Boot>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Setup>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Init>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Framework>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Aspect>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+
+__END_SYS
+
+// Mediators
+#include __ARCHITECTURE_TRAITS_H
+#include __MACHINE_TRAITS_H
+
+__BEGIN_SYS
+
+
+// API Components
+template<> struct Traits<Application>: public Traits<Build>
+{
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = Traits<Machine>::HEAP_SIZE;
+    static const unsigned int MAX_THREADS = Traits<Machine>::MAX_THREADS;
+};
+
+template<> struct Traits<System>: public Traits<Build>
+{
+    static const unsigned int mode = Traits<Build>::MODE;
+    static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multiheap = Traits<Scratchpad>::enabled;
+
+    static const unsigned long LIFE_SPAN = 1 * YEAR; // s
+    static const unsigned int DUTY_CYCLE = 1000000; // ppm
+
+    static const bool reboot = true;
+
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = (Traits<Application>::MAX_THREADS + 1) * Traits<Application>::STACK_SIZE;
+};
+
+template<> struct Traits<Thread>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+    static const bool trace_idle = hysterically_debugged;
+    static const bool simulate_capacity = false;
+    static const unsigned int QUANTUM = 1000000; // us
+
+    typedef TimePreemptive Criterion;
+};
+
+template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
+{
+    static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
+};
+
+template<> struct Traits<Synchronizer>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+};
+
+template<> struct Traits<Alarm>: public Traits<Build>
+{
+    static const bool visible = hysterically_debugged;
+};
+
+template<> struct Traits<Address_Space>: public Traits<Build> {};
+
+template<> struct Traits<Segment>: public Traits<Build> {};
+
+__END_SYS
+
+#endif
diff --git a/app/philosophers_dinner/philosophers_dinner_traits.h b/app/philosophers_dinner/philosophers_dinner_traits.h
index 5328337..ac11628 100644
--- a/app/philosophers_dinner/philosophers_dinner_traits.h
+++ b/app/philosophers_dinner/philosophers_dinner_traits.h
@@ -13,7 +13,7 @@ template<> struct Traits<Build>: public Traits_Tokens
     static const unsigned int ARCHITECTURE = RV64;
     static const unsigned int MACHINE = RISCV;
     static const unsigned int MODEL = SiFive_U;
-    static const unsigned int CPUS = 1;
+    static const unsigned int CPUS = 2;
     static const unsigned int NODES = 1; // (> 1 => NETWORKING)
     static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
 
@@ -104,6 +104,8 @@ template<> struct Traits<System>: public Traits<Build>
 {
     static const unsigned int mode = Traits<Build>::MODE;
     static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multitask = (mode != Traits<Build>::LIBRARY);
+    static const bool multicore = (Traits<Build>::CPUS > 1) && multithread;
     static const bool multiheap = Traits<Scratchpad>::enabled;
 
     static const unsigned long LIFE_SPAN = 1 * YEAR; // s
@@ -115,14 +117,20 @@ template<> struct Traits<System>: public Traits<Build>
     static const unsigned int HEAP_SIZE = (Traits<Application>::MAX_THREADS + 1) * Traits<Application>::STACK_SIZE;
 };
 
+template<> struct Traits<Task>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multitask;
+};
+
 template<> struct Traits<Thread>: public Traits<Build>
 {
     static const bool enabled = Traits<System>::multithread;
+    static const bool smp = Traits<System>::multicore;
     static const bool trace_idle = hysterically_debugged;
     static const bool simulate_capacity = false;
     static const unsigned int QUANTUM = 10000; // us
 
-    typedef RR Criterion;
+    typedef TimePreemptive Criterion;
 };
 
 template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
diff --git a/app/pmu/makefile b/app/pmu/makefile
new file mode 100644
index 0000000..916e561
--- /dev/null
+++ b/app/pmu/makefile
@@ -0,0 +1,17 @@
+# EPOS Application Makefile
+
+include ../../makedefs
+
+all: install
+
+$(APPLICATION):	$(APPLICATION).o $(LIB)/*
+		$(ALD) $(ALDFLAGS) -o $@ $(APPLICATION).o
+
+$(APPLICATION).o: $(APPLICATION).cc $(SRC)
+		$(ACC) $(ACCFLAGS) -o $@ $<
+
+install: $(APPLICATION)
+		$(INSTALL) $(APPLICATION) $(IMG)
+
+clean:
+		$(CLEAN) *.o $(APPLICATION)
\ No newline at end of file
diff --git a/app/pmu/pmu.cc b/app/pmu/pmu.cc
new file mode 100644
index 0000000..3fd7853
--- /dev/null
+++ b/app/pmu/pmu.cc
@@ -0,0 +1,95 @@
+#include <utility/ostream.h>
+#include <architecture.h>
+#include <time.h>
+
+using namespace EPOS;
+
+OStream cout;
+
+void statistics()
+{
+  cout << "Unhalted CPU cycles: " << PMU::read(0)
+       << "\nCPU cycles: " << PMU::read(1)
+       << "\nInstructions: " << PMU::read(2)
+       << "\nExceptions: " << PMU::read(3)
+       << "\nInterrupts: " << PMU::read(4) << endl;
+}
+
+void twos_mult_table()
+{
+  int two = 2;
+  int result = 0;
+
+  for (int i = 0; i < 100; i++)
+  {
+    result = result + (two * i);
+  }
+}
+
+void configure_PMU()
+{
+  PMU::config(0, PMU::UNHALTED_CYCLES);
+  PMU::config(1, PMU::CPU_CYCLES);
+  PMU::config(2, PMU::INSTRUCTIONS_RETIRED);
+  PMU::config(3, PMU::EXCEPTIONS);
+  PMU::config(4, PMU::INTERRUPTS);
+}
+
+void stop_pmu()
+{
+  PMU::stop(0);
+  PMU::stop(1);
+  PMU::stop(2);
+  PMU::stop(3);
+  PMU::stop(4);
+}
+
+void start_pmu()
+{
+  PMU::start(0);
+  PMU::start(1);
+  PMU::start(2);
+  PMU::start(3);
+  PMU::start(4);
+}
+
+void reset_pmu()
+{
+  PMU::reset(0);
+  PMU::reset(1);
+  PMU::reset(2);
+  PMU::reset(3);
+  PMU::reset(4);
+}
+
+int main()
+{
+  cout << "Testing PMU... " << endl;
+  cout << "\nStarting stats: " << endl;
+  configure_PMU();
+  statistics();
+
+  cout << "\nfilling CPU with instructions...";
+  twos_mult_table();
+  cout << "\nNew stats: " << endl;
+  statistics();
+
+  cout << "\nStopping PMU counters and filling CPU again...";
+  stop_pmu();
+  twos_mult_table();
+  cout << "\nNew stats: " << endl;
+  statistics();
+
+  cout << "\nStarting counters again...";
+  start_pmu();
+  twos_mult_table();
+  cout << "\nNew stats: " << endl;
+  statistics();
+
+  cout << "\nResetting...;"
+  reset_pmu();
+  cout << "\nFinal stats: " << endl;
+  statistics();
+
+  return 0;
+}
\ No newline at end of file
diff --git a/app/pmu/pmu_traits.h b/app/pmu/pmu_traits.h
new file mode 100644
index 0000000..5328337
--- /dev/null
+++ b/app/pmu/pmu_traits.h
@@ -0,0 +1,149 @@
+#ifndef __traits_h
+#define __traits_h
+
+#include <system/config.h>
+
+__BEGIN_SYS
+
+// Build
+template<> struct Traits<Build>: public Traits_Tokens
+{
+    // Basic configuration
+    static const unsigned int MODE = LIBRARY;
+    static const unsigned int ARCHITECTURE = RV64;
+    static const unsigned int MACHINE = RISCV;
+    static const unsigned int MODEL = SiFive_U;
+    static const unsigned int CPUS = 1;
+    static const unsigned int NODES = 1; // (> 1 => NETWORKING)
+    static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
+
+    // Default flags
+    static const bool enabled = true;
+    static const bool monitored = true;
+    static const bool debugged = true;
+    static const bool hysterically_debugged = false;
+
+    // Default aspects
+    typedef ALIST<> ASPECTS;
+};
+
+
+// Utilities
+template<> struct Traits<Debug>: public Traits<Build>
+{
+    static const bool error   = true;
+    static const bool warning = true;
+    static const bool info    = false;
+    static const bool trace   = false;
+};
+
+template<> struct Traits<Lists>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Spin>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Heaps>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Observers>: public Traits<Build>
+{
+    // Some observed objects are created before initializing the Display
+    // Enabling debug may cause trouble in some Machines
+    static const bool debugged = false;
+};
+
+
+// System Parts (mostly to fine control debugging)
+template<> struct Traits<Boot>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Setup>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Init>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Framework>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Aspect>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+
+__END_SYS
+
+// Mediators
+#include __ARCHITECTURE_TRAITS_H
+#include __MACHINE_TRAITS_H
+
+__BEGIN_SYS
+
+
+// API Components
+template<> struct Traits<Application>: public Traits<Build>
+{
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = Traits<Machine>::HEAP_SIZE;
+    static const unsigned int MAX_THREADS = Traits<Machine>::MAX_THREADS;
+};
+
+template<> struct Traits<System>: public Traits<Build>
+{
+    static const unsigned int mode = Traits<Build>::MODE;
+    static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multiheap = Traits<Scratchpad>::enabled;
+
+    static const unsigned long LIFE_SPAN = 1 * YEAR; // s
+    static const unsigned int DUTY_CYCLE = 1000000; // ppm
+
+    static const bool reboot = true;
+
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = (Traits<Application>::MAX_THREADS + 1) * Traits<Application>::STACK_SIZE;
+};
+
+template<> struct Traits<Thread>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+    static const bool trace_idle = hysterically_debugged;
+    static const bool simulate_capacity = false;
+    static const unsigned int QUANTUM = 10000; // us
+
+    typedef RR Criterion;
+};
+
+template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
+{
+    static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
+};
+
+template<> struct Traits<Synchronizer>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+};
+
+template<> struct Traits<Alarm>: public Traits<Build>
+{
+    static const bool visible = hysterically_debugged;
+};
+
+template<> struct Traits<Address_Space>: public Traits<Build> {};
+
+template<> struct Traits<Segment>: public Traits<Build> {};
+
+__END_SYS
+
+#endif
diff --git a/app/producer_consumer/producer_consumer.cc b/app/producer_consumer/producer_consumer.cc
index 131f7a9..4f4b92b 100644
--- a/app/producer_consumer/producer_consumer.cc
+++ b/app/producer_consumer/producer_consumer.cc
@@ -7,7 +7,8 @@
 
 using namespace EPOS;
 
-const int iterations = 128;
+const int ALARM_DELAY = 50000;
+const int ITERATIONS = 1;
 
 OStream cout;
 
@@ -19,11 +20,11 @@ Semaphore full(0);
 int consumer()
 {
     int out = 0;
-    for(int i = 0; i < iterations; i++) {
+    for(int i = 0; i < ITERATIONS; i++) {
         full.p();
-        cout << "C<-" << buffer[out] << " ";
+        cout << "C <- " << buffer[out] << endl;
         out = (out + 1) % BUF_SIZE;
-        Alarm::delay(100000);
+        Alarm::delay(ALARM_DELAY);
         empty.v();
     }
 
@@ -38,11 +39,11 @@ int main()
 
     // producer
     int in = 0;
-    for(int i = 0; i < iterations; i++) {
+    for(int i = 0; i < ITERATIONS; i++) {
         empty.p();
-        Alarm::delay(100000);
+        Alarm::delay(ALARM_DELAY);
         buffer[in] = 'a' + in;
-        cout << "P->" << buffer[in] << " ";
+        cout << "P -> " << buffer[in] << endl;
         in = (in + 1) % BUF_SIZE;
         full.v();
     }
diff --git a/app/producer_consumer/producer_consumer_traits.h b/app/producer_consumer/producer_consumer_traits.h
index 5328337..9d372c2 100644
--- a/app/producer_consumer/producer_consumer_traits.h
+++ b/app/producer_consumer/producer_consumer_traits.h
@@ -104,6 +104,8 @@ template<> struct Traits<System>: public Traits<Build>
 {
     static const unsigned int mode = Traits<Build>::MODE;
     static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multitask = (mode != Traits<Build>::LIBRARY);
+    static const bool multicore = (Traits<Build>::CPUS > 1) && multithread;
     static const bool multiheap = Traits<Scratchpad>::enabled;
 
     static const unsigned long LIFE_SPAN = 1 * YEAR; // s
@@ -115,9 +117,15 @@ template<> struct Traits<System>: public Traits<Build>
     static const unsigned int HEAP_SIZE = (Traits<Application>::MAX_THREADS + 1) * Traits<Application>::STACK_SIZE;
 };
 
+template<> struct Traits<Task>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multitask;
+};
+
 template<> struct Traits<Thread>: public Traits<Build>
 {
     static const bool enabled = Traits<System>::multithread;
+    static const bool smp = Traits<System>::multicore;
     static const bool trace_idle = hysterically_debugged;
     static const bool simulate_capacity = false;
     static const unsigned int QUANTUM = 10000; // us
diff --git a/app/uart/makefile b/app/uart/makefile
new file mode 100644
index 0000000..916e561
--- /dev/null
+++ b/app/uart/makefile
@@ -0,0 +1,17 @@
+# EPOS Application Makefile
+
+include ../../makedefs
+
+all: install
+
+$(APPLICATION):	$(APPLICATION).o $(LIB)/*
+		$(ALD) $(ALDFLAGS) -o $@ $(APPLICATION).o
+
+$(APPLICATION).o: $(APPLICATION).cc $(SRC)
+		$(ACC) $(ACCFLAGS) -o $@ $<
+
+install: $(APPLICATION)
+		$(INSTALL) $(APPLICATION) $(IMG)
+
+clean:
+		$(CLEAN) *.o $(APPLICATION)
\ No newline at end of file
diff --git a/app/uart/uart.cc b/app/uart/uart.cc
new file mode 100644
index 0000000..2bd75a6
--- /dev/null
+++ b/app/uart/uart.cc
@@ -0,0 +1,28 @@
+#include <utility/ostream.h>
+#include __UART_H
+
+using namespace EPOS;
+
+OStream cout;
+
+int main()
+{
+    auto uart = UART();
+
+    auto message = "If you type, you should see the characters appear twice:\n";
+    for (auto i = 0; message[i] != '\0'; ++i) {
+        while (!uart.ready_to_put()) {}
+        uart.put(message[i]);
+    }
+    uart.flush();
+
+    while (true) {
+        while (!uart.ready_to_get()) {}
+        auto c = uart.get();
+        uart.put(c);
+        uart.put(c);
+        uart.flush();
+    }
+
+    return 0;
+}
\ No newline at end of file
diff --git a/app/uart/uart_traits.h b/app/uart/uart_traits.h
new file mode 100644
index 0000000..5328337
--- /dev/null
+++ b/app/uart/uart_traits.h
@@ -0,0 +1,149 @@
+#ifndef __traits_h
+#define __traits_h
+
+#include <system/config.h>
+
+__BEGIN_SYS
+
+// Build
+template<> struct Traits<Build>: public Traits_Tokens
+{
+    // Basic configuration
+    static const unsigned int MODE = LIBRARY;
+    static const unsigned int ARCHITECTURE = RV64;
+    static const unsigned int MACHINE = RISCV;
+    static const unsigned int MODEL = SiFive_U;
+    static const unsigned int CPUS = 1;
+    static const unsigned int NODES = 1; // (> 1 => NETWORKING)
+    static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
+
+    // Default flags
+    static const bool enabled = true;
+    static const bool monitored = true;
+    static const bool debugged = true;
+    static const bool hysterically_debugged = false;
+
+    // Default aspects
+    typedef ALIST<> ASPECTS;
+};
+
+
+// Utilities
+template<> struct Traits<Debug>: public Traits<Build>
+{
+    static const bool error   = true;
+    static const bool warning = true;
+    static const bool info    = false;
+    static const bool trace   = false;
+};
+
+template<> struct Traits<Lists>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Spin>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Heaps>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+template<> struct Traits<Observers>: public Traits<Build>
+{
+    // Some observed objects are created before initializing the Display
+    // Enabling debug may cause trouble in some Machines
+    static const bool debugged = false;
+};
+
+
+// System Parts (mostly to fine control debugging)
+template<> struct Traits<Boot>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Setup>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Init>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Framework>: public Traits<Build>
+{
+};
+
+template<> struct Traits<Aspect>: public Traits<Build>
+{
+    static const bool debugged = hysterically_debugged;
+};
+
+
+__END_SYS
+
+// Mediators
+#include __ARCHITECTURE_TRAITS_H
+#include __MACHINE_TRAITS_H
+
+__BEGIN_SYS
+
+
+// API Components
+template<> struct Traits<Application>: public Traits<Build>
+{
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = Traits<Machine>::HEAP_SIZE;
+    static const unsigned int MAX_THREADS = Traits<Machine>::MAX_THREADS;
+};
+
+template<> struct Traits<System>: public Traits<Build>
+{
+    static const unsigned int mode = Traits<Build>::MODE;
+    static const bool multithread = (Traits<Application>::MAX_THREADS > 1);
+    static const bool multiheap = Traits<Scratchpad>::enabled;
+
+    static const unsigned long LIFE_SPAN = 1 * YEAR; // s
+    static const unsigned int DUTY_CYCLE = 1000000; // ppm
+
+    static const bool reboot = true;
+
+    static const unsigned int STACK_SIZE = Traits<Machine>::STACK_SIZE;
+    static const unsigned int HEAP_SIZE = (Traits<Application>::MAX_THREADS + 1) * Traits<Application>::STACK_SIZE;
+};
+
+template<> struct Traits<Thread>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+    static const bool trace_idle = hysterically_debugged;
+    static const bool simulate_capacity = false;
+    static const unsigned int QUANTUM = 10000; // us
+
+    typedef RR Criterion;
+};
+
+template<> struct Traits<Scheduler<Thread>>: public Traits<Build>
+{
+    static const bool debugged = Traits<Thread>::trace_idle || hysterically_debugged;
+};
+
+template<> struct Traits<Synchronizer>: public Traits<Build>
+{
+    static const bool enabled = Traits<System>::multithread;
+};
+
+template<> struct Traits<Alarm>: public Traits<Build>
+{
+    static const bool visible = hysterically_debugged;
+};
+
+template<> struct Traits<Address_Space>: public Traits<Build> {};
+
+template<> struct Traits<Segment>: public Traits<Build> {};
+
+__END_SYS
+
+#endif
diff --git a/include/architecture/cpu.h b/include/architecture/cpu.h
index fb5c6b1..018b63b 100644
--- a/include/architecture/cpu.h
+++ b/include/architecture/cpu.h
@@ -10,204 +10,238 @@ __BEGIN_SYS
 class CPU_Common
 {
 protected:
-    static const bool BIG_ENDIAN = (Traits<CPU>::ENDIANESS == Traits<CPU>::BIG);
+  static const bool BIG_ENDIAN = (Traits<CPU>::ENDIANESS == Traits<CPU>::BIG);
 
 protected:
-    CPU_Common() {}
+  CPU_Common() {}
 
 public:
-    typedef unsigned char  Reg8;
-    typedef unsigned short Reg16;
-    typedef IF<Traits<CPU>::WORD_SIZE == 32, unsigned long /* IPL32 */, unsigned int /* LP64 */>::Result Reg32;
-    typedef IF<Traits<CPU>::WORD_SIZE == 32, unsigned long long /* IPL32 */, unsigned long /* LP64 */>::Result Reg64;
-    typedef SWITCH<Traits<CPU>::WORD_SIZE, CASE<16, Reg16, CASE<32, Reg32, CASE<64, Reg64>>>>::Result Reg;
-
-    template <typename Reg>
-    class Address
-    {
-    public:
-        Address() {}
-        Address(const Address & a) : _addr(a._addr) {}
-        Address(const Reg & a) : _addr(a) {}
-        template<typename T>
-        Address(T * a) : _addr(Reg(a)) {}
-
-        operator const Reg &() const { return _addr; }
-
-        template<typename T>
-        operator T *() const { return reinterpret_cast<T *>(_addr); }
-
-        template<typename T>
-        bool operator==(T a) const { return (_addr == Reg(a)); }
-        template<typename T>
-        bool operator< (T a) const { return (_addr < Reg(a)); }
-        template<typename T>
-        bool operator> (T a) const { return (_addr > Reg(a)); }
-        template<typename T>
-        bool operator>=(T a) const { return (_addr >= Reg(a)); }
-        template<typename T>
-        bool operator<=(T a) const { return (_addr <= Reg(a)); }
-
-        template<typename T>
-        Address operator-(T a) const { return _addr - Reg(a); }
-        template<typename T>
-        Address operator+(T a) const { return _addr + Reg(a); }
-        template<typename T>
-        Address & operator+=(T a) { _addr += Reg(a); return *this; }
-        template<typename T>
-        Address & operator-=(T a) { _addr -= Reg(a); return *this; }
-        template<typename T>
-        Address & operator&=(T a) { _addr &= Reg(a); return *this; }
-        template<typename T>
-        Address & operator|=(T a) { _addr |= Reg(a); return *this; }
-
-        Address & operator[](int i) { return *(this + i); }
-
-        friend OStream & operator<<(OStream & os, const Address & a) { os << reinterpret_cast<void *>(a._addr); return os; }
-
-    private:
-        Reg _addr;
-    };
-
-    typedef Address<Reg> Log_Addr;
-    typedef Address<Reg> Phy_Addr;
-
-    class Context;
-
-public:
-    static Log_Addr pc();       // program counter / instruction pointer
-
-    static Log_Addr sp();       // ABI stack pointer
-    static void sp(Log_Addr sp);
-
-    static Log_Addr fp();       // ABI frame pointer
-    static void fp(Log_Addr sp);
-
-    static Log_Addr ra();       // ABI return address (either link register or from the stack)
-
-    static Reg fr();            // ABI function return (either a register or from the stack)
-    static void fr(Reg fr);
-
-    static Hertz clock()  { return Traits<CPU>::CLOCK; }
-    static void clock(const Hertz & frequency) {}
-    static Hertz max_clock() { return Traits<CPU>::CLOCK; }
-    static Hertz min_clock() { return Traits<CPU>::CLOCK; }
-
-    static Hertz bus_clock() { return Traits<CPU>::CLOCK; }
-
-    static void int_enable();
-    static void int_disable();
-    static bool int_enabled();
-    static bool int_disabled();
-
-    static void halt() { for(;;); }
+  typedef unsigned char Reg8;
+  typedef unsigned short Reg16;
+  // typedef IF<Traits<CPU>::WORD_SIZE == 32, unsigned long /* IPL32 */, unsigned int /* LP64 */>::Result Reg32;
+  // typedef IF<Traits<CPU>::WORD_SIZE == 32, unsigned long long /* IPL32 */, unsigned long /* LP64 */>::Result Reg64;
+  typedef unsigned long Reg32;
+  typedef unsigned long long Reg64;
+  typedef SWITCH<Traits<CPU>::WORD_SIZE, CASE<16, Reg16, CASE<32, Reg32, CASE<64, Reg64>>>>::Result Reg;
+
+  template <typename Reg>
+  class Address
+  {
+  public:
+    Address() {}
+    Address(const Address &a) : _addr(a._addr) {}
+    Address(const Reg &a) : _addr(a) {}
+    template <typename T>
+    Address(T *a) : _addr(Reg(a)) {}
 
-    static void switch_context(Context * volatile * o, Context * volatile n);
+    operator const Reg &() const { return _addr; }
 
+    template <typename T>
+    operator T *() const { return reinterpret_cast<T *>(_addr); }
 
-    static unsigned int id();
-    static unsigned int cores();
+    template <typename T>
+    bool operator==(T a) const { return (_addr == Reg(a)); }
+    template <typename T>
+    bool operator<(T a) const { return (_addr < Reg(a)); }
+    template <typename T>
+    bool operator>(T a) const { return (_addr > Reg(a)); }
+    template <typename T>
+    bool operator>=(T a) const { return (_addr >= Reg(a)); }
+    template <typename T>
+    bool operator<=(T a) const { return (_addr <= Reg(a)); }
 
     template <typename T>
-    static T tsl(volatile T & lock) {
-        T old = lock;
-        lock = 1;
-        return old;
+    Address operator-(T a) const { return _addr - Reg(a); }
+    template <typename T>
+    Address operator+(T a) const { return _addr + Reg(a); }
+    template <typename T>
+    Address &operator+=(T a)
+    {
+      _addr += Reg(a);
+      return *this;
     }
-
     template <typename T>
-    static T finc(volatile T & value) {
-        T old = value;
-        value++;
-        return old;
+    Address &operator-=(T a)
+    {
+      _addr -= Reg(a);
+      return *this;
     }
-
     template <typename T>
-    static T fdec(volatile T & value) {
-        T old = value;
-        value--;
-        return old;
+    Address &operator&=(T a)
+    {
+      _addr &= Reg(a);
+      return *this;
     }
-
     template <typename T>
-    static T cas(volatile T & value, T compare, T replacement) {
-        T old = value;
-        if(value == compare) {
-            value = replacement;
-        }
-        return old;
+    Address &operator|=(T a)
+    {
+      _addr |= Reg(a);
+      return *this;
     }
 
-    template <int (* finc)(volatile int &)>
-    static void smp_barrier(unsigned int cores, unsigned int id) {
-        if(cores > 1) {
-            static volatile int ready[2];
-            static volatile int i;
-
-            int j = i;
-
-            finc(ready[j]);
-            if(id == 0) {
-                while(ready[j] < int(cores));       // wait for all CPUs to be ready
-                i = !i;                             // toggle ready
-                ready[j] = 0;                       // signalizes waiting CPUs
-            } else {
-                while(ready[j]);                    // wait for CPU[0] signal
-            }
-        }
+    Address &operator[](int i) { return *(this + i); }
+
+    friend OStream &operator<<(OStream &os, const Address &a)
+    {
+      os << reinterpret_cast<void *>(a._addr);
+      return os;
+    }
+
+  private:
+    Reg _addr;
+  };
+
+  typedef Address<Reg> Log_Addr;
+  typedef Address<Reg> Phy_Addr;
+
+  class Context;
+
+public:
+  static Log_Addr pc(); // program counter / instruction pointer
+
+  static Log_Addr sp(); // ABI stack pointer
+  static void sp(Log_Addr sp);
+
+  static Log_Addr fp(); // ABI frame pointer
+  static void fp(Log_Addr sp);
+
+  static Log_Addr ra(); // ABI return address (either link register or from the stack)
+
+  static Reg fr(); // ABI function return (either a register or from the stack)
+  static void fr(Reg fr);
+
+  static Hertz clock() { return Traits<CPU>::CLOCK; }
+  static void clock(const Hertz &frequency) {}
+  static Hertz max_clock() { return Traits<CPU>::CLOCK; }
+  static Hertz min_clock() { return Traits<CPU>::CLOCK; }
+
+  static Hertz bus_clock() { return Traits<CPU>::CLOCK; }
+
+  static void int_enable();
+  static void int_disable();
+  static bool int_enabled();
+  static bool int_disabled();
+
+  static void halt()
+  {
+    for (;;)
+      ;
+  }
+
+  static void switch_context(Context *volatile *o, Context *volatile n);
+
+  static unsigned int id();
+  static unsigned int cores();
+
+  template <typename T>
+  static T tsl(volatile T &lock)
+  {
+    T old = lock;
+    lock = 1;
+    return old;
+  }
+
+  template <typename T>
+  static T finc(volatile T &value)
+  {
+    T old = value;
+    value++;
+    return old;
+  }
+
+  template <typename T>
+  static T fdec(volatile T &value)
+  {
+    T old = value;
+    value--;
+    return old;
+  }
+
+  template <typename T>
+  static T cas(volatile T &value, T compare, T replacement)
+  {
+    T old = value;
+    if (value == compare)
+    {
+      value = replacement;
+    }
+    return old;
+  }
+
+  template <int (*finc)(volatile int &)>
+  static void smp_barrier(unsigned int cores, unsigned int id)
+  {
+    if (cores > 1)
+    {
+      static volatile int ready[2];
+      static volatile int i;
+
+      int j = i;
+
+      finc(ready[j]);
+      if (id == 0)
+      {
+        while (ready[j] < int(cores))
+          ;           // wait for all CPUs to be ready
+        i = !i;       // toggle ready
+        ready[j] = 0; // signalizes waiting CPUs
+      }
+      else
+      {
+        while (ready[j])
+          ; // wait for CPU[0] signal
+      }
     }
+  }
 
-    static void fpu_save();
-    static void fpu_restore();
+  static void fpu_save();
+  static void fpu_restore();
 
-    static void flush_tlb();
-    static void flush_tlb(Log_Addr addr);
+  static void flush_tlb();
+  static void flush_tlb(Log_Addr addr);
 
-    static Reg64 htole64(Reg64 v) { return (BIG_ENDIAN) ? swap64(v) : v; }
-    static Reg32 htole32(Reg32 v) { return (BIG_ENDIAN) ? swap32(v) : v; }
-    static Reg16 htole16(Reg16 v) { return (BIG_ENDIAN) ? swap16(v) : v; }
-    static Reg64 letoh64(Reg64 v) { return htole64(v); }
-    static Reg32 letoh32(Reg32 v) { return htole32(v); }
-    static Reg16 letoh16(Reg16 v) { return htole16(v); }
+  static Reg64 htole64(Reg64 v) { return (BIG_ENDIAN) ? swap64(v) : v; }
+  static Reg32 htole32(Reg32 v) { return (BIG_ENDIAN) ? swap32(v) : v; }
+  static Reg16 htole16(Reg16 v) { return (BIG_ENDIAN) ? swap16(v) : v; }
+  static Reg64 letoh64(Reg64 v) { return htole64(v); }
+  static Reg32 letoh32(Reg32 v) { return htole32(v); }
+  static Reg16 letoh16(Reg16 v) { return htole16(v); }
 
-    static Reg64 htobe64(Reg64 v) { return (!BIG_ENDIAN) ? swap64(v) : v; }
-    static Reg32 htobe32(Reg32 v) { return (!BIG_ENDIAN) ? swap32(v) : v; }
-    static Reg16 htobe16(Reg16 v) { return (!BIG_ENDIAN) ? swap16(v) : v; }
-    static Reg64 betoh64(Reg64 v) { return htobe64(v); }
-    static Reg32 betoh32(Reg32 v) { return htobe32(v); }
-    static Reg16 betoh16(Reg16 v) { return htobe16(v); }
+  static Reg64 htobe64(Reg64 v) { return (!BIG_ENDIAN) ? swap64(v) : v; }
+  static Reg32 htobe32(Reg32 v) { return (!BIG_ENDIAN) ? swap32(v) : v; }
+  static Reg16 htobe16(Reg16 v) { return (!BIG_ENDIAN) ? swap16(v) : v; }
+  static Reg64 betoh64(Reg64 v) { return htobe64(v); }
+  static Reg32 betoh32(Reg32 v) { return htobe32(v); }
+  static Reg16 betoh16(Reg16 v) { return htobe16(v); }
 
-    static Reg32 htonl(Reg32 v) { return (BIG_ENDIAN) ? v : swap32(v); }
-    static Reg16 htons(Reg16 v) { return (BIG_ENDIAN) ? v : swap16(v); }
-    static Reg32 ntohl(Reg32 v) { return htonl(v); }
-    static Reg16 ntohs(Reg16 v) { return htons(v); }
+  static Reg32 htonl(Reg32 v) { return (BIG_ENDIAN) ? v : swap32(v); }
+  static Reg16 htons(Reg16 v) { return (BIG_ENDIAN) ? v : swap16(v); }
+  static Reg32 ntohl(Reg32 v) { return htonl(v); }
+  static Reg16 ntohs(Reg16 v) { return htons(v); }
 
 protected:
-    static Reg64 swap64(Reg64 v) { return
-        ((v & 0xff00000000000000ULL) >> 56) |
-        ((v & 0x00ff000000000000ULL) >> 40) |
-        ((v & 0x0000ff0000000000ULL) >> 24) |
-        ((v & 0x000000ff00000000uLL) >> 8)  |
-        ((v & 0x00000000ff000000ULL) << 8)  |
-        ((v & 0x0000000000ff0000ULL) << 24) |
-        ((v & 0x000000000000ff00ULL) << 40) |
-        ((v & 0x00000000000000ffULL) << 56); }
-    static Reg32 swap32(Reg32 v) { return
-        ((v & 0xff000000) >> 24) |
-        ((v & 0x00ff0000) >> 8) |
-        ((v & 0x0000ff00) << 8) |
-        ((v & 0x000000ff) << 24); }
-    static Reg16 swap16(Reg16 v) { return
-        ((v & 0xff00) >> 8) |
-        ((v & 0x00ff) << 8); }
+  static Reg64 swap64(Reg64 v) { return ((v & 0xff00000000000000ULL) >> 56) |
+                                        ((v & 0x00ff000000000000ULL) >> 40) |
+                                        ((v & 0x0000ff0000000000ULL) >> 24) |
+                                        ((v & 0x000000ff00000000uLL) >> 8) |
+                                        ((v & 0x00000000ff000000ULL) << 8) |
+                                        ((v & 0x0000000000ff0000ULL) << 24) |
+                                        ((v & 0x000000000000ff00ULL) << 40) |
+                                        ((v & 0x00000000000000ffULL) << 56); }
+  static Reg32 swap32(Reg32 v) { return ((v & 0xff000000) >> 24) |
+                                        ((v & 0x00ff0000) >> 8) |
+                                        ((v & 0x0000ff00) << 8) |
+                                        ((v & 0x000000ff) << 24); }
+  static Reg16 swap16(Reg16 v) { return ((v & 0xff00) >> 8) |
+                                        ((v & 0x00ff) << 8); }
 };
 
-template<typename T>
-inline T align32(const T & addr) { return (addr + 3) & ~3U; }
-template<typename T>
-inline T align64(const T & addr) { return (addr + 7) & ~7U; }
-template<typename T>
-inline T align128(const T & addr) { return (addr + 15) & ~15U; }
+template <typename T>
+inline T align32(const T &addr) { return (addr + 3) & ~3U; }
+template <typename T>
+inline T align64(const T &addr) { return (addr + 7) & ~7U; }
+template <typename T>
+inline T align128(const T &addr) { return (addr + 15) & ~15U; }
 
 __END_SYS
 
diff --git a/include/architecture/rv64/rv64_cpu.h b/include/architecture/rv64/rv64_cpu.h
index a805611..86d12a1 100644
--- a/include/architecture/rv64/rv64_cpu.h
+++ b/include/architecture/rv64/rv64_cpu.h
@@ -55,7 +55,7 @@ public:
         TVM             = 1 << 20,      // Trap Virtual Memory makes SATP inaccessible in supervisor mode
         TW              = 1 << 21,      // Timeout Wait for WFI outside machine mode
         TSR             = 1 << 22,      // Trap SRet in supervisor mode
-        SD              = 1 << 31,      // Status Dirty = (FS | XS)
+        SD              = 1UL << 63,      // Status Dirty = (FS | XS)
     };
 
     // Interrupt-Enable, Interrupt-Pending and Machine Cause Registers ([m|s]ie, [m|s]ip, and [m|s]cause when interrupt bit is set)
@@ -214,9 +214,9 @@ public:
     static Reg fr() { Reg r; ASM("mv %0, a0" :  "=r"(r)); return r; }
     static void fr(Reg r) {  ASM("mv a0, %0" : : "r"(r) :); }
 
-    static unsigned int id() { return 0; }
+    static unsigned int id() { return mhartid(); }
 
-    static unsigned int cores() { return 1; }
+    static unsigned int cores() { return Traits<Machine>::CPUS; }
 
     using CPU_Common::clock;
     using CPU_Common::min_clock;
@@ -276,7 +276,9 @@ public:
         return old;
     }
 
-    static void smp_barrier(unsigned long cores = CPU::cores()) {}
+    static void smp_barrier(unsigned long cores = CPU::cores()) {
+      CPU_Common::smp_barrier<&finc>(cores, id());
+    }
 
     static void flush_tlb() {         ASM("sfence.vma"    : :           : "memory"); }
     static void flush_tlb(Reg addr) { ASM("sfence.vma %0" : : "r"(addr) : "memory"); }
@@ -332,7 +334,7 @@ public:
     static void mint_enable()  { ASM("csrsi mstatus, %0" : : "i"(MIE) : "cc"); }
     static void mint_disable() { ASM("csrci mstatus, %0" : : "i"(MIE) : "cc"); }
 
-    static Reg mhartid() { Reg r; ASM("csrr %0, mhartid" : "=r"(r) : : "memory", "cc"); return r & 0x3; }
+    static Reg mhartid() { Reg r; ASM("csrr %0, mhartid" : "=r"(r) : : "memory", "cc"); return r; }
 
     static void mscratch(Reg r)   { ASM("csrw mscratch, %0" : : "r"(r) : "cc"); }
     static Reg  mscratch() { Reg r; ASM("csrr %0, mscratch" :  "=r"(r) : : ); return r; }
@@ -417,86 +419,86 @@ inline void CPU::Context::push(bool interrupt)
 
 if(interrupt) {
     ASM("       csrr     x3,    mepc            \n"
-        "       sw       x3,    0(sp)           \n");   // push MEPC as PC on interrupts
+        "       sd       x3,    0(sp)           \n");   // push MEPC as PC on interrupts
 } else {
-    ASM("       sw       x1,    0(sp)           \n");   // push RA as PC on context switches
+    ASM("       sd       x1,    0(sp)           \n");   // push RA as PC on context switches
 }
 
     ASM("       csrr     x3,  mstatus           \n");
 
-    ASM("       sw       x3,    4(sp)           \n"     // push ST
-        "       sw       x1,    8(sp)           \n"     // push RA
-        "       sw       x5,   12(sp)           \n"     // push x5-x31
-        "       sw       x6,   16(sp)           \n"
-        "       sw       x7,   20(sp)           \n"
-        "       sw       x8,   24(sp)           \n"
-        "       sw       x9,   28(sp)           \n"
-        "       sw      x10,   32(sp)           \n"
-        "       sw      x11,   36(sp)           \n"
-        "       sw      x12,   40(sp)           \n"
-        "       sw      x13,   44(sp)           \n"
-        "       sw      x14,   48(sp)           \n"
-        "       sw      x15,   52(sp)           \n"
-        "       sw      x16,   56(sp)           \n"
-        "       sw      x17,   60(sp)           \n"
-        "       sw      x18,   64(sp)           \n"
-        "       sw      x19,   68(sp)           \n"
-        "       sw      x20,   72(sp)           \n"
-        "       sw      x21,   76(sp)           \n"
-        "       sw      x22,   80(sp)           \n"
-        "       sw      x23,   84(sp)           \n"
-        "       sw      x24,   88(sp)           \n"
-        "       sw      x25,   92(sp)           \n"
-        "       sw      x26,   96(sp)           \n"
-        "       sw      x27,  100(sp)           \n"
-        "       sw      x28,  104(sp)           \n"
-        "       sw      x29,  108(sp)           \n"
-        "       sw      x30,  112(sp)           \n"
-        "       sw      x31,  116(sp)           \n");
+    ASM("       sd       x3,    8(sp)           \n"     // push ST
+        "       sd       x1,   16(sp)           \n"     // push RA
+        "       sd       x5,   24(sp)           \n"     // push x5-x31
+        "       sd       x6,   32(sp)           \n"
+        "       sd       x7,   40(sp)           \n"
+        "       sd       x8,   48(sp)           \n"
+        "       sd       x9,   56(sp)           \n"
+        "       sd      x10,   64(sp)           \n"
+        "       sd      x11,   72(sp)           \n"
+        "       sd      x12,   80(sp)           \n"
+        "       sd      x13,   88(sp)           \n"
+        "       sd      x14,   96(sp)           \n"
+        "       sd      x15,  104(sp)           \n"
+        "       sd      x16,  112(sp)           \n"
+        "       sd      x17,  120(sp)           \n"
+        "       sd      x18,  128(sp)           \n"
+        "       sd      x19,  136(sp)           \n"
+        "       sd      x20,  144(sp)           \n"
+        "       sd      x21,  152(sp)           \n"
+        "       sd      x22,  160(sp)           \n"
+        "       sd      x23,  168(sp)           \n"
+        "       sd      x24,  176(sp)           \n"
+        "       sd      x25,  184(sp)           \n"
+        "       sd      x26,  192(sp)           \n"
+        "       sd      x27,  200(sp)           \n"
+        "       sd      x28,  208(sp)           \n"
+        "       sd      x29,  216(sp)           \n"
+        "       sd      x30,  224(sp)           \n"
+        "       sd      x31,  232(sp)           \n");
 }
 
 inline void CPU::Context::pop(bool interrupt)
 {
-    ASM("       lw       x3,    0(sp)           \n");   // pop PC into TMP
+    ASM("       ld       x3,    0(sp)           \n");   // pop PC into TMP
 if(interrupt) {
     ASM("       add      x3, x3, a0             \n");   // a0 is set by exception handlers to adjust [M|S]EPC to point to the next instruction if needed
 }
     ASM("       csrw     mepc, x3               \n");   // MEPC = PC
 
-    ASM("       lw       x3,    4(sp)           \n");   // pop ST into TMP
+    ASM("       ld       x3,    8(sp)           \n");   // pop ST into TMP
 if(!interrupt) {
     ASM("       li       a0, 3 << 11            \n"     // use a0 as a second TMP, since it will be restored later
         "       or       x3, x3, a0             \n");   // mstatus.MPP is automatically cleared on mret, so we reset it to MPP_M here
 }
 
-    ASM("       lw       x1,    8(sp)           \n"     // pop RA
-        "       lw       x5,   12(sp)           \n"     // pop x5-x31
-        "       lw       x6,   16(sp)           \n"
-        "       lw       x7,   20(sp)           \n"
-        "       lw       x8,   24(sp)           \n"
-        "       lw       x9,   28(sp)           \n"
-        "       lw      x10,   32(sp)           \n"
-        "       lw      x11,   36(sp)           \n"
-        "       lw      x12,   40(sp)           \n"
-        "       lw      x13,   44(sp)           \n"
-        "       lw      x14,   48(sp)           \n"
-        "       lw      x15,   52(sp)           \n"
-        "       lw      x16,   56(sp)           \n"
-        "       lw      x17,   60(sp)           \n"
-        "       lw      x18,   64(sp)           \n"
-        "       lw      x19,   68(sp)           \n"
-        "       lw      x20,   72(sp)           \n"
-        "       lw      x21,   76(sp)           \n"
-        "       lw      x22,   80(sp)           \n"
-        "       lw      x23,   84(sp)           \n"
-        "       lw      x24,   88(sp)           \n"
-        "       lw      x25,   92(sp)           \n"
-        "       lw      x26,   96(sp)           \n"
-        "       lw      x27,  100(sp)           \n"
-        "       lw      x28,  104(sp)           \n"
-        "       lw      x29,  108(sp)           \n"
-        "       lw      x30,  112(sp)           \n"
-        "       lw      x31,  116(sp)           \n"
+    ASM("       ld       x1,   16(sp)           \n"     // pop RA
+        "       ld       x5,   24(sp)           \n"     // pop x5-x31
+        "       ld       x6,   32(sp)           \n"
+        "       ld       x7,   40(sp)           \n"
+        "       ld       x8,   48(sp)           \n"
+        "       ld       x9,   56(sp)           \n"
+        "       ld      x10,   64(sp)           \n"
+        "       ld      x11,   72(sp)           \n"
+        "       ld      x12,   80(sp)           \n"
+        "       ld      x13,   88(sp)           \n"
+        "       ld      x14,   96(sp)           \n"
+        "       ld      x15,  104(sp)           \n"
+        "       ld      x16,  112(sp)           \n"
+        "       ld      x17,  120(sp)           \n"
+        "       ld      x18,  128(sp)           \n"
+        "       ld      x19,  136(sp)           \n"
+        "       ld      x20,  144(sp)           \n"
+        "       ld      x21,  152(sp)           \n"
+        "       ld      x22,  160(sp)           \n"
+        "       ld      x23,  168(sp)           \n"
+        "       ld      x24,  176(sp)           \n"
+        "       ld      x25,  184(sp)           \n"
+        "       ld      x26,  192(sp)           \n"
+        "       ld      x27,  200(sp)           \n"
+        "       ld      x28,  208(sp)           \n"
+        "       ld      x29,  216(sp)           \n"
+        "       ld      x30,  224(sp)           \n"
+        "       ld      x31,  232(sp)           \n"
         "       addi    sp, sp, %0              \n" : : "i"(sizeof(Context))); // complete the pops above by adjusting SP
 
     ASM("       csrw    mstatus, x3             \n");   // MSTATUS = ST
diff --git a/include/architecture/rv64/rv64_pmu.h b/include/architecture/rv64/rv64_pmu.h
index 33bebe9..0eda9d0 100644
--- a/include/architecture/rv64/rv64_pmu.h
+++ b/include/architecture/rv64/rv64_pmu.h
@@ -7,10 +7,13 @@
 #define __pmu_common_only__
 #include <architecture/pmu.h>
 #undef __pmu_common_only__
+#define __rv32_pmu_common_only__
+#include <architecture/rv32/rv32_pmu.h>
+#undef __rv32_pmu_common_only__
 
 __BEGIN_SYS
 
-class RV64_PMU: public PMU_Common
+class RV64_PMU: public RV32_PMU
 {
 private:
     typedef CPU::Reg Reg;
@@ -300,263 +303,232 @@ private:
         assert(counter < COUNTERS);
 
         Count reg = 0;
-        Reg aux = 0;
+        // Reg aux = 0;
 
         switch(counter)
         {
         case 0:
-            ASM("rdcycleh %0" : "=r"(reg) : );
-            ASM("rdcycle  %0" : "=r"(aux) : );
+            ASM("rdcycle  %0" : "=r"(reg) : );
             break;
-#ifndef __sifive_e__
-            case 1:
-            ASM("rdtimeh %0" : "=r"(reg) : );
-            ASM("rdtime  %0" : "=r"(aux) : );
+#ifndef __sifive_u__
+        case 1:
+            ASM("rdtime  %0" : "=r"(reg) : );
             break;
 #endif
         case 2:
-            ASM("rdinstreth %0" : "=r"(reg) : );
-            ASM("rdinstret  %0" : "=r"(aux) : );
+            ASM("rdinstret  %0" : "=r"(reg) : );
             break;
         case 3:
-            ASM("csrr %0, mhpmcounter3h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter3"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter3"  : "=r"(reg) : );
             break;
         case 4:
-            ASM("csrr %0, mhpmcounter4h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter4"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter4"  : "=r"(reg) : );
             break;
         case 5:
-            ASM("csrr %0, mhpmcounter5h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter5"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter5"  : "=r"(reg) : );
             break;
         case 6:
-            ASM("csrr %0, mhpmcounter6h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter6"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter6"  : "=r"(reg) : );
             break;
         case 7:
-            ASM("csrr %0, mhpmcounter7h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter7"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter7"  : "=r"(reg) : );
             break;
         case 8:
-            ASM("csrr %0, mhpmcounter8h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter8"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter8"  : "=r"(reg) : );
             break;
         case 9:
-            ASM("csrr %0, mhpmcounter9h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter9"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter9"  : "=r"(reg) : );
             break;
         case 10:
-            ASM("csrr %0, mhpmcounter10h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter10"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter10"  : "=r"(reg) : );
             break;
         case 11:
-            ASM("csrr %0, mhpmcounter11h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter11"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter11"  : "=r"(reg) : );
             break;
         case 12:
-            ASM("csrr %0, mhpmcounter12h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter12"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter12"  : "=r"(reg) : );
             break;
         case 13:
-            ASM("csrr %0, mhpmcounter13h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter13"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter13"  : "=r"(reg) : );
             break;
         case 14:
-            ASM("csrr %0, mhpmcounter14h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter14"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter14"  : "=r"(reg) : );
             break;
         case 15:
-            ASM("csrr %0, mhpmcounter15h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter15"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter15"  : "=r"(reg) : );
             break;
         case 16:
-            ASM("csrr %0, mhpmcounter16h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter16"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter16"  : "=r"(reg) : );
             break;
         case 17:
-            ASM("csrr %0, mhpmcounter17h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter17"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter17"  : "=r"(reg) : );
             break;
         case 18:
-            ASM("csrr %0, mhpmcounter18h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter18"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter18"  : "=r"(reg) : );
             break;
         case 19:
-            ASM("csrr %0, mhpmcounter19h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter19"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter19"  : "=r"(reg) : );
             break;
         case 20:
-            ASM("csrr %0, mhpmcounter20h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter20"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter20"  : "=r"(reg) : );
             break;
         case 21:
-            ASM("csrr %0, mhpmcounter21h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter21"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter21"  : "=r"(reg) : );
             break;
         case 22:
-            ASM("csrr %0, mhpmcounter22h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter22"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter22"  : "=r"(reg) : );
             break;
         case 23:
-            ASM("csrr %0, mhpmcounter23h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter23"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter23"  : "=r"(reg) : );
             break;
         case 24:
-            ASM("csrr %0, mhpmcounter24h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter24"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter24"  : "=r"(reg) : );
             break;
         case 25:
-            ASM("csrr %0, mhpmcounter25h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter25"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter25"  : "=r"(reg) : );
             break;
         case 26:
-            ASM("csrr %0, mhpmcounter26h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter26"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter26"  : "=r"(reg) : );
             break;
         case 27:
-            ASM("csrr %0, mhpmcounter27h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter27"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter27"  : "=r"(reg) : );
             break;
         case 28:
-            ASM("csrr %0, mhpmcounter28h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter28"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter28"  : "=r"(reg) : );
             break;
         case 29:
-            ASM("csrr %0, mhpmcounter29h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter29"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter29"  : "=r"(reg) : );
             break;
         case 30:
-            ASM("csrr %0, mhpmcounter30h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter30"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter30"  : "=r"(reg) : );
             break;
         case 31:
-            ASM("csrr %0, mhpmcounter31h" : "=r"(reg) : );
-            ASM("csrr %0, mhpmcounter31"  : "=r"(aux) : );
+            ASM("csrr %0, mhpmcounter31"  : "=r"(reg) : );
             break;
         }
-        return (reg << 32) | aux;
+        // return (reg << 32) | aux;
+        return reg;
     }
 
-    static void mhpmcounter(Reg counter, Count reg) {
+   static void mhpmcounter(Reg counter, Count reg) {
         assert(counter < COUNTERS);
 
         switch(counter)
         {
         case 3:
-            ASM("csrw mhpmcounter3h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter3h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter3,  %0" : : "r"(reg));
             break;
         case 4:
-            ASM("csrw mhpmcounter4h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter4h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter4,  %0" : : "r"(reg));
             break;
         case 5:
-            ASM("csrw mhpmcounter5h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter5h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter5,  %0" : : "r"(reg));
             break;
         case 6:
-            ASM("csrw mhpmcounter6h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter6h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter6,  %0" : : "r"(reg));
             break;
         case 7:
-            ASM("csrw mhpmcounter7h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter7h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter7,  %0" : : "r"(reg));
             break;
         case 8:
-            ASM("csrw mhpmcounter8h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter8h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter8,  %0" : : "r"(reg));
             break;
         case 9:
-            ASM("csrw mhpmcounter9h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter9h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter9,  %0" : : "r"(reg));
             break;
         case 10:
-            ASM("csrw mhpmcounter10h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter10h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter10,  %0" : : "r"(reg));
             break;
         case 11:
-            ASM("csrw mhpmcounter11h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter11h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter11,  %0" : : "r"(reg));
             break;
         case 12:
-            ASM("csrw mhpmcounter12h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter12h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter12,  %0" : : "r"(reg));
             break;
         case 13:
-            ASM("csrw mhpmcounter13h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter13h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter13,  %0" : : "r"(reg));
             break;
         case 14:
-            ASM("csrw mhpmcounter14h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter14h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter14,  %0" : : "r"(reg));
             break;
         case 15:
-            ASM("csrw mhpmcounter15h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter15h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter15,  %0" : : "r"(reg));
             break;
         case 16:
-            ASM("csrw mhpmcounter16h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter16h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter16,  %0" : : "r"(reg));
             break;
         case 17:
-            ASM("csrw mhpmcounter17h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter17h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter17,  %0" : : "r"(reg));
             break;
         case 18:
-            ASM("csrw mhpmcounter18h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter18h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter18,  %0" : : "r"(reg));
             break;
         case 19:
-            ASM("csrw mhpmcounter19h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter19h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter19,  %0" : : "r"(reg));
             break;
         case 20:
-            ASM("csrw mhpmcounter20h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter20h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter20,  %0" : : "r"(reg));
             break;
         case 21:
-            ASM("csrw mhpmcounter21h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter21h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter21,  %0" : : "r"(reg));
             break;
         case 22:
-            ASM("csrw mhpmcounter22h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter22h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter22,  %0" : : "r"(reg));
             break;
         case 23:
-            ASM("csrw mhpmcounter23h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter23h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter23,  %0" : : "r"(reg));
             break;
         case 24:
-            ASM("csrw mhpmcounter24h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter24h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter24,  %0" : : "r"(reg));
             break;
         case 25:
-            ASM("csrw mhpmcounter25h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter25h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter25,  %0" : : "r"(reg));
             break;
         case 26:
-            ASM("csrw mhpmcounter26h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter26h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter26,  %0" : : "r"(reg));
             break;
         case 27:
-            ASM("csrw mhpmcounter27h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter27h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter27,  %0" : : "r"(reg));
             break;
         case 28:
-            ASM("csrw mhpmcounter28h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter28h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter28,  %0" : : "r"(reg));
             break;
         case 29:
-            ASM("csrw mhpmcounter29h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter29h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter29,  %0" : : "r"(reg));
             break;
         case 30:
-            ASM("csrw mhpmcounter30h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter30h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter30,  %0" : : "r"(reg));
             break;
         case 31:
-            ASM("csrw mhpmcounter31h, %0" : : "r"(reg >> 32));
+            // ASM("csrw mhpmcounter31h, %0" : : "r"(reg >> 32));
             ASM("csrw mhpmcounter31,  %0" : : "r"(reg));
             break;
         default:
diff --git a/include/architecture/rv64/rv64_traits.h b/include/architecture/rv64/rv64_traits.h
index 5fccbba..251375f 100644
--- a/include/architecture/rv64/rv64_traits.h
+++ b/include/architecture/rv64/rv64_traits.h
@@ -11,7 +11,7 @@ template<> struct Traits<CPU>: public Traits<Build>
 {
     enum {LITTLE, BIG};
     static const unsigned int ENDIANESS         = LITTLE;
-    static const unsigned int WORD_SIZE         = 32;
+    static const unsigned int WORD_SIZE         = 64;
     static const unsigned int CLOCK             = 50000000;
     static const bool unaligned_memory_access   = false;
 };
diff --git a/include/architecture/rv64/rv64_tsc.h b/include/architecture/rv64/rv64_tsc.h
index 5ff20d0..8f2f761 100644
--- a/include/architecture/rv64/rv64_tsc.h
+++ b/include/architecture/rv64/rv64_tsc.h
@@ -19,10 +19,14 @@ private:
     static const unsigned int ACCURACY = 40000; // this is actually unknown at the moment
 
     // Registers offsets from CLINT_BASE
-    enum {               // Description
-        MTIME  = 0xbff8, // Counter (lower 32 bits)
-        MTIMEH = 0xbffc  // Counter (upper 32 bits)
-    };
+    static const unsigned int MTIME = 0xbff8;
+
+    // Registers offsets from CLINT_BASE
+    // enum {               // Description
+    //     MTIME  = 0xbff8, // Counter (lower 32 bits)
+    //     MTIMEH = 0xbffc  // Counter (upper 32 bits)
+    // };
+
 
 public:
     using TSC_Common::Time_Stamp;
@@ -35,7 +39,7 @@ public:
     static Hertz frequency() { return CLOCK; }
     static PPB accuracy() { return ACCURACY; }
 
-    static Time_Stamp time_stamp() { return (CPU::Reg64(reg(MTIMEH)) << 32) | reg(MTIME); }
+    static Time_Stamp time_stamp() { return reg(MTIME); }
 
 private:
     static void init() {}
diff --git a/include/machine/riscv/riscv_ic.h b/include/machine/riscv/riscv_ic.h
index 88d819c..164fb77 100644
--- a/include/machine/riscv/riscv_ic.h
+++ b/include/machine/riscv/riscv_ic.h
@@ -160,7 +160,7 @@ private:
     static void exception(Interrupt_Id i);
 
     // Physical handler
-    static void entry() __attribute((naked, aligned(4)));
+    static void entry() __attribute((naked, aligned(8)));
 
     static void init();
 
diff --git a/include/machine/riscv/riscv_machine.h b/include/machine/riscv/riscv_machine.h
index 97327ce..199d0c2 100644
--- a/include/machine/riscv/riscv_machine.h
+++ b/include/machine/riscv/riscv_machine.h
@@ -32,7 +32,7 @@ public:
     static const UUID & uuid() { return System::info()->bm.uuid; }
 
 private:
-    static void pre_init(System_Info * si) {}
+    static void pre_init(System_Info * si);
     static void init();
 };
 
diff --git a/include/machine/riscv/riscv_timer.h b/include/machine/riscv/riscv_timer.h
index e0d4e3c..5203e73 100644
--- a/include/machine/riscv/riscv_timer.h
+++ b/include/machine/riscv/riscv_timer.h
@@ -46,7 +46,10 @@ protected:
         else
             db<Timer>(WRN) << "Timer not installed!"<< endl;
 
-        _current = _initial;
+        // _current = _initial;
+        for(unsigned int i = 0; i < CPU::cores(); i++){
+          _current[i] = _initial;
+        }
     }
 
 public:
@@ -56,13 +59,16 @@ public:
         _channels[_channel] = 0;
     }
 
-    Tick read() { return _current; }
+    // Tick read() { return _current; }
+    Tick read() { return _current[CPU::id()]; }
 
     int restart() {
         db<Timer>(TRC) << "Timer::restart() => {f=" << frequency() << ",h=" << reinterpret_cast<void *>(_handler) << ",count=" << _current << "}" << endl;
 
-        int percentage = _current * 100 / _initial;
-        _current = _initial;
+        // int percentage = _current * 100 / _initial;
+        // _current = _initial;
+        int percentage = _current[CPU::id()] * 100 / _initial;
+        _current[CPU::id()] = _initial;
 
         return percentage;
     }
@@ -77,10 +83,14 @@ public:
     void handler(const Handler & handler) { _handler = handler; }
 
 private:
-    static volatile CPU::Reg32 & reg(unsigned int o) { return reinterpret_cast<volatile CPU::Reg32 *>(Memory_Map::CLINT_BASE)[o / sizeof(CPU::Reg32)]; }
+    // static volatile CPU::Reg32 & reg(unsigned int o) { return reinterpret_cast<volatile CPU::Reg32 *>(Memory_Map::CLINT_BASE)[o / sizeof(CPU::Reg64)]; }
 
+    static volatile CPU::Reg64 & reg(unsigned long o) {
+        auto clint = reinterpret_cast<volatile CPU::Reg32 *>(Memory_Map::CLINT_BASE);
+        return *reinterpret_cast<volatile CPU::Reg64 *>(clint[o / sizeof(CPU::Reg32)]); 
+    }
     static void config(const Hertz & frequency) {
-        reg(MTIMECMP) = reg(MTIME) + (CLOCK / frequency);
+        reg(MTIMECMP+MTIMECMP_CORE_OFFSET * CPU::id()) = reg(MTIME) + (CLOCK / frequency);
     }
 
     static void int_handler(Interrupt_Id i);
@@ -91,7 +101,8 @@ protected:
     unsigned int _channel;
     Tick _initial;
     bool _retrigger;
-    volatile Tick _current;
+    // volatile Tick _current;
+    volatile Tick _current[Traits<Machine>::CPUS];
     Handler _handler;
 
     static Timer * _channels[CHANNELS];
diff --git a/include/machine/riscv/sifive_u/sifive_u_memory_map.h b/include/machine/riscv/sifive_u/sifive_u_memory_map.h
index 0096a78..6ee0abe 100644
--- a/include/machine/riscv/sifive_u/sifive_u_memory_map.h
+++ b/include/machine/riscv/sifive_u/sifive_u_memory_map.h
@@ -10,7 +10,8 @@ __BEGIN_SYS
 struct Memory_Map
 {
 private:
-    static const bool emulated = (Traits<Build>::ARCHITECTURE != Traits<Build>::RV64); // specifying a SiFive-U with RV32 sets QEMU machine to Virt
+    //static const bool multitask = Traits<System>::multitask;
+    static const bool emulated = (Traits<CPU>::WORD_SIZE != 64);
 
 public:
     enum : unsigned long {
@@ -21,7 +22,8 @@ public:
         RAM_TOP         = Traits<Machine>::RAM_TOP,
         MIO_BASE        = Traits<Machine>::MIO_BASE,
         MIO_TOP         = Traits<Machine>::MIO_TOP,
-        BOOT_STACK      = RAM_TOP + 1 - Traits<Machine>::STACK_SIZE, // will be used as the stack's base, not the stack pointer
+        INT_M2S         = RAM_TOP + 1 - 4096,   // the last page is used by the _int_m2s() interrupt forwarder installed by SETUP
+        BOOT_STACK      = INT_M2S - Traits<Build>::CPUS * Traits<Machine>::STACK_SIZE, // will be used as the stack's base, not the stack pointer
         FREE_BASE       = RAM_BASE,
         FREE_TOP        = BOOT_STACK,
 
diff --git a/include/machine/riscv/sifive_u/sifive_u_traits.h b/include/machine/riscv/sifive_u/sifive_u_traits.h
index 80c52a9..5d1476e 100644
--- a/include/machine/riscv/sifive_u/sifive_u_traits.h
+++ b/include/machine/riscv/sifive_u/sifive_u_traits.h
@@ -18,6 +18,11 @@ template<> struct Traits<Machine>: public Traits<Machine_Common>
 {
 public:
     static const unsigned int NOT_USED          = 0xffffffff;
+    static const unsigned int CPUS              = Traits<Build>::CPUS;
+
+    // Flash
+    static const unsigned int FLASH_BASE        = 0x87ffff0c;
+    static const unsigned int FLASH_TOP         = 0x87ffffff;
 
     // Physical Memory
     static const unsigned int RAM_BASE          = 0x80000000;                           // 2 GB
@@ -70,7 +75,9 @@ template <> struct Traits<UART>: public Traits<Machine_Common>
 {
     static const unsigned int UNITS = 2;
 
-    static const unsigned int CLOCK = 22729000;
+    static const unsigned int REFERENCE_CLOCK = 22729000;
+    static const unsigned int CLOCK_DIVISOR = 16;
+    static const unsigned int CLOCK = REFERENCE_CLOCK/CLOCK_DIVISOR;
 
     static const unsigned int DEF_UNIT = 1;
     static const unsigned int DEF_BAUD_RATE = 115200;
diff --git a/include/process.h b/include/process.h
index e7beb71..dabf9ca 100644
--- a/include/process.h
+++ b/include/process.h
@@ -25,6 +25,8 @@ class Thread
 
 protected:
     static const bool preemptive = Traits<Thread>::Criterion::preemptive;
+    static const bool dynamic = Traits<Thread>::Criterion::dynamic;
+    static const bool iobound = Traits<Thread>::Criterion::iobound;
     static const bool reboot = Traits<System>::reboot;
 
     static const unsigned int QUANTUM = Traits<Thread>::QUANTUM;
diff --git a/include/scheduler.h b/include/scheduler.h
index 99bfd36..5b1ac12 100644
--- a/include/scheduler.h
+++ b/include/scheduler.h
@@ -59,6 +59,7 @@ public:
     static const bool task_wide = false;
     static const bool cpu_wide = false;
     static const bool system_wide = false;
+    static const bool iobound = false;
     static const unsigned int QUEUES = 1;
 
     // Runtime Statistics (for policies that don't use any; that´s why its a union)
@@ -145,6 +146,32 @@ public:
     FCFS(int p = NORMAL, Tn & ... an);
 };
 
+class TimePreemptive: public Priority
+{
+public:
+    static const unsigned int HEADS = Traits<Machine>::CPUS;
+    static const bool timed = true;
+    static const bool dynamic = true;
+    static const bool preemptive = false;
+    static const bool iobound = true;
+
+public:
+    template <typename ... Tn>
+    TimePreemptive(int p = NORMAL, Tn & ... an) : Priority(p) {}
+    bool award();
+
+    static unsigned int current_head() { return CPU::id(); }
+};
+
 __END_SYS
 
+__BEGIN_UTIL
+
+// Scheduling Queues
+template<typename T>
+class Scheduling_Queue<T, TimePreemptive>:
+public Multihead_Scheduling_List<T> {};
+
+__END_UTIL
+
 #endif
diff --git a/include/system.h b/include/system.h
index 5215ef1..ff91c7a 100644
--- a/include/system.h
+++ b/include/system.h
@@ -24,6 +24,25 @@ private:
     static Heap * _heap;
 };
 
+class Flash
+{
+    friend class Init_Flash;
+    friend void * ::malloc(size_t, const EPOS::Flash_Allocator &);
+    friend void ::free(void *, const EPOS::Flash_Allocator &);
+
+    friend void * ::operator new(size_t, const EPOS::Flash_Allocator &);
+    friend void * ::operator new[](size_t, const EPOS::Flash_Allocator &);
+    friend void ::operator delete(void *);
+    friend void ::operator delete[](void *);
+
+private:
+    static void init();
+
+private:
+    static char _preheap[sizeof(Heap)];
+    static Heap * _heap;
+};
+
 class System
 {
     friend class Init_System;                                                   // for _heap
@@ -94,10 +113,24 @@ inline void * operator new[](size_t bytes, const EPOS::System_Allocator & alloca
     return _SYS::System::_heap->alloc(bytes);
 }
 
+inline void * operator new(size_t bytes, const EPOS::Flash_Allocator & allocator) {
+    return _SYS::Flash::_heap->alloc(bytes);
+}
+
+inline void * operator new[](size_t bytes, const EPOS::Flash_Allocator & allocator) {
+    return _SYS::Flash::_heap->alloc(bytes);
+}
+
 // Delete cannot be declared inline due to virtual destructors
 void operator delete(void * ptr);
 void operator delete[](void * ptr);
 void operator delete(void * ptr, size_t bytes);
 void operator delete[](void * ptr, size_t bytes);
 
+
+void operator delete(void *, const EPOS::Flash_Allocator &);
+void operator delete[](void * ptr, const EPOS::Flash_Allocator &);
+void operator delete(void * ptr, size_t bytes, const EPOS::Flash_Allocator &);
+void operator delete[](void * ptr, size_t bytes, const EPOS::Flash_Allocator &);
+
 #endif
diff --git a/include/system/config.h b/include/system/config.h
index 435da3a..2820461 100644
--- a/include/system/config.h
+++ b/include/system/config.h
@@ -7,15 +7,15 @@
 // ARCHITECTURE, MACHINE, AND APPLICATION SELECTION
 // This section is generated automatically from makedefs by $EPOS/etc/makefile
 //============================================================================
-#define SMOD xxx
-#define ARCH xxx
-#define MACH xxx
-#define MMOD xxx
-#define APPL xxx
-#define __mode_xxx__
-#define __arch_xxx__
-#define __mach_xxx__
-#define __mmod_xxx__
+#define SMOD library
+#define ARCH rv64
+#define MACH riscv
+#define MMOD sifive_u
+#define APPL hello
+#define __library__
+#define __rv64__
+#define __riscv__
+#define __sifive_u__
 
 //============================================================================
 // NAMESPACES AND DEFINITIONS
diff --git a/include/system/traits.h b/include/system/traits.h
index a430f7a..d263913 100644
--- a/include/system/traits.h
+++ b/include/system/traits.h
@@ -100,6 +100,7 @@ class Periodic_Thread;
 class RT_Thread;
 class Task;
 class Priority;
+class TimePreemptive;
 class FCFS;
 class RR;
 class RM;
diff --git a/include/system/types.h b/include/system/types.h
index 645c2df..6d5d357 100644
--- a/include/system/types.h
+++ b/include/system/types.h
@@ -9,6 +9,7 @@ __BEGIN_API
 
 // Memory allocators
 enum System_Allocator { SYSTEM };
+enum Flash_Allocator { FLASH };
 enum Scratchpad_Allocator { SCRATCHPAD };
 enum Color {
     COLOR_0,  COLOR_1,  COLOR_2,  COLOR_3,  COLOR_4,  COLOR_5,  COLOR_6,  COLOR_7,
@@ -50,6 +51,14 @@ void * operator new[](size_t, const EPOS::Scratchpad_Allocator &);
 void * operator new(size_t, const EPOS::Color &);
 void * operator new[](size_t, const EPOS::Color &);
 
+// Flash
+
+void * malloc(size_t, const EPOS::Flash_Allocator &);
+void free(void *, const EPOS::Flash_Allocator &);
+
+void * operator new(size_t, const EPOS::Flash_Allocator &);
+void * operator new[](size_t, const EPOS::Flash_Allocator &);
+
 // Utilities
 __BEGIN_UTIL
 
diff --git a/include/utility/heap.h b/include/utility/heap.h
index 1840fa2..bac4137 100644
--- a/include/utility/heap.h
+++ b/include/utility/heap.h
@@ -9,6 +9,11 @@
 
 __BEGIN_UTIL
 
+extern "C" {
+    void _lock_heap();
+    void _unlock_heap();
+}
+
 // Heap
 class Heap: private Grouping_List<char>
 {
@@ -33,6 +38,7 @@ public:
     void * alloc(unsigned int bytes) {
         db<Heaps>(TRC) << "Heap::alloc(this=" << this << ",bytes=" << bytes;
 
+        _lock_heap();
         if(!bytes)
             return 0;
 
@@ -58,6 +64,7 @@ public:
             *addr++ = reinterpret_cast<long>(this);
         *addr++ = bytes;
 
+        _unlock_heap();
         db<Heaps>(TRC) << ") => " << reinterpret_cast<void *>(addr) << endl;
 
         return addr;
@@ -66,11 +73,13 @@ public:
     void free(void * ptr, unsigned int bytes) {
         db<Heaps>(TRC) << "Heap::free(this=" << this << ",ptr=" << ptr << ",bytes=" << bytes << ")" << endl;
 
+        _lock_heap();
         if(ptr && (bytes >= sizeof(Element))) {
             Element * e = new (ptr) Element(reinterpret_cast<char *>(ptr), bytes);
             Element * m1, * m2;
             insert_merging(e, &m1, &m2);
         }
+        _unlock_heap();
     }
 
     static void typed_free(void * ptr) {
diff --git a/include/utility/list.h b/include/utility/list.h
index ccc8954..32627f6 100644
--- a/include/utility/list.h
+++ b/include/utility/list.h
@@ -59,8 +59,10 @@ namespace List_Elements
         const R & rank() const { return _rank; }
         const R & key() const { return _rank; }
         void rank(const R & r) { _rank = r; }
-        int promote(const R & n = 1) { _rank -= n; return _rank; }
-        int demote(const R & n = 1) { _rank += n; return _rank; }
+        int promote(const R & n = 1) { _rank = _rank-n; return _rank; }
+        int demote(const R & n = 1) { _rank = _rank+n; return _rank; }
+        // int promote(const R & n = 1) { _rank -= n; return _rank; }
+        // int demote(const R & n = 1) { _rank += n; return _rank; }
 
     private:
         const T * _object;
@@ -221,8 +223,10 @@ namespace List_Elements
 
         const R & rank() const { return _rank; }
         void rank(const R & r) { _rank = r; }
-        int promote(const R & n = 1) { _rank -= n; return _rank; }
-        int demote(const R & n = 1) { _rank += n; return _rank; }
+        // int promote(const R & n = 1) { _rank -= n; return _rank; }
+        // int demote(const R & n = 1) { _rank += n; return _rank; }
+        int promote(const R & n = 1) { _rank = _rank-n; return _rank; }
+        int demote(const R & n = 1) { _rank = _rank+n; return _rank; }
 
     private:
         const T * _object;
diff --git a/makedefs b/makedefs
index 8e31376..1dea0f2 100644
--- a/makedefs
+++ b/makedefs
@@ -101,8 +101,8 @@ ia32_COMP_PREFIX	:= /usr/bin/x86_64-linux-gnu-
 armv7_COMP_PREFIX	:= /usr/bin/arm-none-eabi-
 armv8_COMP_PREFIX	:= /usr/bin/aarch64-linux-gnu-
 rv32_COMP_PREFIX	:= /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
-#rv64_COMP_PREFIX	:= /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
-rv64_COMP_PREFIX    := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
+rv64_COMP_PREFIX	:= /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
+# rv64_COMP_PREFIX    := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
 COMP_PREFIX		= $($(ARCH)_COMP_PREFIX)
 
 # Architecture specifics
@@ -198,7 +198,7 @@ riscv_CC_FLAGS		:= -march=rv32gc -mabi=ilp32f -Wl, -mno-relax
 riscv_AS_FLAGS		:= -march=rv32gc -mabi=ilp32f
 riscv_LD_FLAGS		:= -m elf32lriscv_ilp32f --no-relax
 riscv_EMULATOR		= qemu-system-riscv32 $(QEMU_DEBUG) -machine sifive_e -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
-riscv_DEBUGGER		:= $(COMP_PREFIX)gdb
+riscv_DEBUGGER		:= gdb-multiarch -ex "set architecture riscv:rv32"
 riscv_FLASHER		:= 
 riscv_MAGIC		:= --nmagic
 riscv_CODE_NAME		:= .init
@@ -208,21 +208,21 @@ endif
 
 ifeq ($(MMOD),sifive_u)
 ifeq ($(ARCH),rv64)
-#riscv_CC_FLAGS		:= -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
-#riscv_AS_FLAGS		:= -march=rv64gc -mabi=lp64d
-#riscv_LD_FLAGS		:= -m elf64lriscv_lp64f --no-relax
-#riscv_EMULATOR		= qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
-riscv_CC_FLAGS      := -march=rv32gc -mabi=ilp32f -Wl, -mno-relax
-riscv_AS_FLAGS      := -march=rv32gc -mabi=ilp32f
-riscv_LD_FLAGS      := -m elf32lriscv_ilp32f --no-relax
-riscv_EMULATOR      = qemu-system-riscv32 $(QEMU_DEBUG) -machine sifive_u -cpu rv32 -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+riscv_CC_FLAGS		:= -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
+riscv_AS_FLAGS		:= -march=rv64gc -mabi=lp64d
+riscv_LD_FLAGS		:= -m elf64lriscv_lp64f --no-relax
+riscv_EMULATOR		= qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
+# riscv_CC_FLAGS      := -march=rv32gc -mabi=ilp32f -Wl, -mno-relax
+# riscv_AS_FLAGS      := -march=rv32gc -mabi=ilp32f
+# riscv_LD_FLAGS      := -m elf32lriscv_ilp32f --no-relax
+# riscv_EMULATOR      = qemu-system-riscv32 $(QEMU_DEBUG) -machine sifive_u -cpu rv32 -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
 else
 riscv_CC_FLAGS      := -march=rv32gc -mabi=ilp32d -Wl, -mno-relax
 riscv_AS_FLAGS      := -march=rv32gc -mabi=ilp32d
 riscv_LD_FLAGS      := -m elf32lriscv_ilp32f --no-relax
 riscv_EMULATOR		= qemu-system-riscv32 $(QEMU_DEBUG) -machine virt -cpu rv32 -smp $(CPUS) -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
 endif 
-riscv_DEBUGGER		:= $(COMP_PREFIX)gdb
+riscv_DEBUGGER		:= gdb-multiarch -ex "set architecture riscv:rv64"
 riscv_FLASHER		:= 
 riscv_MAGIC		:= --nmagic
 riscv_CODE_NAME		:= .init
diff --git a/src/api/system_init.cc b/src/api/system_init.cc
index 2522ce5..b0ca875 100644
--- a/src/api/system_init.cc
+++ b/src/api/system_init.cc
@@ -8,7 +8,8 @@ __BEGIN_SYS
 
 void System::init()
 {
-    if(Traits<Alarm>::enabled)
+    // if(Traits<Alarm>::enabled)
+    if(Traits<Alarm>::enabled && CPU::id() == 0) // only enables alarm on main cpu
         Alarm::init();
 
     if(Traits<Thread>::enabled)
diff --git a/src/api/thread.cc b/src/api/thread.cc
index 98a0630..a097908 100644
--- a/src/api/thread.cc
+++ b/src/api/thread.cc
@@ -258,6 +258,9 @@ void Thread::sleep(Queue * q)
 
     Thread * next = _scheduler.chosen();
 
+    if (dynamic && iobound) {
+        prev->_link.promote(1);
+    }
     dispatch(prev, next);
 }
 
@@ -337,7 +340,7 @@ void Thread::dispatch(Thread * prev, Thread * next, bool charge)
         next->_state = RUNNING;
 
         db<Thread>(TRC) << "Thread::dispatch(prev=" << prev << ",next=" << next << ")" << endl;
-        if(Traits<Thread>::debugged && Traits<Debug>::trace) {
+        if(Traits<Thread>::debugged && Traits<Debug>::info) {
             CPU::Context tmp;
             tmp.save();
             db<Thread>(INF) << "Thread::dispatch:prev={" << prev << ",ctx=" << tmp << "}" << endl;
@@ -350,6 +353,7 @@ void Thread::dispatch(Thread * prev, Thread * next, bool charge)
         // disrupting the context (it doesn't make a difference for Intel, which already saves
         // parameters on the stack anyway).
         CPU::switch_context(const_cast<Context **>(&prev->_context), next->_context);
+        ASM("add zero, zero, zero");
     }
 }
 
@@ -358,7 +362,8 @@ int Thread::idle()
 {
     db<Thread>(TRC) << "Thread::idle(this=" << running() << ")" << endl;
 
-    while(_thread_count > 1) { // someone else besides idle
+    // while(_thread_count > 1) { // someone else besides idle
+    while(_thread_count > CPU::cores()) {
         if(Traits<Thread>::trace_idle)
             db<Thread>(TRC) << "Thread::idle(this=" << running() << ")" << endl;
 
@@ -368,12 +373,23 @@ int Thread::idle()
 
     CPU::int_disable();
     db<Thread>(WRN) << "The last thread has exited!" << endl;
-    if(reboot) {
-        db<Thread>(WRN) << "Rebooting the machine ..." << endl;
-        Machine::reboot();
-    } else {
-        db<Thread>(WRN) << "Halting the machine ..." << endl;
-        CPU::halt();
+    // if(reboot) {
+    //     db<Thread>(WRN) << "Rebooting the machine ..." << endl;
+    //     Machine::reboot();
+    // } else {
+    //     db<Thread>(WRN) << "Halting the machine ..." << endl;
+    //     CPU::halt();
+    // }
+
+    if (CPU::id() == 0) {
+        db<Thread>(WRN) << "The last thread has exited!" << endl;
+        if(reboot) {
+            db<Thread>(WRN) << "Rebooting the machine ..." << endl;
+            Machine::reboot();
+        } else {
+            db<Thread>(WRN) << "Halting the machine ..." << endl;
+            CPU::halt();
+        }
     }
 
     // Some machines will need a little time to actually reboot
diff --git a/src/api/thread_init.cc b/src/api/thread_init.cc
index 138fe1b..96f4452 100644
--- a/src/api/thread_init.cc
+++ b/src/api/thread_init.cc
@@ -13,18 +13,23 @@ void Thread::init()
 {
     db<Init, Thread>(TRC) << "Thread::init()" << endl;
 
-    Criterion::init();
+    CPU::smp_barrier();
 
-    typedef int (Main)();
+    Criterion::init();
 
-    // If EPOS is a library, then adjust the application entry point to __epos_app_entry, which will directly call main().
-    // In this case, _init will have already been called, before Init_Application to construct MAIN's global objects.
-    Main * main = reinterpret_cast<Main *>(__epos_app_entry);
+    if (CPU::id() == 0) {
+        typedef int (Main)();
 
-    new (SYSTEM) Thread(Thread::Configuration(Thread::RUNNING, Thread::MAIN), main);
+        // If EPOS is a library, then adjust the application entry point to __epos_app_entry, which will directly call main().
+        // In this case, _init will have already been called, before Init_Application to construct MAIN's global objects.
+        Main * main = reinterpret_cast<Main *>(__epos_app_entry);
+        new (SYSTEM) Thread(Thread::Configuration(Thread::RUNNING, Thread::MAIN), main);
+        new (SYSTEM) Thread(Thread::Configuration(Thread::READY, Thread::IDLE), &Thread::idle);
+    } else {
+        new (SYSTEM) Thread(Thread::Configuration(Thread::RUNNING, Thread::IDLE), &Thread::idle);
+    }
 
-    // Idle thread creation does not cause rescheduling (see Thread::constructor_epilogue)
-    new (SYSTEM) Thread(Thread::Configuration(Thread::READY, Thread::IDLE), &Thread::idle);
+    CPU::smp_barrier();
 
     // The installation of the scheduler timer handler does not need to be done after the
     // creation of threads, since the constructor won't call reschedule() which won't call
@@ -32,13 +37,14 @@ void Thread::init()
     // Letting reschedule() happen during thread creation is also harmless, since MAIN is
     // created first and dispatch won't replace it nor by itself neither by IDLE (which
     // has a lower priority)
-    if(Criterion::timed)
+    if(Criterion::timed && CPU::id() == 0)
         _timer = new (SYSTEM) Scheduler_Timer(QUANTUM, time_slicer);
 
     // No more interrupts until we reach init_end
     CPU::int_disable();
 
     // Transition from CPU-based locking to thread-based locking
+    CPU::smp_barrier();
     This_Thread::not_booting();
 }
 
diff --git a/src/architecture/rv64/rv64_cpu.cc b/src/architecture/rv64/rv64_cpu.cc
index 9ade785..bcdbe1b 100644
--- a/src/architecture/rv64/rv64_cpu.cc
+++ b/src/architecture/rv64/rv64_cpu.cc
@@ -10,37 +10,37 @@ unsigned int CPU::_bus_clock;
 
 void CPU::Context::save() volatile
 {
-    ASM("       sw       x1,    0(a0)           \n"     // push RA as PC
+    ASM("       sd       x1,    0(a0)           \n"     // push RA as PC
         "       csrr     x3,  mstatus           \n"
-        "       sw       x3,    4(a0)           \n"     // push ST
-        "       sw       x1,    8(a0)           \n"     // push RA
-        "       sw       x5,   12(a0)           \n"     // push x5-x31
-        "       sw       x6,   16(a0)           \n"
-        "       sw       x7,   20(a0)           \n"
-        "       sw       x8,   24(a0)           \n"
-        "       sw       x9,   28(a0)           \n"
-        "       sw      x10,   32(a0)           \n"
-        "       sw      x11,   36(a0)           \n"
-        "       sw      x12,   40(a0)           \n"
-        "       sw      x13,   44(a0)           \n"
-        "       sw      x14,   48(a0)           \n"
-        "       sw      x15,   52(a0)           \n"
-        "       sw      x16,   56(a0)           \n"
-        "       sw      x17,   60(a0)           \n"
-        "       sw      x18,   64(a0)           \n"
-        "       sw      x19,   68(a0)           \n"
-        "       sw      x20,   72(a0)           \n"
-        "       sw      x21,   76(a0)           \n"
-        "       sw      x22,   80(a0)           \n"
-        "       sw      x23,   84(a0)           \n"
-        "       sw      x24,   88(a0)           \n"
-        "       sw      x25,   92(a0)           \n"
-        "       sw      x26,   96(a0)           \n"
-        "       sw      x27,  100(a0)           \n"
-        "       sw      x28,  104(a0)           \n"
-        "       sw      x29,  108(a0)           \n"
-        "       sw      x30,  112(a0)           \n"
-        "       sw      x31,  116(a0)           \n"
+        "       sd       x3,    8(sp)           \n"     // push ST
+        "       sd       x1,   16(sp)           \n"     // push RA
+        "       sd       x5,   24(sp)           \n"     // push x5-x31
+        "       sd       x6,   32(sp)           \n"
+        "       sd       x7,   40(sp)           \n"
+        "       sd       x8,   48(sp)           \n"
+        "       sd       x9,   56(sp)           \n"
+        "       sd      x10,   64(sp)           \n"
+        "       sd      x11,   72(sp)           \n"
+        "       sd      x12,   80(sp)           \n"
+        "       sd      x13,   88(sp)           \n"
+        "       sd      x14,   96(sp)           \n"
+        "       sd      x15,  104(sp)           \n"
+        "       sd      x16,  112(sp)           \n"
+        "       sd      x17,  120(sp)           \n"
+        "       sd      x18,  128(sp)           \n"
+        "       sd      x19,  136(sp)           \n"
+        "       sd      x20,  144(sp)           \n"
+        "       sd      x21,  152(sp)           \n"
+        "       sd      x22,  160(sp)           \n"
+        "       sd      x23,  168(sp)           \n"
+        "       sd      x24,  176(sp)           \n"
+        "       sd      x25,  184(sp)           \n"
+        "       sd      x26,  192(sp)           \n"
+        "       sd      x27,  200(sp)           \n"
+        "       sd      x28,  208(sp)           \n"
+        "       sd      x29,  216(sp)           \n"
+        "       sd      x30,  224(sp)           \n"
+        "       sd      x31,  232(sp)           \n"
         "       ret                             \n");
 }
 
@@ -57,7 +57,7 @@ void CPU::switch_context(Context ** o, Context * n)     // "o" is in a0 and "n"
 {   
     // Push the context into the stack and update "o"
     Context::push();
-    ASM("sw sp, 0(a0)");   // update Context * volatile * o, which is in a0
+    ASM("sd sp, 0(a0)");   // update Context * volatile * o, which is in a0
 
     // Set the stack pointer to "n" and pop the context from the stack
     ASM("mv sp, a1");   // "n" is in a1
diff --git a/src/architecture/rv64/rv64_cpu_init.cc b/src/architecture/rv64/rv64_cpu_init.cc
index 64c1621..4b97af4 100644
--- a/src/architecture/rv64/rv64_cpu_init.cc
+++ b/src/architecture/rv64/rv64_cpu_init.cc
@@ -10,10 +10,13 @@ void CPU::init()
 {
     db<Init, CPU>(TRC) << "CPU::init()" << endl;
 
-    if(Traits<MMU>::enabled)
-        MMU::init();
-    else
-        db<Init, MMU>(WRN) << "MMU is disabled!" << endl;
+    if(CPU::id() == 0) {
+        if(Traits<MMU>::enabled)
+            MMU::init();
+        else
+            db<Init, MMU>(WRN) << "MMU is disabled!" << endl;
+    }
+
 
 #ifdef __TSC_H
     if(Traits<TSC>::enabled)
diff --git a/src/architecture/rv64/rv64_cpu_test.cc b/src/architecture/rv64/rv64_cpu_test.cc
new file mode 100644
index 0000000..a0de0a2
--- /dev/null
+++ b/src/architecture/rv64/rv64_cpu_test.cc
@@ -0,0 +1,63 @@
+// EPOS RISC-V 32 Test Program
+
+#include <architecture/cpu.h>
+
+using namespace EPOS;
+
+int main()
+{
+    OStream cout;
+    cout << "RISC-V 64bits test" << endl;
+
+    CPU cpu;
+
+    {
+        volatile bool lock = false;
+        if(cpu.tsl(lock))
+            cout << "tsl(): doesn't function properly!(1)" << endl;
+        else
+            if(cpu.tsl(lock))
+                cout << "tsl(): ok" << endl;
+            else
+                cout << "tsl(): doesn't function properly!(2)" << endl;
+    }
+    {
+        volatile int number = 100;
+        volatile int tmp;
+        if((tmp = cpu.finc(number)) != 100)
+            cout << "finc(): doesn't function properly (n=" << tmp << ", should be 100)!" << endl;
+        else
+            if((tmp = cpu.finc(number)) != 101)
+                cout << "finc(): doesn't function properly (n=" << tmp << ", should be 101)!" << endl;
+            else
+                cout << "finc(): ok" << endl;
+    }
+    {
+        volatile int number = 100;
+        volatile int tmp;
+        if((tmp = cpu.fdec(number)) != 100)
+            cout << "fdec(): doesn't function properly (n=" << tmp << ", should be 100)!" << endl;
+        else
+            if((tmp = cpu.fdec(number)) != 99)
+                cout << "fdec(): doesn't function properly (n=" << tmp << ", should be 99)!" << endl;
+            else
+                cout << "fdec(): ok" << endl;
+    }
+    {
+        volatile int number = 100;
+        volatile int compare = number;
+        volatile int replacement = number - 1;
+        volatile int tmp;
+        if((tmp = cpu.cas(number, compare, replacement)) != compare)
+            cout << "cas(): doesn't function properly [1] (n=" << tmp << ", should be " << compare << ")!" << endl;
+        else
+            if((tmp = cpu.cas(number, compare, replacement)) != replacement)
+                cout << "cas(): doesn't function properly [2] (n=" << tmp << ", should be " << replacement << ")!" << endl;
+            else
+                cout << "cas(): ok" << endl;
+    }
+
+    cout << "RISC-V 64bits test finished" << endl;
+
+    return 0;
+}
diff --git a/src/architecture/rv64/rv64_crt0.S b/src/architecture/rv64/rv64_crt0.S
index 576db99..a8d71ab 100644
--- a/src/architecture/rv64/rv64_crt0.S
+++ b/src/architecture/rv64/rv64_crt0.S
@@ -3,7 +3,7 @@
         .file "rv64_crt0.S"
 
         .section .text
-        .align  4
+        .align  8
         .global _start
         .type   _start, function
 _start:
@@ -11,14 +11,14 @@ _start:
         // BSS was cleared by SETUP
         call      _init
 
-        .align  4
+        .align  8
         .globl  __epos_app_entry
         .type   __epos_app_entry, function
 __epos_app_entry:
         // Main's stack was allocated by Thread::init()
         call    main
-        addi    sp, sp, -4
-        sw      a0, 0(sp)   // save main's return value to be used by exit()
+        addi    sp, sp, -8
+        sd      a0, 0(sp)   // save main's return value to be used by exit()
         call    _fini
-        lw      a0, 0(sp)
+        ld      a0, 0(sp)
         call    _exit
diff --git a/src/init/init_end.cc b/src/init/init_end.cc
index f425a89..091568c 100644
--- a/src/init/init_end.cc
+++ b/src/init/init_end.cc
@@ -16,12 +16,14 @@ public:
     Init_End() {
         db<Init>(TRC) << "Init_End()" << endl;
 
+        CPU::smp_barrier();
+
         if(!Traits<System>::multithread) {
             CPU::int_enable();
             return;
         }
 
-        if(Memory_Map::BOOT_STACK != Memory_Map::NOT_USED)
+        if(CPU::id() == 0 && Memory_Map::BOOT_STACK != Memory_Map::NOT_USED)
             MMU::free(Memory_Map::BOOT_STACK, MMU::pages(Traits<Machine>::STACK_SIZE));
 
         db<Init>(INF) << "INIT ends here!" << endl;
@@ -33,6 +35,8 @@ public:
 
         db<Init, Thread>(INF) << "Dispatching the first thread: " << first << endl;
 
+        CPU::smp_barrier();
+
         // Interrupts have been disable at Thread::init() and will be reenabled by CPU::Context::load()
         // but we first reset the timer to avoid getting a time interrupt during load()
         if(Traits<Timer>::enabled)
diff --git a/src/init/init_flash.cc b/src/init/init_flash.cc
new file mode 100644
index 0000000..a68b20d
--- /dev/null
+++ b/src/init/init_flash.cc
@@ -0,0 +1,29 @@
+// EPOS Application Initializer
+
+#include <architecture.h>
+#include <utility/heap.h>
+#include <machine.h>
+#include <system.h>
+
+extern "C" char _end; // defined by GCC
+
+__BEGIN_SYS
+
+class Init_Flash
+{
+private:
+
+    static const unsigned int FLASH_BASE = Traits<Machine>::FLASH_BASE;
+    static const unsigned int FLASH_TOP = Traits<Machine>::FLASH_TOP;
+    static const unsigned int HEAP_SIZE = FLASH_TOP - FLASH_BASE;
+
+public:
+    Init_Flash() {
+        Flash::_heap = new (&Flash::_preheap[0]) Heap((void *)FLASH_BASE, HEAP_SIZE);
+    }
+};
+
+// Global object "init_Flash"  must be linked to the Flash (not to the system) and there constructed at first.
+Init_Flash init_flash;
+
+__END_SYS
diff --git a/src/init/init_system.cc b/src/init/init_system.cc
index 0f6c151..64088cf 100644
--- a/src/init/init_system.cc
+++ b/src/init/init_system.cc
@@ -14,42 +14,57 @@ private:
     static const unsigned int HEAP_SIZE = Traits<System>::HEAP_SIZE;
 
 public:
-    Init_System() {
+    Init_System()
+    {
         db<Init>(TRC) << "Init_System()" << endl;
 
-        db<Init>(INF) << "Init:si=" << *System::info() << endl;
+        CPU::smp_barrier();
 
-        db<Init>(INF) << "Initializing the architecture: " << endl;
-        CPU::init();
+        if (CPU::id() == 0) {
+            db<Init>(INF) << "Init:si=" << *System::info() << endl;
+            db<Init>(INF) << "Initializing the architecture: " << endl;
 
-        db<Init>(INF) << "Initializing system's heap: " << endl;
-        if(Traits<System>::multiheap) {
-            System::_heap_segment = new (&System::_preheap[0]) Segment(HEAP_SIZE, Segment::Flags::SYS);
-            char * heap;
-            if(Memory_Map::SYS_HEAP == Traits<Machine>::NOT_USED)
-                heap = Address_Space(MMU::current()).attach(System::_heap_segment);
+            CPU::init();
+
+            db<Init>(INF) << "Initializing system's heap: " << endl;
+            if (Traits<System>::multiheap)
+            {
+                System::_heap_segment = new (&System::_preheap[0]) Segment(HEAP_SIZE, Segment::Flags::SYS);
+                char *heap;
+                if (Memory_Map::SYS_HEAP == Traits<Machine>::NOT_USED)
+                    heap = Address_Space(MMU::current()).attach(System::_heap_segment);
+                else
+                    heap = Address_Space(MMU::current()).attach(System::_heap_segment, Memory_Map::SYS_HEAP);
+                if (!heap)
+                    db<Init>(ERR) << "Failed to initialize the system's heap!" << endl;
+                System::_heap = new (&System::_preheap[sizeof(Segment)]) Heap(heap, System::_heap_segment->size());
+            }
             else
-                heap = Address_Space(MMU::current()).attach(System::_heap_segment, Memory_Map::SYS_HEAP);
-            if(!heap)
-                db<Init>(ERR) << "Failed to initialize the system's heap!" << endl;
-            System::_heap = new (&System::_preheap[sizeof(Segment)]) Heap(heap, System::_heap_segment->size());
-        } else
-            System::_heap = new (&System::_preheap[0]) Heap(MMU::alloc(MMU::pages(HEAP_SIZE)), HEAP_SIZE);
+                System::_heap = new (&System::_preheap[0]) Heap(MMU::alloc(MMU::pages(HEAP_SIZE)), HEAP_SIZE);
 
-        db<Init>(INF) << "Initializing the machine: " << endl;
-        Machine::init();
+            db<Init>(INF) << "Initializing the machine: " << endl;
+            Machine::init();
+        }
+            CPU::smp_barrier();
+        if (CPU::id() != 0) {
+            CPU::init();
+            Timer::init();
+        }
 
         db<Init>(INF) << "Initializing system abstractions: " << endl;
         System::init();
 
-        // Randomize the Random Numbers Generator's seed
-        if(Traits<Random>::enabled) {
-            db<Init>(INF) << "Randomizing the Random Numbers Generator's seed." << endl;
-            if(Traits<TSC>::enabled)
-                Random::seed(TSC::time_stamp());
+        if (CPU::id() == 0) {
+            // Randomize the Random Numbers Generator's seed
+            if (Traits<Random>::enabled)
+            {
+                db<Init>(INF) << "Randomizing the Random Numbers Generator's seed." << endl;
+                if (Traits<TSC>::enabled)
+                    Random::seed(TSC::time_stamp());
 
-            if(!Traits<TSC>::enabled)
-                db<Init>(WRN) << "Due to lack of entropy, Random is a pseudo random numbers generator!" << endl;
+                if (!Traits<TSC>::enabled)
+                    db<Init>(WRN) << "Due to lack of entropy, Random is a pseudo random numbers generator!" << endl;
+            }
         }
 
         // Initialization continues at init_end
diff --git a/src/init/makefile b/src/init/makefile
index 546c4dc..6d8ce64 100644
--- a/src/init/makefile
+++ b/src/init/makefile
@@ -12,6 +12,7 @@ install_library_$(MMOD): init_library_$(MMOD)
 		$(INSTALL) init_begin_$(MMOD).o $(LIB)
 		$(INSTALL) init_system_$(MMOD).o $(LIB)
 		$(INSTALL) init_application_$(MMOD).o $(LIB)
+		$(INSTALL) init_flash_$(MMOD).o $(LIB)
 		$(INSTALL) init_end_$(MMOD).o $(LIB)
 
 install_builtin_$(MMOD): init_builtin_$(MMOD)
@@ -27,6 +28,7 @@ init_library_$(MMOD): $(OBJS)
 		$(INSTALL) init_begin.o init_begin_$(MMOD).o
 		$(INSTALL) init_system.o init_system_$(MMOD).o
 		$(INSTALL) init_application.o init_application_$(MMOD).o
+		$(INSTALL) init_flash.o init_flash_$(MMOD).o
 		$(INSTALL) init_end.o init_end_$(MMOD).o
 
 init_builtin_$(MMOD): $(SRC)/system/system_$(MMOD) $(OBJS) $(LIBINIT)
diff --git a/src/machine/riscv/riscv_ic.cc b/src/machine/riscv/riscv_ic.cc
index a825692..1ab13f4 100644
--- a/src/machine/riscv/riscv_ic.cc
+++ b/src/machine/riscv/riscv_ic.cc
@@ -116,7 +116,7 @@ void IC::exception(Interrupt_Id id)
     db<IC, System>(WRN) << endl;
 
     if(Traits<Build>::hysterically_debugged)
-        Machine::panic();
+        db<IC, System>(ERR) << "Exception stoped execution due to hysterically debuggeing!" << endl;
 
     CPU::fr(sizeof(void *)); // tell CPU::Context::pop(true) to perform PC = PC + [4|8] on return
 }
diff --git a/src/machine/riscv/riscv_ic_init.cc b/src/machine/riscv/riscv_ic_init.cc
index dfc1587..2e4b06a 100644
--- a/src/machine/riscv/riscv_ic_init.cc
+++ b/src/machine/riscv/riscv_ic_init.cc
@@ -20,7 +20,7 @@ void IC::init()
 
     // Set all interrupt handlers to int_not()
     for(Interrupt_Id i = EXCS; i < INTS; i++)
-        _int_vector[i] = int_not;
+        _int_vector[i] = &int_not;
 }
 
 __END_SYS
diff --git a/src/machine/riscv/riscv_machine_init.cc b/src/machine/riscv/riscv_machine_init.cc
index cc22b98..1c08646 100644
--- a/src/machine/riscv/riscv_machine_init.cc
+++ b/src/machine/riscv/riscv_machine_init.cc
@@ -4,6 +4,14 @@
 
 __BEGIN_SYS
 
+void Machine::pre_init(System_Info * si)
+{
+    Display::init();
+
+    db<Init, Machine>(TRC) << "Machine::pre_init()" << endl;
+}
+
+
 void Machine::init()
 {
     db<Init, Machine>(TRC) << "Machine::init()" << endl;
diff --git a/src/machine/riscv/riscv_timer.cc b/src/machine/riscv/riscv_timer.cc
index 3c03124..5921c88 100644
--- a/src/machine/riscv/riscv_timer.cc
+++ b/src/machine/riscv/riscv_timer.cc
@@ -2,6 +2,7 @@
 
 #include <machine/ic.h>
 #include <machine/timer.h>
+#include <machine/machine.h>
 
 __BEGIN_SYS
 
@@ -11,15 +12,15 @@ Timer * Timer::_channels[CHANNELS];
 // Class methods
 void Timer::int_handler(Interrupt_Id i)
 {
-    if(_channels[ALARM] && (--_channels[ALARM]->_current <= 0)) {
-        _channels[ALARM]->_current = _channels[ALARM]->_initial;
+    if(_channels[ALARM] && (--_channels[ALARM]->_current[CPU::id()] <= 0)) {
+        _channels[ALARM]->_current[CPU::id()] = _channels[ALARM]->_initial;
         _channels[ALARM]->_handler(i);
     }
 
-    if(_channels[SCHEDULER] && (--_channels[SCHEDULER]->_current <= 0)) {
-        _channels[SCHEDULER]->_current = _channels[SCHEDULER]->_initial;
+    if(_channels[SCHEDULER] && (--_channels[SCHEDULER]->_current[CPU::id()] <= 0)) {
+        _channels[SCHEDULER]->_current[CPU::id()] = _channels[SCHEDULER]->_initial;
         _channels[SCHEDULER]->_handler(i);
     }
 }
 
-__END_SYS
+__END_SYS
\ No newline at end of file
diff --git a/src/machine/riscv/riscv_timer_init.cc b/src/machine/riscv/riscv_timer_init.cc
index 8c2e24f..e13036c 100644
--- a/src/machine/riscv/riscv_timer_init.cc
+++ b/src/machine/riscv/riscv_timer_init.cc
@@ -8,14 +8,18 @@ __BEGIN_SYS
 
 void Timer::init()
 {
-    db<Init, Timer>(TRC) << "Timer::init()" << endl;
+  db<Init, Timer>(TRC) << "Timer::init()" << endl;
 
-    assert(CPU::int_disabled());
+  assert(CPU::int_disabled());
 
+  // IC::int_vector(IC::INT_SYS_TIMER, int_handler);
+  if (CPU::id() == 0)
+  {
     IC::int_vector(IC::INT_SYS_TIMER, int_handler);
+  }
 
-    reset();
-    IC::enable(IC::INT_SYS_TIMER);
+  reset();
+  IC::enable(IC::INT_SYS_TIMER);
 }
 
 __END_SYS
diff --git a/src/setup/setup_sifive_e.cc b/src/setup/setup_sifive_e.cc
index c64a375..49aa727 100644
--- a/src/setup/setup_sifive_e.cc
+++ b/src/setup/setup_sifive_e.cc
@@ -9,6 +9,7 @@ extern "C" {
     void _start();
 
     void _int_entry();
+    void _int_m2s() __attribute((naked, aligned(4)));
 
     // SETUP entry point is in .init (and not in .text), so it will be linked first and will be the first function after the ELF header in the image
     void _entry() __attribute__ ((used, naked, section(".init")));
@@ -30,51 +31,368 @@ private:
     static const unsigned long RAM_TOP          = Memory_Map::RAM_TOP;
     static const unsigned long MIO_BASE         = Memory_Map::MIO_BASE;
     static const unsigned long MIO_TOP          = Memory_Map::MIO_TOP;
-    static const unsigned long FREE_BASE        = Memory_Map::FREE_BASE;
-    static const unsigned long FREE_TOP         = Memory_Map::FREE_TOP;
+    static const unsigned long IMAGE            = Memory_Map::IMAGE;
     static const unsigned long SETUP            = Memory_Map::SETUP;
-    static const unsigned long BOOT_STACK       = Memory_Map::BOOT_STACK;
+    static const unsigned long INT_M2S   	= Memory_Map::INT_M2S;
+    static const unsigned long BOOT_STACK   	= Memory_Map::BOOT_STACK;
+
+    // Logical memory map
+    static const unsigned long APP_LOW          = Memory_Map::APP_LOW;
+    static const unsigned long PHY_MEM          = Memory_Map::PHY_MEM;
+    static const unsigned long IO               = Memory_Map::IO;
+    static const unsigned long SYS              = Memory_Map::SYS;
+    static const unsigned long SYS_INFO         = Memory_Map::SYS_INFO;
+    static const unsigned long SYS_PT           = Memory_Map::SYS_PT;
+    static const unsigned long SYS_PD           = Memory_Map::SYS_PD;
+    static const unsigned long SYS_CODE         = Memory_Map::SYS_CODE;
+    static const unsigned long SYS_DATA         = Memory_Map::SYS_DATA;
+    static const unsigned long SYS_STACK        = Memory_Map::SYS_STACK;
+    static const unsigned long SYS_HEAP         = Memory_Map::SYS_HEAP;
+    static const unsigned long SYS_HIGH         = Memory_Map::SYS_HIGH;
+    static const unsigned long APP_CODE         = Memory_Map::APP_CODE;
+    static const unsigned long APP_DATA         = Memory_Map::APP_DATA;
 
     // Architecture Imports
     typedef CPU::Reg Reg;
     typedef CPU::Phy_Addr Phy_Addr;
     typedef CPU::Log_Addr Log_Addr;
+    typedef MMU::Page Page;
+    typedef MMU::Page_Flags Flags;
+    typedef MMU::Page_Table Page_Table;
+    typedef MMU::Page_Directory Page_Directory;
+    typedef MMU::PT_Entry PT_Entry;
+    typedef MMU::PD_Entry PD_Entry;
 
 public:
     Setup();
 
 private:
+    void build_lm();
+    void build_pmm();
+
     void say_hi();
+
+    void setup_m2s();
+    void setup_sys_pt();
+    void setup_sys_pd();
+    void setup_app_pt();
+    void enable_paging();
+
+    void load_parts();
+    void adjust_perms();
     void call_next();
 
     void panic() { Machine::panic(); }
 
 private:
+    char * bi;
     System_Info * si;
+
+    static volatile bool paging_ready;
 };
 
+volatile bool Setup::paging_ready = false;
 
 Setup::Setup()
 {
     CPU::int_disable(); // interrupts will be re-enabled at init_end
 
-    Display::init();
+    if(Traits<System>::multitask) {
+
+        Display::init();
+
+        bi = reinterpret_cast<char *>(IMAGE);
+        si = reinterpret_cast<System_Info *>(&__boot_time_system_info);
+        if(si->bm.n_cpus > Traits<Machine>::CPUS)
+            si->bm.n_cpus = Traits<Machine>::CPUS;
+
+        db<Setup>(TRC) << "Setup(bi=" << reinterpret_cast<void *>(bi) << ",sp=" << CPU::sp() << ")" << endl;
+        db<Setup>(INF) << "Setup:si=" << *si << endl;
+
+        if(CPU::id() == 0) { // bootstrap CPU (BSP)
+
+            // Build the memory model
+            build_lm();
+            build_pmm();
+
+            // Relocate the machine to supervisor handler
+            setup_m2s();
+
+            // Print basic facts about this EPOS instance
+            say_hi();
+
+            // Configure the memory model defined above
+            setup_sys_pt();
+            setup_app_pt();
+            setup_sys_pd();
+
+            // Enable paging
+            enable_paging();
+
+            // Load EPOS parts (e.g. INIT, SYSTEM, APPLICATION)
+            load_parts();
 
-    si = reinterpret_cast<System_Info *>(&__boot_time_system_info);
-    if(si->bm.n_cpus > Traits<Machine>::CPUS)
-        si->bm.n_cpus = Traits<Machine>::CPUS;
+            // Adjust APPLICATION permissions
+            // FIXME: ld is putting the data segments (.data, .sdata, .bss, etc) inside the code segment even if we specify --nmagic, so, for a while, we can't fine tune perms.
+            // adjust_perms();
 
-    db<Setup>(TRC) << "Setup(si=" << reinterpret_cast<void *>(si) << ",sp=" << CPU::sp() << ")" << endl;
-    db<Setup>(INF) << "Setup:si=" << *si << endl;
+            // Signalize other CPUs that paging is up
+            paging_ready = true;
 
-    // Print basic facts about this EPOS instance
-    say_hi();
+        } else { // additional CPUs (APs)
+
+            // Wait for the Boot CPU to setup page tables
+            while(!paging_ready);
+
+            // Enable paging
+            enable_paging();
+
+        }
+    }
 
     // SETUP ends here, so let's transfer control to the next stage (INIT or APP)
     call_next();
 }
 
 
+void Setup::build_lm()
+{
+    db<Setup>(TRC) << "Setup::build_lm()" << endl;
+
+    // Get boot image structure
+    si->lm.has_stp = (si->bm.setup_offset != -1u);
+    si->lm.has_ini = (si->bm.init_offset != -1u);
+    si->lm.has_sys = (si->bm.system_offset != -1u);
+    si->lm.has_app = (si->bm.application_offset != -1u);
+    si->lm.has_ext = (si->bm.extras_offset != -1u);
+
+    // Check SETUP integrity and get the size of its segments
+    si->lm.stp_entry = 0;
+    si->lm.stp_segments = 0;
+    si->lm.stp_code = ~0U;
+    si->lm.stp_code_size = 0;
+    si->lm.stp_data = ~0U;
+    si->lm.stp_data_size = 0;
+    if(si->lm.has_stp) {
+        ELF * stp_elf = reinterpret_cast<ELF *>(&bi[si->bm.setup_offset]);
+        if(!stp_elf->valid())
+            db<Setup>(ERR) << "SETUP ELF image is corrupted!" << endl;
+        si->lm.stp_entry = stp_elf->entry();
+        int i = 0;
+        for(; (i < stp_elf->segments()) && (stp_elf->segment_type(i) != PT_LOAD); i++);
+        si->lm.stp_code = stp_elf->segment_address(i);
+        si->lm.stp_code_size = stp_elf->segment_size(i);
+        si->lm.stp_segments = 1;
+        for(i++; i < stp_elf->segments(); i++) {
+            if(stp_elf->segment_type(i) != PT_LOAD)
+                continue;
+            if(stp_elf->segment_address(i) < si->lm.stp_data)
+                si->lm.stp_data = stp_elf->segment_address(i);
+            si->lm.stp_data_size += stp_elf->segment_size(i);
+            si->lm.stp_segments++;
+        }
+    }
+
+    // Check INIT integrity and get the size of its segments
+    si->lm.ini_entry = 0;
+    si->lm.ini_segments = 0;
+    si->lm.ini_code = ~0U;
+    si->lm.ini_code_size = 0;
+    si->lm.ini_data = ~0U;
+    si->lm.ini_data_size = 0;
+    if(si->lm.has_ini) {
+        ELF * ini_elf = reinterpret_cast<ELF *>(&bi[si->bm.init_offset]);
+        if(!ini_elf->valid())
+            db<Setup>(ERR) << "INIT ELF image is corrupted!" << endl;
+        si->lm.ini_entry = ini_elf->entry();
+        int i = 0;
+        for(; (i < ini_elf->segments()) && (ini_elf->segment_type(i) != PT_LOAD); i++);
+        si->lm.ini_code = ini_elf->segment_address(i);
+        si->lm.ini_code_size = ini_elf->segment_size(i);
+        si->lm.ini_segments = 1;
+        for(i++; i < ini_elf->segments(); i++) {
+            if(ini_elf->segment_type(i) != PT_LOAD)
+                continue;
+            if(ini_elf->segment_address(i) < si->lm.ini_data)
+                si->lm.ini_data = ini_elf->segment_address(i);
+            si->lm.ini_data_size += ini_elf->segment_size(i);
+            si->lm.ini_segments++;
+        }
+    }
+
+    // Check SYSTEM integrity and get the size of its segments
+    si->lm.sys_entry = 0;
+    si->lm.sys_segments = 0;
+    si->lm.sys_code = ~0U;
+    si->lm.sys_code_size = 0;
+    si->lm.sys_data = ~0U;
+    si->lm.sys_data_size = 0;
+    si->lm.sys_stack = SYS_STACK;
+    si->lm.sys_stack_size = Traits<System>::STACK_SIZE * si->bm.n_cpus;
+    if(si->lm.has_sys) {
+        ELF * sys_elf = reinterpret_cast<ELF *>(&bi[si->bm.system_offset]);
+        if(!sys_elf->valid())
+            db<Setup>(ERR) << "OS ELF image is corrupted!" << endl;
+        si->lm.sys_entry = sys_elf->entry();
+        int i = 0;
+        for(; (i < sys_elf->segments()) && (sys_elf->segment_type(i) != PT_LOAD); i++);
+        si->lm.sys_code = sys_elf->segment_address(i);
+        si->lm.sys_code_size = sys_elf->segment_size(i);
+        si->lm.sys_segments = 1;
+        for(i++; i < sys_elf->segments(); i++) {
+            if(sys_elf->segment_type(i) != PT_LOAD)
+                continue;
+            if(sys_elf->segment_address(i) < si->lm.sys_data)
+                si->lm.sys_data = sys_elf->segment_address(i);
+            si->lm.sys_data_size += sys_elf->segment_size(i);
+            si->lm.sys_segments++;
+        }
+
+        if(si->lm.sys_code != SYS_CODE)
+            db<Setup>(ERR) << "OS code segment address (" << reinterpret_cast<void *>(si->lm.sys_code) << ") does not match the machine's memory map (" << reinterpret_cast<void *>(SYS_CODE) << ")!" << endl;
+        if(si->lm.sys_code + si->lm.sys_code_size > si->lm.sys_data)
+            db<Setup>(ERR) << "OS code segment is too large!" << endl;
+        if(si->lm.sys_data != SYS_DATA)
+            db<Setup>(ERR) << "OS data segment address (" << reinterpret_cast<void *>(si->lm.sys_data) << ") does not match the machine's memory map (" << reinterpret_cast<void *>(SYS_DATA) << ")!" << endl;
+        if(si->lm.sys_data + si->lm.sys_data_size > si->lm.sys_stack)
+            db<Setup>(ERR) << "OS data segment is too large!" << endl;
+        if(MMU::page_tables(MMU::pages(si->lm.sys_stack_size)) > 1)
+            db<Setup>(ERR) << "OS stack segment is too large!" << endl;
+    }
+
+    // Check APPLICATION integrity and get the size of its segments
+    si->lm.app_entry = 0;
+    si->lm.app_segments = 0;
+    si->lm.app_code = ~0U;
+    si->lm.app_code_size = 0;
+    si->lm.app_data = ~0U;
+    si->lm.app_data_size = 0;
+    si->lm.app_extra = ~0U;
+    si->lm.app_extra_size = 0;
+    if(si->lm.has_app) {
+        ELF * app_elf = reinterpret_cast<ELF *>(&bi[si->bm.application_offset]);
+        if(!app_elf->valid())
+            db<Setup>(ERR) << "APP ELF image is corrupted!" << endl;
+        si->lm.app_entry = app_elf->entry();
+        int i = 0;
+        for(; (i < app_elf->segments()) && (app_elf->segment_type(i) != PT_LOAD); i++);
+        si->lm.app_code = app_elf->segment_address(i);
+        if(si->lm.app_code != MMU::align_directory(si->lm.app_code))
+            db<Setup>(ERR) << "Unaligned APP CODE image:" << hex << si->lm.app_code << endl;
+        si->lm.app_code_size = app_elf->segment_size(i);
+        si->lm.app_segments = 1;
+        for(i++; i < app_elf->segments(); i++) {
+            if(app_elf->segment_type(i) != PT_LOAD)
+                continue;
+            if(app_elf->segment_address(i) < si->lm.app_data)
+                si->lm.app_data = app_elf->segment_address(i);
+            si->lm.app_data_size += app_elf->segment_size(i);
+            si->lm.app_segments++;
+        }
+        if(si->lm.app_data == ~0U) {
+            db<Setup>(WRN) << "APP ELF image has no data segment!" << endl;
+            si->lm.app_data = MMU::align_page(APP_DATA);
+        }
+        if(Traits<System>::multiheap) { // Application heap in data segment
+            si->lm.app_data_size = MMU::align_page(si->lm.app_data_size);
+            si->lm.app_stack = si->lm.app_data + si->lm.app_data_size;
+            si->lm.app_data_size += MMU::align_page(Traits<Application>::STACK_SIZE);
+            si->lm.app_heap = si->lm.app_data + si->lm.app_data_size;
+            si->lm.app_data_size += MMU::align_page(Traits<Application>::HEAP_SIZE);
+        }
+        if(si->lm.has_ext) { // Check for EXTRA data in the boot image
+            si->lm.app_extra = si->lm.app_data + si->lm.app_data_size;
+            si->lm.app_extra_size = si->bm.img_size - si->bm.extras_offset;
+            if(Traits<System>::multiheap)
+                si->lm.app_extra_size = MMU::align_page(si->lm.app_extra_size);
+            si->lm.app_data_size += si->lm.app_extra_size;
+        }
+    }
+}
+
+
+void Setup::build_pmm()
+{
+    // Allocate (reserve) memory for all entities we have to setup.
+    // We'll start at the highest address to make possible a memory model
+    // on which the application's logical and physical address spaces match.
+
+    Phy_Addr top_page = MMU::pages(BOOT_STACK);
+
+    db<Setup>(TRC) << "Setup::build_pmm() [top=" << top_page << "]" << endl;
+
+    // Machine to Supervisor code (1 x sizeof(Page), not listed in the PMM)
+    top_page -= 1;
+
+    // System Page Directory (1 x sizeof(Page))
+    top_page -= 1;
+    si->pmm.sys_pd = top_page * sizeof(Page);
+
+    // System Page Table (1 x sizeof(Page))
+    top_page -= 1;
+    si->pmm.sys_pt = top_page * sizeof(Page);
+
+    // Page tables to map the whole physical memory
+    // = NP/NPTE_PT * sizeof(Page)
+    //   NP = size of physical memory in pages
+    //   NPTE_PT = number of page table entries per page table
+    top_page -= MMU::page_tables(MMU::pages(si->bm.mem_top - si->bm.mem_base));
+    si->pmm.phy_mem_pts = top_page * sizeof(Page);
+
+    // Page tables to map the IO address space
+    // = NP/NPTE_PT * sizeof(Page)
+    //   NP = size of I/O address space in pages
+    //   NPTE_PT = number of page table entries per page table
+    top_page -= MMU::page_tables(MMU::pages(si->bm.mio_top - si->bm.mio_base));
+    si->pmm.io_pts = top_page * sizeof(Page);
+
+    // Page tables to map the first APPLICATION code segment
+    top_page -= MMU::page_tables(MMU::pages(si->lm.app_code_size));
+    si->pmm.app_code_pts = top_page * sizeof(Page);
+
+    // Page tables to map the first APPLICATION data segment (which contains heap, stack and extra)
+    top_page -= MMU::page_tables(MMU::pages(si->lm.app_data_size));
+    si->pmm.app_data_pts = top_page * sizeof(Page);
+
+    // System Info (1 x sizeof(Page))
+    if(SYS_INFO != Traits<Machine>::NOT_USED)
+        top_page -= 1;
+    si->pmm.sys_info = top_page * sizeof(Page);
+
+    // SYSTEM code segment
+    top_page -= MMU::pages(si->lm.sys_code_size);
+    si->pmm.sys_code = top_page * sizeof(Page);
+
+    // SYSTEM data segment
+    top_page -= MMU::pages(si->lm.sys_data_size);
+    si->pmm.sys_data = top_page * sizeof(Page);
+
+    // SYSTEM stack segment
+    top_page -= MMU::pages(si->lm.sys_stack_size);
+    si->pmm.sys_stack = top_page * sizeof(Page);
+
+    // The memory allocated so far will "disappear" from the system as we set usr_mem_top as follows:
+    si->pmm.usr_mem_base = si->bm.mem_base;
+    si->pmm.usr_mem_top = top_page * sizeof(Page);
+
+    // APPLICATION code segment
+    top_page -= MMU::pages(si->lm.app_code_size);
+    si->pmm.app_code = top_page * sizeof(Page);
+
+    // APPLICATION data segment (contains stack, heap and extra)
+    top_page -= MMU::pages(si->lm.app_data_size);
+    si->pmm.app_data = top_page * sizeof(Page);
+
+    // Free chunks (passed to MMU::init)
+    si->pmm.free1_base = si->bm.mem_base;
+    si->pmm.free1_top = top_page * sizeof(Page);
+
+    // Test if we didn't overlap SETUP and the boot image
+    if(si->pmm.usr_mem_top <= si->lm.stp_code + si->lm.stp_code_size + si->lm.stp_data_size)
+        db<Setup>(ERR) << "SETUP would have been overwritten!" << endl;
+}
+
+
 void Setup::say_hi()
 {
     db<Setup>(TRC) << "Setup::say_hi()" << endl;
@@ -82,19 +400,21 @@ void Setup::say_hi()
 
     kout << endl;
 
-    if(si->bm.application_offset == -1U) {
+    if(!si->lm.has_app) {
         db<Setup>(ERR) << "No APPLICATION in boot image, you don't need EPOS!" << endl;
         panic();
     }
+    if(!si->lm.has_sys)
+        db<Setup>(INF) << "No SYSTEM in boot image, assuming EPOS is a library!" << endl;
 
     kout << "This is EPOS!\n" << endl;
     kout << "Setting up this machine as follows: " << endl;
     kout << "  Mode:         " << ((Traits<Build>::MODE == Traits<Build>::LIBRARY) ? "library" : (Traits<Build>::MODE == Traits<Build>::BUILTIN) ? "built-in" : "kernel") << endl;
     kout << "  Processor:    " << Traits<Machine>::CPUS << " x RV32 at " << Traits<CPU>::CLOCK / 1000000 << " MHz (BUS clock = " << Traits<CPU>::CLOCK / 1000000 << " MHz)" << endl;
     kout << "  Machine:      SiFive-E" << endl;
-    kout << "  Memory:       " << (RAM_TOP + 1 - RAM_BASE) / 1024 << " KB [" << reinterpret_cast<void *>(RAM_BASE) << ":" << reinterpret_cast<void *>(RAM_TOP) << "]" << endl;
-    kout << "  User memory:  " << (FREE_TOP - FREE_BASE) / 1024 << " KB [" << reinterpret_cast<void *>(FREE_BASE) << ":" << reinterpret_cast<void *>(FREE_TOP) << "]" << endl;
-    kout << "  I/O space:    " << (MIO_TOP + 1 - MIO_BASE) / 1024 << " KB [" << reinterpret_cast<void *>(MIO_BASE) << ":" << reinterpret_cast<void *>(MIO_TOP) << "]" << endl;
+    kout << "  Memory:       " << (si->bm.mem_top - si->bm.mem_base) / 1024 << " KB [" << reinterpret_cast<void *>(si->bm.mem_base) << ":" << reinterpret_cast<void *>(si->bm.mem_top) << "]" << endl;
+    kout << "  User memory:  " << (si->pmm.usr_mem_top - si->pmm.usr_mem_base) / 1024 << " KB [" << reinterpret_cast<void *>(si->pmm.usr_mem_base) << ":" << reinterpret_cast<void *>(si->pmm.usr_mem_top) << "]" << endl;
+    kout << "  I/O space:    " << (si->bm.mio_top - si->bm.mio_base) / 1024 << " KB [" << reinterpret_cast<void *>(si->bm.mio_base) << ":" << reinterpret_cast<void *>(si->bm.mio_top) << "]" << endl;
     kout << "  Node Id:      ";
     if(si->bm.node_id != -1)
         kout << si->bm.node_id << " (" << Traits<Build>::NODES << ")" << endl;
@@ -105,22 +425,369 @@ void Setup::say_hi()
         kout << "(" << si->bm.space_x << "," << si->bm.space_y << "," << si->bm.space_z << ")" << endl;
     else
         kout << "will get from the network!" << endl;
-    if(si->bm.extras_offset != -1UL)
+    if(si->lm.has_stp)
+        kout << "  Setup:        " << si->lm.stp_code_size + si->lm.stp_data_size << " bytes" << endl;
+    if(si->lm.has_ini)
+        kout << "  Init:         " << si->lm.ini_code_size + si->lm.ini_data_size << " bytes" << endl;
+    if(si->lm.has_sys)
+        kout << "  OS code:      " << si->lm.sys_code_size << " bytes" << "\tdata: " << si->lm.sys_data_size << " bytes" << "   stack: " << si->lm.sys_stack_size << " bytes" << endl;
+    if(si->lm.has_app)
+        kout << "  APP code:     " << si->lm.app_code_size << " bytes" << "\tdata: " << si->lm.app_data_size << " bytes" << endl;
+    if(si->lm.has_ext)
         kout << "  Extras:       " << si->lm.app_extra_size << " bytes" << endl;
 
     kout << endl;
 }
 
+
+void Setup::setup_sys_pt()
+{
+    db<Setup>(TRC) << "Setup::setup_sys_pt(pmm="
+                   << "{si="      << reinterpret_cast<void *>(si->pmm.sys_info)
+                   << ",pt="      << reinterpret_cast<void *>(si->pmm.sys_pt)
+                   << ",pd="      << reinterpret_cast<void *>(si->pmm.sys_pd)
+                   << ",sysc={b=" << reinterpret_cast<void *>(si->pmm.sys_code) << ",s=" << MMU::pages(si->lm.sys_code_size) << "}"
+                   << ",sysd={b=" << reinterpret_cast<void *>(si->pmm.sys_data) << ",s=" << MMU::pages(si->lm.sys_data_size) << "}"
+                   << ",syss={b=" << reinterpret_cast<void *>(si->pmm.sys_stack) << ",s=" << MMU::pages(si->lm.sys_stack_size) << "}"
+                   << "})" << endl;
+
+    // Get the physical address for the SYSTEM Page Table
+    PT_Entry * sys_pt = reinterpret_cast<PT_Entry *>(si->pmm.sys_pt);
+    unsigned int n_pts = MMU::page_tables(MMU::pages(SYS_HIGH - SYS));
+
+    // Clear the System Page Table
+    memset(sys_pt, 0, n_pts * sizeof(Page_Table));
+
+    // System Info
+    sys_pt[MMU::index(SYS, SYS_INFO)] = MMU::phy2pte(si->pmm.sys_info, Flags::SYS);
+
+    // Set an entry to this page table, so the system can access it later
+    sys_pt[MMU::index(SYS, SYS_PT)] = MMU::phy2pte(si->pmm.sys_pt, Flags::SYS);
+
+    // System Page Directory
+    sys_pt[MMU::index(SYS, SYS_PD)] = MMU::phy2pte(si->pmm.sys_pd, Flags::SYS);
+
+    unsigned int i;
+    PT_Entry aux;
+
+    // SYSTEM code
+    for(i = 0, aux = si->pmm.sys_code; i < MMU::pages(si->lm.sys_code_size); i++, aux = aux + sizeof(Page))
+        sys_pt[MMU::index(SYS, SYS_CODE) + i] = MMU::phy2pte(aux, Flags::SYS);
+
+    // SYSTEM data
+    for(i = 0, aux = si->pmm.sys_data; i < MMU::pages(si->lm.sys_data_size); i++, aux = aux + sizeof(Page))
+        sys_pt[MMU::index(SYS, SYS_DATA) + i] = MMU::phy2pte(aux, Flags::SYS);
+
+    // SYSTEM stack (used only during init and for the ukernel model)
+    for(i = 0, aux = si->pmm.sys_stack; i < MMU::pages(si->lm.sys_stack_size); i++, aux = aux + sizeof(Page))
+        sys_pt[MMU::index(SYS, SYS_STACK) + i] = MMU::phy2pte(aux, Flags::SYS);
+
+    // SYSTEM heap is handled by Init_System, so we don't map it here!
+
+    for(unsigned int i = 0; i < n_pts; i++)
+        db<Setup>(INF) << "SYS_PT[" << &sys_pt[i * MMU::PT_ENTRIES] << "]=" << *reinterpret_cast<Page_Table *>(&sys_pt[i * MMU::PT_ENTRIES]) << endl;
+}
+
+
+void Setup::setup_app_pt()
+{
+    db<Setup>(TRC) << "Setup::setup_app_pt(appc={b=" << reinterpret_cast<void *>(si->pmm.app_code) << ",s=" << MMU::pages(si->lm.app_code_size) << "}"
+                   << ",appd={b=" << reinterpret_cast<void *>(si->pmm.app_data) << ",s=" << MMU::pages(si->lm.app_data_size) << "}"
+                   << ",appe={b=" << reinterpret_cast<void *>(si->pmm.app_extra) << ",s=" << MMU::pages(si->lm.app_extra_size) << "}"
+                   << "})" << endl;
+
+    // Get the physical address for the first APPLICATION Page Tables
+    PT_Entry * app_code_pt = reinterpret_cast<PT_Entry *>(si->pmm.app_code_pts);
+    PT_Entry * app_data_pt = reinterpret_cast<PT_Entry *>(si->pmm.app_data_pts);
+    unsigned int n_pts_code = MMU::page_tables(MMU::pages(si->lm.app_code_size));
+    unsigned int n_pts_data = MMU::page_tables(MMU::pages(si->lm.app_data_size));
+
+    // Clear the first APPLICATION Page Tables
+    memset(app_code_pt, 0, n_pts_code * sizeof(Page_Table));
+    memset(app_data_pt, 0, n_pts_data * sizeof(Page_Table));
+
+    unsigned int i;
+    PT_Entry aux;
+
+    // APPLICATION code
+    // Since load_parts() will load the code into memory, the code segment can't be marked R/O yet
+    // The correct flags (APPC and APPD) will be configured after the execution of load_parts(), by adjust_perms()
+    for(i = 0, aux = si->pmm.app_code; i < MMU::pages(si->lm.app_code_size); i++, aux = aux + sizeof(Page))
+        app_code_pt[MMU::page(si->lm.app_code) + i] = MMU::phy2pte(aux, Flags::APP);
+
+    // APPLICATION data (contains stack, heap and extra)
+    for(i = 0, aux = si->pmm.app_data; i < MMU::pages(si->lm.app_data_size); i++, aux = aux + sizeof(Page))
+        app_data_pt[MMU::page(si->lm.app_data) + i] = MMU::phy2pte(aux, Flags::APP);
+
+    for(unsigned int i = 0; i < n_pts_code; i++)
+        db<Setup>(INF) << "APPC_PT[" << &app_code_pt[i * MMU::PT_ENTRIES] << "]=" << *reinterpret_cast<Page_Table *>(&app_code_pt[i * MMU::PT_ENTRIES]) << endl;
+    for(unsigned int i = 0; i < n_pts_code; i++)
+        db<Setup>(INF) << "APPD_PT[" << &app_data_pt[i * MMU::PT_ENTRIES] << "]=" << *reinterpret_cast<Page_Table *>(&app_data_pt[i * MMU::PT_ENTRIES]) << endl;
+}
+
+
+void Setup::setup_sys_pd()
+{
+    db<Setup>(TRC) << "Setup::setup_sys_pd(bm="
+                   << "{memb="  << reinterpret_cast<void *>(si->bm.mem_base)
+                   << ",memt="  << reinterpret_cast<void *>(si->bm.mem_top)
+                   << ",miob="  << reinterpret_cast<void *>(si->bm.mio_base)
+                   << ",miot="  << reinterpret_cast<void *>(si->bm.mio_top)
+                   << ",si="    << reinterpret_cast<void *>(si->pmm.sys_info)
+                   << ",spt="   << reinterpret_cast<void *>(si->pmm.sys_pt)
+                   << ",spd="   << reinterpret_cast<void *>(si->pmm.sys_pd)
+                   << ",mem="   << reinterpret_cast<void *>(si->pmm.phy_mem_pts)
+                   << ",io="    << reinterpret_cast<void *>(si->pmm.io_pts)
+                   << ",umemb=" << reinterpret_cast<void *>(si->pmm.usr_mem_base)
+                   << ",umemt=" << reinterpret_cast<void *>(si->pmm.usr_mem_top)
+                   << ",sysc="  << reinterpret_cast<void *>(si->pmm.sys_code)
+                   << ",sysd="  << reinterpret_cast<void *>(si->pmm.sys_data)
+                   << ",syss="  << reinterpret_cast<void *>(si->pmm.sys_stack)
+                   << ",apct="  << reinterpret_cast<void *>(si->pmm.app_code_pts)
+                   << ",apdt="  << reinterpret_cast<void *>(si->pmm.app_data_pts)
+                   << ",fr1b="  << reinterpret_cast<void *>(si->pmm.free1_base)
+                   << ",fr1t="  << reinterpret_cast<void *>(si->pmm.free1_top)
+                   << ",fr2b="  << reinterpret_cast<void *>(si->pmm.free2_base)
+                   << ",fr2t="  << reinterpret_cast<void *>(si->pmm.free2_top)
+                   << "})" << endl;
+
+    // Get the physical address for the System Page Directory
+    PT_Entry * sys_pd = reinterpret_cast<PT_Entry *>(si->pmm.sys_pd);
+
+    // Clear the System Page Directory
+    memset(sys_pd, 0, sizeof(Page_Directory));
+
+    // Calculate the number of page tables needed to map the physical memory
+    unsigned int mem_size = MMU::pages(si->bm.mem_top - si->bm.mem_base);
+    unsigned int n_pts = MMU::page_tables(mem_size);
+
+    // Map the whole physical memory into the page tables pointed by phy_mem_pts
+    PT_Entry * pts = reinterpret_cast<PT_Entry *>(si->pmm.phy_mem_pts);
+    for(unsigned int i = MMU::page(si->bm.mem_base), j = 0; i < MMU::page(si->bm.mem_base) + mem_size; i++, j++)
+        pts[i] = MMU::phy2pte(si->bm.mem_base + j * sizeof(Page), Flags::SYS);
+
+    // Attach all the physical memory starting at PHY_MEM
+    assert((MMU::directory(MMU::align_directory(PHY_MEM)) + n_pts) < (MMU::PD_ENTRIES - 4)); // check if it would overwrite the OS
+    for(unsigned int i = MMU::directory(MMU::align_directory(PHY_MEM)), j = 0; i < MMU::directory(MMU::align_directory(PHY_MEM)) + n_pts; i++, j++)
+        sys_pd[i] = MMU::phy2pde(si->pmm.phy_mem_pts + j * sizeof(Page_Table));
+
+    // Attach the portion of the physical memory used by Setup at SETUP
+    sys_pd[MMU::directory(SETUP)] =  MMU::phy2pde(si->pmm.phy_mem_pts);
+
+    // Attach the portion of the physical memory used by int_m2s at RAM_TOP
+    sys_pd[MMU::directory(INT_M2S)] =  MMU::phy2pde(si->pmm.phy_mem_pts + (n_pts - 1) * sizeof(Page));
+
+    // Attach all the physical memory starting at RAM_BASE (used in library mode)
+    assert((MMU::directory(MMU::align_directory(RAM_BASE)) + n_pts) < (MMU::PD_ENTRIES - 1)); // check if it would overwrite the OS
+    if(RAM_BASE != PHY_MEM)
+        for(unsigned int i = MMU::directory(MMU::align_directory(RAM_BASE)), j = 0; i < MMU::directory(MMU::align_directory(RAM_BASE)) + n_pts; i++, j++)
+            sys_pd[i] = MMU::phy2pde(si->pmm.phy_mem_pts + j * sizeof(Page_Table));
+
+    // Calculate the number of page tables needed to map the IO address space
+    unsigned int io_size = MMU::pages(si->bm.mio_top - si->bm.mio_base);
+    n_pts = MMU::page_tables(io_size);
+
+    // Map I/O address space into the page tables pointed by io_pts
+    pts = reinterpret_cast<PT_Entry *>(si->pmm.io_pts);
+    for(unsigned int i = 0; i < io_size; i++)
+        pts[i] = MMU::phy2pte(si->bm.mio_base + i * sizeof(Page), Flags::IO);
+
+    // Attach devices' memory at Memory_Map::IO
+    assert((MMU::directory(MMU::align_directory(IO)) + n_pts) < (MMU::PD_ENTRIES - 3)); // check if it would overwrite the OS
+    for(unsigned int i = MMU::directory(MMU::align_directory(IO)), j = 0; i < MMU::directory(MMU::align_directory(IO)) + n_pts; i++, j++)
+        sys_pd[i] = MMU::phy2pde(si->pmm.io_pts + j * sizeof(Page_Table));
+
+    // Attach the OS (i.e. sys_pt)
+    n_pts = MMU::page_tables(MMU::pages(SYS_HEAP - SYS)); // SYS_HEAP is handled by Init_System
+    for(unsigned int i = MMU::directory(MMU::align_directory(SYS)), j = 0; i < MMU::directory(MMU::align_directory(SYS)) + n_pts; i++, j++)
+        sys_pd[i] = MMU::phy2pde(si->pmm.sys_pt + j * sizeof(Page_Table));
+
+    // Attach the first APPLICATION CODE (i.e. app_code_pt)
+    n_pts = MMU::page_tables(MMU::pages(si->lm.app_code_size));
+    for(unsigned int i = MMU::directory(MMU::align_directory(si->lm.app_code)), j = 0; i < MMU::directory(MMU::align_directory(si->lm.app_code)) + n_pts; i++, j++)
+        sys_pd[i] = MMU::phy2pde(si->pmm.app_code_pts + j * sizeof(Page_Table));
+
+    // Attach the first APPLICATION DATA (i.e. app_data_pt, containing heap, stack and extra)
+    n_pts = MMU::page_tables(MMU::pages(si->lm.app_data_size));
+    for(unsigned int i = MMU::directory(MMU::align_directory(si->lm.app_data)), j = 0; i < MMU::directory(MMU::align_directory(si->lm.app_data)) + n_pts; i++, j++)
+        sys_pd[i] = MMU::phy2pde(si->pmm.app_data_pts + j * sizeof(Page_Table));
+
+    db<Setup>(INF) << "SYS_PD[" << sys_pd << "]=" << *reinterpret_cast<Page_Directory *>(sys_pd) << endl;
+}
+
+void Setup::setup_m2s()
+{
+    db<Setup>(TRC) << "Setup::setup_m2s()" << endl;
+
+    memcpy(reinterpret_cast<void *>(INT_M2S), reinterpret_cast<void *>(&_int_m2s), sizeof(Page));
+}
+
+
+void Setup::enable_paging()
+{
+    db<Setup>(TRC) << "Setup::enable_paging()" << endl;
+    if(Traits<Setup>::hysterically_debugged) {
+        db<Setup>(INF) << "Setup::pc=" << CPU::pc() << endl;
+        db<Setup>(INF) << "Setup::sp=" << CPU::sp() << endl;
+    }
+
+    // Set SATP and enable paging
+    MMU::pd(si->pmm.sys_pd);
+
+    // Flush TLB to ensure we've got the right memory organization
+    MMU::flush_tlb();
+
+    if(Traits<Setup>::hysterically_debugged) {
+        db<Setup>(INF) << "Setup::pc=" << CPU::pc() << endl;
+        db<Setup>(INF) << "Setup::sp=" << CPU::sp() << endl;
+    }
+}
+
+
+void Setup::load_parts()
+{
+    db<Setup>(TRC) << "Setup::load_parts()" << endl;
+
+    // Adjust bi to its logical address
+    bi = static_cast<char *>(MMU::phy2log(bi));
+
+    // Relocate System_Info
+    if(sizeof(System_Info) > sizeof(Page))
+        db<Setup>(WRN) << "System_Info is bigger than a page (" << sizeof(System_Info) << ")!" << endl;
+    if(Traits<Setup>::hysterically_debugged) {
+        db<Setup>(INF) << "Setup:BOOT_IMAGE: " << MMU::Translation(bi) << endl;
+        db<Setup>(INF) << "Setup:SYS_INFO[phy]: " << MMU::Translation(si) << endl;
+        db<Setup>(INF) << "Setup:SYS_INFO[log]: " << MMU::Translation(SYS_INFO) << endl;
+    }
+    memcpy(reinterpret_cast<System_Info *>(SYS_INFO), si, sizeof(System_Info));
+    si = reinterpret_cast<System_Info *>(SYS_INFO);
+
+    // Load INIT
+    if(si->lm.has_ini) {
+        db<Setup>(TRC) << "Setup::load_init()" << endl;
+        ELF * ini_elf = reinterpret_cast<ELF *>(&bi[si->bm.init_offset]);
+        for(int i = 0; i < ini_elf->segments(); i++) {
+            if(ini_elf->segment_type(i) != PT_LOAD)
+                continue;
+            if(Traits<Setup>::hysterically_debugged) {
+                db<Setup>(INF) << "Setup:ini_elf: " << MMU::Translation(ini_elf) << endl;
+                db<Setup>(INF) << "Setup:ini_elf[" << i <<"]: " << MMU::Translation(ini_elf->segment_address(i)) << endl;
+                db<Setup>(INF) << "Setup:ini_elf[" << i <<"].size: " << ini_elf->segment_size(i) << endl;
+            }
+            if(ini_elf->load_segment(i) < 0)
+                db<Setup>(ERR) << "INIT segment " << i << " was corrupted during SETUP!" << endl;
+        }
+    }
+
+    // Load SYSTEM
+    if(si->lm.has_sys) {
+        db<Setup>(TRC) << "Setup::load_sys()" << endl;
+        ELF * sys_elf = reinterpret_cast<ELF *>(&bi[si->bm.system_offset]);
+        for(int i = 0; i < sys_elf->segments(); i++) {
+            if(sys_elf->segment_type(i) != PT_LOAD)
+                continue;
+            if(Traits<Setup>::hysterically_debugged) {
+                db<Setup>(INF) << "Setup:sys_elf: " << MMU::Translation(sys_elf) << endl;
+                db<Setup>(INF) << "Setup:sys_elf[" << i <<"]: " << MMU::Translation(sys_elf->segment_address(i)) << endl;
+                db<Setup>(INF) << "Setup:sys_elf[" << i <<"].size: " << sys_elf->segment_size(i) << endl;
+            }
+            if(sys_elf->load_segment(i) < 0)
+                db<Setup>(ERR) << "SYS segment " << i << " was corrupted during SETUP!" << endl;
+        }
+    }
+
+    // Load APP
+    if(si->lm.has_app) {
+        db<Setup>(TRC) << "Setup::load_app()" << endl;
+        ELF * app_elf = reinterpret_cast<ELF *>(&bi[si->bm.application_offset]);
+        for(int i = 0; i < app_elf->segments(); i++) {
+            if(app_elf->segment_type(i) != PT_LOAD)
+                continue;
+            if(Traits<Setup>::hysterically_debugged) {
+                db<Setup>(INF) << "Setup:app_elf: " << MMU::Translation(app_elf) << endl;
+                db<Setup>(INF) << "Setup:app_elf[" << i <<"]: " << MMU::Translation(app_elf->segment_address(i)) << endl;
+                db<Setup>(INF) << "Setup:app_elf[" << i <<"].size: " << app_elf->segment_size(i) << endl;
+            }
+            if(app_elf->load_segment(i) < 0)
+                db<Setup>(ERR) << "APP segment " << i << " was corrupted during SETUP!" << endl;
+        }
+    }
+
+    // Load EXTRA
+    if(si->lm.has_ext) {
+        db<Setup>(TRC) << "Setup::load_extra()" << endl;
+        if(Traits<Setup>::hysterically_debugged)
+            db<Setup>(INF) << "Setup:app_ext:" << MMU::Translation(si->lm.app_extra) << endl;
+        memcpy(Log_Addr(si->lm.app_extra), &bi[si->bm.extras_offset], si->lm.app_extra_size);
+    }
+}
+
+
+void Setup::adjust_perms()
+{
+    db<Setup>(TRC) << "Setup::adjust_perms(appc={b=" << reinterpret_cast<void *>(si->pmm.app_code) << ",s=" << MMU::pages(si->lm.app_code_size) << "}"
+                   << ",appd={b=" << reinterpret_cast<void *>(si->pmm.app_data) << ",s=" << MMU::pages(si->lm.app_data_size) << "}"
+                   << ",appe={b=" << reinterpret_cast<void *>(si->pmm.app_extra) << ",s=" << MMU::pages(si->lm.app_extra_size) << "}"
+                   << "})" << endl;
+
+    // Get the logical address of the first APPLICATION Page Tables
+    PT_Entry * app_code_pt = MMU::phy2log(reinterpret_cast<PT_Entry *>(si->pmm.app_code_pts));
+    PT_Entry * app_data_pt = MMU::phy2log(reinterpret_cast<PT_Entry *>(si->pmm.app_data_pts));
+
+    unsigned int i;
+    PT_Entry aux;
+
+    // APPLICATION code
+    for(i = 0, aux = si->pmm.app_code; i < MMU::pages(si->lm.app_code_size); i++, aux = aux + sizeof(Page))
+        app_code_pt[MMU::page(APP_CODE) + i] = MMU::phy2pte(aux, Flags::APPC);
+
+    // APPLICATION data (contains stack, heap and extra)
+    for(i = 0, aux = si->pmm.app_data; i < MMU::pages(si->lm.app_data_size); i++, aux = aux + sizeof(Page))
+        app_data_pt[MMU::page(APP_DATA) + i] = MMU::phy2pte(aux, Flags::APPD);
+}
+
+
 void Setup::call_next()
 {
     // Check for next stage and obtain the entry point
-    Log_Addr pc = &_start;
+    Log_Addr pc;
+
+    if(Traits<System>::multitask) {
+        if(si->lm.has_ini) {
+            db<Setup>(TRC) << "Executing system's global constructors ..." << endl;
+            reinterpret_cast<void (*)()>(reinterpret_cast<void *>(si->lm.sys_entry))();
+            pc = si->lm.ini_entry;
+        } else if(si->lm.has_sys)
+            pc = si->lm.sys_entry;
+        else
+            pc = si->lm.app_entry;
+
+        // Arrange a stack for each CPU to support stage transition
+        Log_Addr sp = SYS_STACK + Traits<Machine>::STACK_SIZE - sizeof(long);
+
+        db<Setup>(TRC) << "Setup::call_next(pc=" << pc << ",sp=" << sp << ") => ";
+        if(si->lm.has_ini)
+            db<Setup>(TRC) << "INIT" << endl;
+        else if(si->lm.has_sys)
+            db<Setup>(TRC) << "SYSTEM" << endl;
+        else
+            db<Setup>(TRC) << "APPLICATION" << endl;
+
+        CPU::sp(sp);
+    } else
+        pc = &_start;
 
     db<Setup>(INF) << "SETUP ends here!" << endl;
 
     // Call the next stage
     static_cast<void (*)()>(pc)();
 
+    if(Traits<System>::multitask) {
+        // This will only happen when INIT was called and Thread was disabled
+        // Note we don't have the original stack here anymore!
+        reinterpret_cast<CPU::FSR *>(si->lm.app_entry)();
+    }
+
     // SETUP is now part of the free memory and this point should never be reached, but, just in case ... :-)
     db<Setup>(ERR) << "OS failed to init!" << endl;
 }
@@ -131,21 +798,73 @@ using namespace EPOS::S;
 
 void _entry() // machine mode
 {
-    CPU::mstatusc(CPU::MIE);                            // disable interrupts (they will be reenabled at Init_End)
-    CPU::mies(CPU::MSI);                                // enable interrupts at CLINT so IPI and timer can be triggered
-    CLINT::mtvec(CLINT::DIRECT, _int_entry);            // setup a preliminary machine mode interrupt handler pointing it to _int_entry
-
-    CPU::sp(Memory_Map::BOOT_STACK + Traits<Machine>::STACK_SIZE - sizeof(long)); // set this hart stack
-
-    Machine::clear_bss();
-
-    CPU::mstatus(CPU::MPP_M);                           // stay in machine mode at mret
-
+    
+    if (CPU::id() != 0)
+        while(1)
+            CPU::halt();
+
+    CPU::mstatusc(CPU::MIE);                            // disable interrupts
+    CPU::mies(CPU::MSI | CPU::MTI | CPU::MEI);          // enable interrupts at CLINT so IPI and timer can be triggered
+    CPU::tp(CPU::mhartid());                            // tp will be CPU::id()
+    CPU::sp(Memory_Map::BOOT_STACK + Traits<Machine>::STACK_SIZE * (CPU::id() + 1) - sizeof(long)); // set this hart stack (the first stack is reserved for _int_m2s)
+    if(Traits<System>::multitask) {
+        CLINT::mtvec(CLINT::DIRECT, Memory_Map::RAM_TOP + 1 - sizeof(MMU::Page));  // setup a machine mode interrupt handler to forward timer interrupts (which cannot be delegated via mideleg)
+        CPU::mideleg(0xffff);                           // delegate all interrupts to supervisor mode
+        CPU::medeleg(0xffff);                           // delegate all exceptions to supervisor mode
+        CPU::mstatuss(CPU::MPP_S | CPU::MPIE);          // prepare jump into supervisor mode and reenable of interrupts at mret
+    } else {
+        CLINT::mtvec(CLINT::DIRECT, _int_entry);
+        CPU::mstatus(CPU::MPP_M | CPU::MPIE);           // stay in machine mode and reenable interrupts at mret
+    }
     CPU::mepc(CPU::Reg(&_setup));                       // entry = _setup
     CPU::mret();                                        // enter supervisor mode at setup (mepc) with interrupts enabled (mstatus.mpie = true)
 }
 
 void _setup() // supervisor mode
 {
+    if(Traits<System>::multitask) {
+        CPU::sie(CPU::SSI);                             // enable SSI at CLINT so IPI can be triggered
+        CPU::sstatuss(CPU::SUM);                        // allows User Memory access in supervisor mode
+    } else
+        CPU::mie(CPU::MSI);                             // enable MSI at CLINT so IPI can be triggered
+
+    Machine::clear_bss();
+
     Setup setup;
 }
+
+// RISC-V 32, or perhaps the SiFive-E, doesn't allow timer interrupts to be handled in supervisor mode. The matching of MTIMECMP always triggers interrupt MTI and there seems to be no mechanism in CLINT to trigger STI.
+// Therefore, an interrupt forwarder must be installed. We use INT_M2S (usually RAM_TOP) for this, with the code at the beginning of the last page and a stack at the end of the same page.
+void _int_m2s()
+{
+    // Save context
+    ASM("        csrw  mscratch,     sp                                 \n"
+        "        la          sp,     %0                                 \n"
+        "        sw          a2,   0(sp)                                \n"
+        "        sw          a3,   4(sp)                                \n"
+        "        sw          a4,   8(sp)                                \n"
+        "        sw          a5,  12(sp)                                \n": : "i"(Memory_Map::INT_M2S - sizeof(long)));
+
+    CPU::Reg id = CPU::mcause();
+
+    if((id & CLINT::INT_MASK) == CLINT::IRQ_MAC_SOFT)
+        IC::ipi_eoi(id & CLINT::INT_MASK);
+
+    if((id & CLINT::INT_MASK) == CLINT::IRQ_MAC_TIMER) {
+        // MIP.MTI is a direct logic on (MTIME == MTIMECMP) and reseting the Timer seems to be the only way to clear it
+        Timer::reset();
+        CPU::sies(CPU::STI);
+    }
+
+    CPU::Reg i = 1 << ((id & CLINT::INT_MASK) - 2);
+    if(CPU::int_enabled() && (CPU::sie() & i))
+        CPU::mips(i); // forward to supervisor mode
+
+    // Restore context
+    ASM("        lw          a2,   0(sp)                                \n"
+        "        lw          a3,   4(sp)                                \n"
+        "        lw          a4,   8(sp)                                \n"
+        "        lw          a5,  12(sp)                                \n"
+        "        csrr        sp, mscratch                               \n"
+        "        mret                                                   \n");
+}
diff --git a/src/setup/setup_sifive_u.cc b/src/setup/setup_sifive_u.cc
index 63ad625..4bc5bc7 100644
--- a/src/setup/setup_sifive_u.cc
+++ b/src/setup/setup_sifive_u.cc
@@ -5,17 +5,18 @@
 #include <utility/elf.h>
 #include <utility/string.h>
 
-extern "C" {
-    void _start();
+extern "C"
+{
+  void _start();
 
-    void _int_entry();
+  void _int_entry();
 
-    // SETUP entry point is in .init (and not in .text), so it will be linked first and will be the first function after the ELF header in the image
-    void _entry() __attribute__ ((used, naked, section(".init")));
-    void _setup();
+  // SETUP entry point is in .init (and not in .text), so it will be linked first and will be the first function after the ELF header in the image
+  void _entry() __attribute__((used, naked, section(".init")));
+  void _setup();
 
-    // LD eliminates this variable while performing garbage collection, that's why the used attribute.
-    char __boot_time_system_info[sizeof(EPOS::S::System_Info)] __attribute__ ((used)) = "<System_Info placeholder>"; // actual System_Info will be added by mkbi!
+  // LD eliminates this variable while performing garbage collection, that's why the used attribute.
+  char __boot_time_system_info[sizeof(EPOS::S::System_Info)] __attribute__((used)) = "<System_Info placeholder>"; // actual System_Info will be added by mkbi!
 }
 
 __BEGIN_SYS
@@ -25,104 +26,126 @@ extern OStream kout, kerr;
 class Setup
 {
 private:
-    // Physical memory map
-    static const unsigned long RAM_BASE         = Memory_Map::RAM_BASE;
-    static const unsigned long RAM_TOP          = Memory_Map::RAM_TOP;
-    static const unsigned long MIO_BASE         = Memory_Map::MIO_BASE;
-    static const unsigned long MIO_TOP          = Memory_Map::MIO_TOP;
-    static const unsigned long FREE_BASE        = Memory_Map::FREE_BASE;
-    static const unsigned long FREE_TOP         = Memory_Map::FREE_TOP;
-    static const unsigned long SETUP            = Memory_Map::SETUP;
-    static const unsigned long BOOT_STACK       = Memory_Map::BOOT_STACK;
-
-    // Architecture Imports
-    typedef CPU::Reg Reg;
-    typedef CPU::Phy_Addr Phy_Addr;
-    typedef CPU::Log_Addr Log_Addr;
+  // Physical memory map
+  static const unsigned long RAM_BASE = Memory_Map::RAM_BASE;
+  static const unsigned long RAM_TOP = Memory_Map::RAM_TOP;
+  static const unsigned long MIO_BASE = Memory_Map::MIO_BASE;
+  static const unsigned long MIO_TOP = Memory_Map::MIO_TOP;
+  static const unsigned long FREE_BASE = Memory_Map::FREE_BASE;
+  static const unsigned long FREE_TOP = Memory_Map::FREE_TOP;
+  static const unsigned long SETUP = Memory_Map::SETUP;
+  static const unsigned long BOOT_STACK = Memory_Map::BOOT_STACK;
+
+  // Architecture Imports
+  typedef CPU::Reg Reg;
+  typedef CPU::Phy_Addr Phy_Addr;
+  typedef CPU::Log_Addr Log_Addr;
 
 public:
-    Setup();
+  Setup();
 
 private:
-    void say_hi();
-    void call_next();
+  void say_hi();
+  void call_next();
 
-    void panic() { Machine::panic(); }
+  void panic() { Machine::panic(); }
 
 private:
-    System_Info * si;
+  System_Info *si;
 };
 
-
 Setup::Setup()
 {
-    CPU::int_disable(); // interrupts will be re-enabled at init_end
+  CPU::int_disable(); // interrupts will be re-enabled at init_end
 
-    Display::init();
+  Display::init();
 
-    si = reinterpret_cast<System_Info *>(&__boot_time_system_info);
-    if(si->bm.n_cpus > Traits<Machine>::CPUS)
-        si->bm.n_cpus = Traits<Machine>::CPUS;
+  si = reinterpret_cast<System_Info *>(&__boot_time_system_info);
+  if (si->bm.n_cpus > Traits<Machine>::CPUS)
+    si->bm.n_cpus = Traits<Machine>::CPUS;
 
-    db<Setup>(TRC) << "Setup(si=" << reinterpret_cast<void *>(si) << ",sp=" << CPU::sp() << ")" << endl;
-    db<Setup>(INF) << "Setup:si=" << *si << endl;
+  db<Setup>(TRC) << "Setup(si=" << reinterpret_cast<void *>(si) << ",sp=" << CPU::sp() << ")" << endl;
+  db<Setup>(INF) << "Setup:si=" << *si << endl;
 
-    // Print basic facts about this EPOS instance
+  // Print basic facts about this EPOS instance only for CPU 0
+  // say_hi();
+  if (CPU::id() == 0)
+  {
     say_hi();
+  }
 
-    // SETUP ends here, so let's transfer control to the next stage (INIT or APP)
-    call_next();
+  // SETUP ends here, so let's transfer control to the next stage (INIT or APP)
+  call_next();
 }
 
-
 void Setup::say_hi()
 {
-    db<Setup>(TRC) << "Setup::say_hi()" << endl;
-    db<Setup>(INF) << "System_Info=" << *si << endl;
-
-    kout << endl;
-
-    if(si->bm.application_offset == -1U) {
-        db<Setup>(ERR) << "No APPLICATION in boot image, you don't need EPOS!" << endl;
-        panic();
-    }
-
-    kout << "This is EPOS!\n" << endl;
-    kout << "Setting up this machine as follows: " << endl;
-    kout << "  Mode:         " << ((Traits<Build>::MODE == Traits<Build>::LIBRARY) ? "library" : (Traits<Build>::MODE == Traits<Build>::BUILTIN) ? "built-in" : "kernel") << endl;
-    kout << "  Processor:    " << Traits<Machine>::CPUS << " x RV" << Traits<CPU>::WORD_SIZE << " at " << Traits<CPU>::CLOCK / 1000000 << " MHz (BUS clock = " << Traits<CPU>::CLOCK / 1000000 << " MHz)" << endl;
-    kout << "  Machine:      SiFive-U" << endl;
-    kout << "  Memory:       " << (RAM_TOP + 1 - RAM_BASE) / 1024 << " KB [" << reinterpret_cast<void *>(RAM_BASE) << ":" << reinterpret_cast<void *>(RAM_TOP) << "]" << endl;
-    kout << "  User memory:  " << (FREE_TOP - FREE_BASE) / 1024 << " KB [" << reinterpret_cast<void *>(FREE_BASE) << ":" << reinterpret_cast<void *>(FREE_TOP) << "]" << endl;
-    kout << "  I/O space:    " << (MIO_TOP + 1 - MIO_BASE) / 1024 << " KB [" << reinterpret_cast<void *>(MIO_BASE) << ":" << reinterpret_cast<void *>(MIO_TOP) << "]" << endl;
-    kout << "  Node Id:      ";
-    if(si->bm.node_id != -1)
-        kout << si->bm.node_id << " (" << Traits<Build>::NODES << ")" << endl;
-    else
-        kout << "will get from the network!" << endl;
-    kout << "  Position:     ";
-    if(si->bm.space_x != -1)
-        kout << "(" << si->bm.space_x << "," << si->bm.space_y << "," << si->bm.space_z << ")" << endl;
-    else
-        kout << "will get from the network!" << endl;
-    if(si->bm.extras_offset != -1UL)
-        kout << "  Extras:       " << si->lm.app_extra_size << " bytes" << endl;
-
-    kout << endl;
+  db<Setup>(TRC) << "Setup::say_hi()" << endl;
+  db<Setup>(INF) << "System_Info=" << *si << endl;
+
+  kout << endl;
+
+  if (si->bm.application_offset == -1U)
+  {
+    db<Setup>(ERR) << "No APPLICATION in boot image, you don't need EPOS!" << endl;
+    panic();
+  }
+  else
+  {
+    si->lm.has_app = true;
+  }
+
+  kout << "This is EPOS!\n"
+       << endl;
+  kout << "Setting up this machine as follows: " << endl;
+  kout << "  Mode:         " << ((Traits<Build>::MODE == Traits<Build>::LIBRARY) ? "library" : (Traits<Build>::MODE == Traits<Build>::BUILTIN) ? "built-in"
+                                                                                                                                               : "kernel")
+       << endl;
+  kout << "  Processor:    " << Traits<Machine>::CPUS << " x RV" << Traits<CPU>::WORD_SIZE << " at " << Traits<CPU>::CLOCK / 1000000 << " MHz (BUS clock = " << Traits<CPU>::CLOCK / 1000000 << " MHz)" << endl;
+  kout << "  Machine:      SiFive-U" << endl;
+  kout << "  Memory:       " << (si->bm.mem_top - si->bm.mem_base) / 1024 << " KB [" << reinterpret_cast<void *>(si->bm.mem_base) << ":" << reinterpret_cast<void *>(si->bm.mem_top) << "]" << endl;
+  kout << "  User memory:  " << (FREE_TOP - FREE_BASE) / 1024 << " KB [" << reinterpret_cast<void *>(FREE_BASE) << ":" << reinterpret_cast<void *>(FREE_TOP) << "]" << endl;
+  kout << "  I/O space:    " << (si->bm.mio_top - si->bm.mio_base) / 1024 << " KB [" << reinterpret_cast<void *>(si->bm.mio_base) << ":" << reinterpret_cast<void *>(si->bm.mio_top) << "]" << endl;
+  kout << "  Node Id:      ";
+  if (si->bm.node_id != -1)
+    kout << si->bm.node_id << " (" << Traits<Build>::NODES << ")" << endl;
+  else
+    kout << "will get from the network!" << endl;
+  kout << "  Position:     ";
+  if (si->bm.space_x != -1)
+    kout << "(" << si->bm.space_x << "," << si->bm.space_y << "," << si->bm.space_z << ")" << endl;
+  else
+    kout << "will get from the network!" << endl;
+  if (si->lm.has_stp)
+    kout << "  Setup:        " << si->lm.stp_code_size + si->lm.stp_data_size << " bytes" << endl;
+  if (si->lm.has_ini)
+    kout << "  Init:         " << si->lm.ini_code_size + si->lm.ini_data_size << " bytes" << endl;
+  if (si->lm.has_sys)
+    kout << "  OS code:      " << si->lm.sys_code_size << " bytes"
+         << "\tdata: " << si->lm.sys_data_size << " bytes"
+         << "   stack: " << si->lm.sys_stack_size << " bytes" << endl;
+  if (si->lm.has_app)
+    kout << "  APP code:     " << si->lm.app_code_size << " bytes"
+         << "\tdata: " << si->lm.app_data_size << " bytes" << endl;
+  if (si->lm.has_ext)
+    kout << "  Extras:       " << si->lm.app_extra_size << " bytes" << endl;
+
+  kout << endl;
 }
 
 void Setup::call_next()
 {
-    // Check for next stage and obtain the entry point
-    Log_Addr pc = &_start;
+  // Check for next stage and obtain the entry point
+  Log_Addr pc;
+
+  pc = &_start;
 
-    db<Setup>(INF) << "SETUP ends here!" << endl;
+  db<Setup>(INF) << "SETUP ends here!" << endl;
 
-    // Call the next stage
-    static_cast<void (*)()>(pc)();
+  static_cast<void (*)()>(pc)();
 
-    // SETUP is now part of the free memory and this point should never be reached, but, just in case ... :-)
-    db<Setup>(ERR) << "OS failed to init!" << endl;
+  // SETUP is now part of the free memory and this point should never be reached, but, just in case ... :-)
+  db<Setup>(ERR) << "OS failed to init!" << endl;
 }
 
 __END_SYS
@@ -131,24 +154,47 @@ using namespace EPOS::S;
 
 void _entry() // machine mode
 {
-    if(CPU::mhartid() != 0)                             // SiFive-U requires 2 cores, so we disable core 1 here
-        CPU::halt();
+  // removed halt to use for multicore
+  // if (CPU::id() != 0)
+  //     CPU::halt();
 
-    CPU::mstatusc(CPU::MIE);                            // disable interrupts (they will be reenabled at Init_End)
-    CPU::mies(CPU::MSI);                                // enable interrupts at CLINT so IPI and timer can be triggered
-    CLINT::mtvec(CLINT::DIRECT, _int_entry);            // setup a preliminary machine mode interrupt handler pointing it to _int_entry
+  if (CPU::id() == 0)
+  { // setting up main core
 
-    CPU::sp(Memory_Map::BOOT_STACK + Traits<Machine>::STACK_SIZE - sizeof(long)); // set this hart stack
+    CPU::mstatusc(CPU::MIE); // disable interrupts (they will be reenabled at Init_End)
 
-    Machine::clear_bss();
+    CPU::mies(CPU::MSI); // enable interrupts at CLINT so IPI
+    // setting bit mie.MTIE on so timer interrupts can occur
+    CPU::mies(CPU::MTI);                     // enable interrupts at CLINT timer can be triggered
+    CLINT::mtvec(CLINT::DIRECT, _int_entry); // setup a preliminary machine mode interrupt handler pointing it to _int_entry
 
-    CPU::mstatus(CPU::MPP_M);                           // stay in machine mode at mret
+    // CPU::sp(Memory_Map::BOOT_STACK + Traits<Machine>::STACK_SIZE * (CPU::id() + 1) - sizeof(long)); // set this hart stack (the first stack is reserved for _int_m2s)
+    CPU::sp(Memory_Map::BOOT_STACK + Traits<Machine>::STACK_SIZE * (CPU::mhartid() + 1) - sizeof(long));
+    Machine::clear_bss();
 
-    CPU::mepc(CPU::Reg(&_setup));                       // entry = _setup
-    CPU::mret();                                        // enter supervisor mode at setup (mepc) with interrupts enabled (mstatus.mpie = true)
+    CPU::mstatus(CPU::MPP_M | CPU::MPIE); // stay in machine mode and reenable interrupts at mret
+
+    CPU::mepc(CPU::Reg(&_setup)); // entry = _setup
+    CPU::mret();                  // enter supervisor mode at setup (mepc) with interrupts enabled (mstatus.mpie = true)
+  }
+  else
+  {
+    // auxiliar cores
+    CPU::mies(CPU::MSI); // enable interrupts at CLINT so IPI
+    // setting bit mie.MTIE on so timer interrupts can occur
+    CPU::mies(CPU::MTI);          // enable interrupts at CLINT timer can be triggered
+    CPU::mepc(CPU::Reg(&_setup)); // entry = _setup
+    CPU::mret();                  // enter supervisor mode at setup (mepc) with interrupts enabled (mstatus.mpie = true)
+  }
+
+if (CPU::id() == 0)
+        Machine::clear_bss();
 }
 
 void _setup() // supervisor mode
 {
-    Setup setup;
+  if (CPU::int_disabled())
+    CPU::halt();
+
+  Setup setup;
 }
diff --git a/src/system/flash_scaffold.cc b/src/system/flash_scaffold.cc
new file mode 100644
index 0000000..87920cf
--- /dev/null
+++ b/src/system/flash_scaffold.cc
@@ -0,0 +1,16 @@
+// EPOS Application Scaffold and Application Component Implementation
+
+#include <system.h>
+
+__BEGIN_SYS
+
+// Application class attributes
+char Flash::_preheap[];
+Heap * Flash::_heap;
+
+__END_SYS
+
+__BEGIN_API
+
+__END_API
+
diff --git a/src/system/makefile b/src/system/makefile
index 6967702..50b5571 100644
--- a/src/system/makefile
+++ b/src/system/makefile
@@ -10,6 +10,7 @@ install: install_$(SMOD)_$(MMOD)
 
 install_library_$(MMOD): system_library_$(MMOD)
 		$(INSTALL) system_$(MMOD).o $(LIB)
+		$(INSTALL) flash_$(MMOD).o $(LIB)
 		$(INSTALL) application_$(MMOD).o $(LIB)
 
 install_builtin_$(MMOD): system_builtin_$(MMOD)
@@ -21,9 +22,11 @@ install_kernel_$(MMOD): system_kernel_$(MMOD)
 		$(INSTALL) system_$(MMOD) $(IMG)
 		$(INSTALL) application_$(MMOD).o $(LIB)
 
-system_library_$(MMOD): system_scaffold.o application_scaffold.o
+system_library_$(MMOD): system_scaffold.o application_scaffold.o flash_scaffold.o
 		$(LD) $(LDFLAGS) -i system_scaffold.o -o system_$(MMOD).o
 		$(INSTALL) application_scaffold.o application_$(MMOD).o
+		$(INSTALL) flash_scaffold.o flash_$(MMOD).o
+		
 
 system_builtin_$(MMOD): $(OBJS)
 		$(LD) $(LDFLAGS) -L$(CCLIB) --nmagic \
diff --git a/src/system/system_scaffold.cc b/src/system/system_scaffold.cc
index a11344e..bdbd974 100644
--- a/src/system/system_scaffold.cc
+++ b/src/system/system_scaffold.cc
@@ -37,6 +37,38 @@ extern "C" {
     // Utility-related methods that differ from kernel and user space.
     // OStream
     void _print(const char * s) { Display::puts(s); }
-    void _print_preamble() {}
-    void _print_trailler(bool error) { if(error) _panic(); }
+    static volatile int _print_lock = -1;
+    void _print_preamble()
+    {
+        static char tag[] = "<0>: ";
+
+        int me = CPU::id();
+        int last = CPU::cas(_print_lock, -1, me);
+        for (int i = 0, owner = last; (i < 10) && (owner != me); i++, owner = CPU::cas(_print_lock, -1, me))
+            ;
+        if (last != me)
+        {
+            tag[1] = '0' + CPU::id();
+            _print(tag);
+        }
+    }
+    void _print_trailler(bool error)
+    {
+        static char tag[] = " :<0>";
+
+        if (_print_lock != -1)
+        {
+            tag[3] = '0' + CPU::id();
+            _print(tag);
+
+            _print_lock = -1;
+        }
+        if (error)
+            _panic();
+    }
+
+    // Heap
+    static Spin _heap_spin_lock;
+    void _lock_heap() { _heap_spin_lock.acquire(); }
+    void _unlock_heap() { _heap_spin_lock.release(); }
 }
diff --git a/src/utility/delete.cc b/src/utility/delete.cc
index 6afd9ad..ea0c074 100644
--- a/src/utility/delete.cc
+++ b/src/utility/delete.cc
@@ -2,19 +2,33 @@
 
 #include <system.h>
 
+using namespace EPOS;
+
 // C++ dynamic memory deallocators
 void operator delete(void * object) {
-    return free(object);
+    if (object < (void*) Traits<Machine>::FLASH_BASE)
+        return free(object);
+    else
+        return free(object, FLASH);
 }
 
 void operator delete[](void * object) {
-    return free(object);
+    if (object < (void*) Traits<Machine>::FLASH_BASE)
+        return free(object);
+    else
+        return free(object, FLASH);
 }
 
 void operator delete(void * object, size_t bytes) {
-    return free(object);
+    if (object < (void*) Traits<Machine>::FLASH_BASE)
+        return free(object);
+    else
+        return free(object, FLASH);
 }
 
 void operator delete[](void * object, size_t bytes) {
-    return free(object);
+    if (object < (void*) Traits<Machine>::FLASH_BASE)
+        return free(object);
+    else
+        return free(object, FLASH);
 }
diff --git a/tests/pmu_test/pmu_test_traits.h b/tests/pmu_test/pmu_test_traits.h
index 9bf0050..6c8acf9 100644
--- a/tests/pmu_test/pmu_test_traits.h
+++ b/tests/pmu_test/pmu_test_traits.h
@@ -10,9 +10,9 @@ template<> struct Traits<Build>: public Traits_Tokens
 {
     // Basic configuration
     static const unsigned int MODE = LIBRARY;
-    static const unsigned int ARCHITECTURE = RV32;
+    static const unsigned int ARCHITECTURE = RV64;
     static const unsigned int MACHINE = RISCV;
-    static const unsigned int MODEL = SiFive_E; 
+    static const unsigned int MODEL = SiFive_U; 
     static const unsigned int CPUS = 1;
     static const unsigned int NODES = 1; // (> 1 => NETWORKING)
     static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
diff --git a/tests/uart_test/uart_test_traits.h b/tests/uart_test/uart_test_traits.h
index 9bf0050..6c8acf9 100644
--- a/tests/uart_test/uart_test_traits.h
+++ b/tests/uart_test/uart_test_traits.h
@@ -10,9 +10,9 @@ template<> struct Traits<Build>: public Traits_Tokens
 {
     // Basic configuration
     static const unsigned int MODE = LIBRARY;
-    static const unsigned int ARCHITECTURE = RV32;
+    static const unsigned int ARCHITECTURE = RV64;
     static const unsigned int MACHINE = RISCV;
-    static const unsigned int MODEL = SiFive_E; 
+    static const unsigned int MODEL = SiFive_U; 
     static const unsigned int CPUS = 1;
     static const unsigned int NODES = 1; // (> 1 => NETWORKING)
     static const unsigned int EXPECTED_SIMULATION_TIME = 60; // s (0 => not simulated)
diff --git a/tools/eposcc/eposcc b/tools/eposcc/eposcc
index e7e41d6..5101791 100644
--- a/tools/eposcc/eposcc
+++ b/tools/eposcc/eposcc
@@ -66,7 +66,7 @@ if [ "$SETUP" != "" -o "$APP_CODE" != "$APP_DATA" -a "$MACH_DATA_NAME" != "" ] ;
     LINK_FLGS_LIBRARY="$LINK_FLGS_LIBRARY --section-start $MACH_DATA_NAME=$APP_DATA"
 fi
 LINK_OBJI_LIBRARY="$LIB/crt0_$MMOD.o $LIB/crtbegin_$MMOD.o $LIB/init_end_$MMOD.o"
-LINK_OBJN_LIBRARY="$LIB/application_$MMOD.o $LIB/init_application_$MMOD.o $LIB/init_system_$MMOD.o $LIB/system_$MMOD.o $LIB/init_begin_$MMOD.o"
+LINK_OBJN_LIBRARY="$LIB/application_$MMOD.o $LIB/init_application_$MMOD.o $LIB/init_system_$MMOD.o $LIB/system_$MMOD.o $LIB/init_begin_$MMOD.o $LIB/flash_$MMOD.o $LIB/init_flash_$MMOD.o"
 LINK_OBJL_LIBRARY="$LIB/crtend_$MMOD.o"
 LINK_LIBS_LIBRARY="util_$MMOD sys_$MMOD init_$MMOD sys_$MMOD mach_$MMOD arch_$MMOD util_$MMOD gcc"
 if [ "$SETUP" = "" ] ; then
