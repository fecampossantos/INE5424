make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make --print-directory APPLICATION=uart clean1 prebuild_uart all1 posbuild_uart; make --print-directory APPLICATION=producer_consumer clean1 prebuild_producer_consumer all1 posbuild_producer_consumer; make --print-directory APPLICATION=pmu clean1 prebuild_pmu all1 posbuild_pmu; make --print-directory APPLICATION=philosophers_dinner clean1 prebuild_philosophers_dinner all1 posbuild_philosophers_dinner; make --print-directory APPLICATION=hello clean1 prebuild_hello all1 posbuild_hello; make --print-directory APPLICATION=alarm clean1 prebuild_alarm all1 posbuild_alarm;
 
# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
(cd etc && make --print-directory)
 
# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

# makefile (from '../makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from '../makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from '../makedefs', line 21)
LMACHNAME := mach
# makefile (from '../makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
 
# makefile (from '../makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 311)
LINK := ln -sf
# makefile (from '../makedefs', line 329)
SHELL := bash
# makefile (from '../makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from '../makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from '../makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from '../makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from '../makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from '../makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from '../makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from '../makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from '../makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from '../makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 1)
MAKEFILE_LIST :=  makefile ../makedefs
# makefile (from '../makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from '../makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from '../makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from '../makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from '../makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from '../makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '../makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from '../makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from '../makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from '../makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from '../makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from '../makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from '../makedefs', line 273)
TLD := gcc
# makefile (from '../makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from '../makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from '../makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from '../makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from '../makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from '../makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from '../makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from '../makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from '../makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from '../makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from '../makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from '../makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from '../makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from '../makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from '../makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from '../makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from '../makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from '../makedefs', line 302)
DD := dd
# makefile (from '../makedefs', line 230)
riscv_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '../makedefs', line 22)
LSYSNAME := sys
# makefile (from '../makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from '../makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from '../makedefs', line 121)
pc_FLASHER := 
# makefile (from '../makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from '../makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from '../makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from '../makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from '../makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from '../makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=uart
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from '../makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from '../makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from '../makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from '../makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from '../makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 2
# makefile (from '../makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from '../makedefs', line 316)
MAKE := make --print-directory
# environment
SHLVL = 3
# makefile (from '../makedefs', line 299)
CLEAN := rm -f
# makefile (from '../makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from '../makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from '../makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from '../makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile
.DEFAULT_GOAL := all
# makefile (from '../makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from '../makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from '../makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from '../makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from '../makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from '../makedefs', line 236)
atmega_EMULATOR = 
# environment
OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 84)
BOOT_ROM = 
# makefile (from '../makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from '../makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from '../makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from '../makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from '../makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from '../makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
 
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from '../makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from '../makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from '../makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from '../makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from '../makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 23)
LINITNAME := init
# makefile (from '../makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from '../makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from '../makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from '../makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from '../makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from '../makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from '../makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from '../makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from '../makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from '../makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from '../makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from '../makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from '../makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from '../makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from '../makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from '../makedefs', line 335)
TEE := tee
# makefile (from '../makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from '../makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from '../makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from '../makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from '../makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from '../makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from '../makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from '../makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from '../makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from '../makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from '../makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from '../makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from '../makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from '../makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = uart
# makefile (from '../makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from '../makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from '../makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from '../makedefs', line 343)
TOUCH := touch
# makefile (from '../makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# environment
LANG = C
# makefile (from '../makedefs', line 340)
TERM := konsole -e
# makefile (from '../makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from '../makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from '../makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from '../makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 14897): 4 files, 4 impossibilities.
# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
# .. (device 2080, inode 1652): 19 files, 2 impossibilities.

# 31 files, 8 impossibilities in 3 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from '../makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from '../makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from '../makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from '../makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from '../makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from '../makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from '../makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from '../makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from '../makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from '../makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from '../makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from '../makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from '../makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from '../makedefs', line 389):
 
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from '../makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from '../makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from '../makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from '../makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from '../makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from '../makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:44:06.8804869
#  File has been updated.
#  Successfully updated.

config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := config
# automatic
# % := 
# automatic
# * := 
# automatic
# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# | := 
# automatic
# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
#  recipe to execute (from 'makefile', line 14):
		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
 
		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
	  		

all: /home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h config eposcfg eposcc.conf eposmkbi.conf
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/133=0%

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1785899
#  File has been updated.
#  Successfully updated.

# Not a target:
../makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean: /home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 56):
		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
		$(CLEAN) *.conf

eposmkbi.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
 
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
		@echo "NODE_ID=$(NODE_ID)" >> $@
		@echo "UUID=$(UUID)" >> $@

eposcfg: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		(cd $(TLS)/eposcfg && $(MAKE) clean all)

/home/felipe/git/UFSC/SO-II/ine5424/app/uart/uart_traits.h:
#  Implicit rule search has not been done.
#  Last modified 2022-06-13 09:44:57.5383429
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefile', line 8):
		$(error Missing traits file $@ !)

eposcc.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 25):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 75 / storage = 862 B / avg = 11 B
# current buf: size = 8162 B / used = 862 B / count = 75 / avg = 11 B

# strcache performance: lookups = 136 / hit rate = 44%
# hash-table stats:
 
# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

# makefile (from 'makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from 'makedefs', line 21)
LMACHNAME := mach
# makefile (from 'makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 311)
LINK := ln -sf
# makefile (from 'makedefs', line 329)
SHELL := bash
# makefile (from 'makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from 'makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from 'makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from 'makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from 'makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from 'makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from 'makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from 'makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from 'makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from 'makedefs', line 73)
 
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 1)
MAKEFILE_LIST :=  makefile makedefs
# makefile (from 'makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from 'makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from 'makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from 'makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'makefile', line 55)
TESTS := active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makefile', line 60)
UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from 'makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from 'makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from 'makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from 'makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from 'makedefs', line 273)
TLD := gcc
# makefile (from 'makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from 'makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from 'makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from 'makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from 'makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from 'makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from 'makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from 'makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from 'makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from 'makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from 'makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from 'makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from 'makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from 'makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from 'makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from 'makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'makedefs', line 302)
DD := dd
# makefile (from 'makedefs', line 230)
riscv_IMG_SUFFIX := .img
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'makedefs', line 22)
LSYSNAME := sys
# makefile (from 'makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from 'makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from 'makedefs', line 121)
pc_FLASHER := 
# makefile (from 'makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from 'makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from 'makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# makefile (from 'makefile', line 58)
TESTS_COMPILED := $(subst ,, )
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from 'makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from 'makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=uart
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from 'makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from 'makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from 'makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from 'makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 1
# makefile (from 'makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from 'makedefs', line 316)
MAKE := make --print-directory
# default
MAKECMDGOALS := clean1 prebuild_uart all1 posbuild_uart
# environment
SHLVL = 2
# makefile (from 'makedefs', line 299)
CLEAN := rm -f
# makefile (from 'makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from 'makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from 'makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from 'makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile (from 'makefile', line 56)
TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile
.DEFAULT_GOAL := all
# makefile (from 'makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from 'makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from 'makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from 'makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from 'makedefs', line 236)
atmega_EMULATOR = 
# makefile (from 'makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# makefile (from 'makedefs', line 84)
BOOT_ROM = 
# makefile (from 'makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from 'makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from 'makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from 'makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from 'makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from 'makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from 'makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from 'makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from 'makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from 'makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from 'makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 23)
LINITNAME := init
# makefile (from 'makefile', line 59)
TESTS_FINISHED := 
# makefile (from 'makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from 'makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from 'makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from 'makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from 'makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from 'makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from 'makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from 'makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from 'makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from 'makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from 'makefile', line 61)
UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from 'makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from 'makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from 'makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from 'makedefs', line 335)
TEE := tee
# makefile (from 'makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from 'makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from 'makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from 'makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from 'makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from 'makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from 'makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from 'makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from 'makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from 'makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from 'makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
 
# default
SUFFIXES := 
# makefile (from 'makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from 'makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = uart
# makefile (from 'makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from 'makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from 'makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from 'makedefs', line 343)
TOUCH := touch
# makefile (from 'makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# makefile (from 'makefile', line 5)
SUBDIRS := etc tools src app img
# environment
LANG = C
# makefile (from 'makedefs', line 340)
TERM := konsole -e
# makefile (from 'makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from 'makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from 'makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from 'makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 1652): 19 files, 8 impossibilities.

# 19 files, 8 impossibilities in 1 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from 'makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from 'makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from 'makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from 'makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from 'makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from 'makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from 'makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from 'makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from 'makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from 'makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from 'makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from 'makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from 'makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from 'makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from 'makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from 'makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from 'makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from 'makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from 'makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from 'makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

posbuild_uart:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 85):
		@echo " done!"

all: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		$(MAKE) all1

bin: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 53):
		$(MAKE) APPLICATION=hello etc tools

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

prebuild_uart:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
 
# @ := prebuild_uart
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'makefile', line 83):
		@echo -n "Building $(APPLICATION) ..."

.PHONY: prebuild_uart posbuild_uart prerun_uart
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 66):
		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img/uart.img:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 30):
		$(MAKE) $(PRECLEAN) all1
		

all1: etc tools src app img
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gittest: buildtest runtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

debug: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 36):
		$(MAKE) DEBUG=1 all1 debug1

app: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

test: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 63):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
		

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1985899
#  File has been updated.
#  Successfully updated.

prerun_uart:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 89):
		@echo "Running $(APPLICATION):"

src: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

debug1: etc img/uart.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		(cd img && $(MAKE) DEBUG=1 debug)

# Not a target:
makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

etc: FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := etc
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
 
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

runtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 69):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)

cleantest: cleanapps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 77):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;

run: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 23):
		$(MAKE) run1

clean: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 95):
		$(MAKE) clean1

veryclean: clean cleanapps cleantest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 109):
		(cd tools && $(MAKECLEAN))
		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;

img: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

dist: veryclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		$(CLEAN) $(ETC)/license.mk
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
		$(CLEAN) $(ETC)/license.as

flash: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 46):
		$(MAKE) flash1

run1: etc img/uart.img
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 27):
		(cd img && $(MAKE) run1)
		

clean1: FORCE
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := clean1
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
#  recipe to execute (from 'makefile', line 99):
		(cd etc && $(MAKECLEAN))
		(cd app && $(MAKECLEAN))
		(cd src && $(MAKECLEAN))
		(cd img && $(MAKECLEAN))
		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;

tools: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

flash1: all1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 50):
		(cd img && $(MAKE) flash)

cleanapps: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 106):
		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)

linktest: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 74):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 78 / storage = 598 B / avg = 7 B
# current buf: size = 8162 B / used = 598 B / count = 78 / avg = 7 B

# strcache performance: lookups = 201 / hit rate = 61%
# hash-table stats:
# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
(cd etc && make --print-directory)
 
# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

 
# makefile (from '../makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from '../makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from '../makedefs', line 21)
LMACHNAME := mach
# makefile (from '../makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 311)
LINK := ln -sf
# makefile (from '../makedefs', line 329)
SHELL := bash
# makefile (from '../makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from '../makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from '../makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from '../makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from '../makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from '../makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from '../makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from '../makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from '../makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from '../makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 1)
MAKEFILE_LIST :=  makefile ../makedefs
# makefile (from '../makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from '../makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from '../makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from '../makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from '../makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from '../makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '../makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from '../makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from '../makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from '../makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from '../makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from '../makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from '../makedefs', line 273)
TLD := gcc
# makefile (from '../makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from '../makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from '../makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from '../makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from '../makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from '../makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from '../makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from '../makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from '../makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from '../makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from '../makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from '../makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from '../makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from '../makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from '../makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from '../makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from '../makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from '../makedefs', line 302)
DD := dd
# makefile (from '../makedefs', line 230)
riscv_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '../makedefs', line 22)
LSYSNAME := sys
# makefile (from '../makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from '../makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from '../makedefs', line 121)
pc_FLASHER := 
# makefile (from '../makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from '../makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from '../makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from '../makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from '../makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from '../makedefs', line 267)
 
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=producer_consumer
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from '../makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from '../makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from '../makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from '../makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from '../makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 2
# makefile (from '../makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from '../makedefs', line 316)
MAKE := make --print-directory
# environment
SHLVL = 3
# makefile (from '../makedefs', line 299)
CLEAN := rm -f
# makefile (from '../makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from '../makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from '../makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from '../makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile
.DEFAULT_GOAL := all
# makefile (from '../makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from '../makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from '../makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from '../makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from '../makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from '../makedefs', line 236)
atmega_EMULATOR = 
# environment
OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 84)
BOOT_ROM = 
# makefile (from '../makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from '../makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from '../makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from '../makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from '../makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from '../makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from '../makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from '../makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from '../makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from '../makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from '../makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 23)
LINITNAME := init
# makefile (from '../makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from '../makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from '../makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from '../makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from '../makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from '../makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from '../makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from '../makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from '../makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from '../makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from '../makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from '../makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from '../makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from '../makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from '../makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from '../makedefs', line 335)
TEE := tee
# makefile (from '../makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from '../makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from '../makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from '../makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from '../makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from '../makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from '../makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from '../makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from '../makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from '../makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from '../makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from '../makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from '../makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from '../makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = producer_consumer
# makefile (from '../makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from '../makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from '../makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from '../makedefs', line 343)
TOUCH := touch
# makefile (from '../makedefs', line 306)
 
EMULATOR = $(MACH_EMULATOR)
# environment
LANG = C
# makefile (from '../makedefs', line 340)
TERM := konsole -e
# makefile (from '../makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from '../makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from '../makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from '../makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 14897): 4 files, 4 impossibilities.
# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
# .. (device 2080, inode 1652): 19 files, 2 impossibilities.

# 31 files, 8 impossibilities in 3 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from '../makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from '../makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from '../makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from '../makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from '../makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from '../makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from '../makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from '../makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from '../makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from '../makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from '../makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from '../makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from '../makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from '../makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from '../makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from '../makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from '../makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from '../makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
 
#  recipe to execute (from '../makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from '../makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:44:06.8804869
#  File has been updated.
#  Successfully updated.

config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := config
# automatic
# % := 
# automatic
# * := 
# automatic
# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# | := 
# automatic
# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
#  recipe to execute (from 'makefile', line 14):
		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
	  		

all: /home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h config eposcfg eposcc.conf eposmkbi.conf
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/133=0%

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1785899
#  File has been updated.
#  Successfully updated.

# Not a target:
../makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean: /home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 56):
		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
		$(CLEAN) *.conf

eposmkbi.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
		@echo "NODE_ID=$(NODE_ID)" >> $@
		@echo "UUID=$(UUID)" >> $@

/home/felipe/git/UFSC/SO-II/ine5424/app/producer_consumer/producer_consumer_traits.h:
#  Implicit rule search has not been done.
#  Last modified 2022-06-13 09:44:57.4883429
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefile', line 8):
		$(error Missing traits file $@ !)

eposcfg: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		(cd $(TLS)/eposcfg && $(MAKE) clean all)

eposcc.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 25):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

 
# strcache buffers: 1 (0) / strings = 75 / storage = 888 B / avg = 11 B
# current buf: size = 8162 B / used = 888 B / count = 75 / avg = 11 B

# strcache performance: lookups = 136 / hit rate = 44%
# hash-table stats:
# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

# makefile (from 'makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from 'makedefs', line 21)
LMACHNAME := mach
# makefile (from 'makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 311)
LINK := ln -sf
# makefile (from 'makedefs', line 329)
SHELL := bash
# makefile (from 'makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from 'makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from 'makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from 'makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
 
# makefile (from 'makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from 'makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from 'makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from 'makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from 'makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from 'makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 1)
MAKEFILE_LIST :=  makefile makedefs
# makefile (from 'makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from 'makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from 'makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from 'makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'makefile', line 55)
TESTS := active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makefile', line 60)
UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from 'makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from 'makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from 'makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from 'makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from 'makedefs', line 273)
TLD := gcc
# makefile (from 'makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from 'makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from 'makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from 'makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from 'makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from 'makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from 'makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from 'makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from 'makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from 'makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from 'makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from 'makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from 'makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from 'makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from 'makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from 'makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'makedefs', line 302)
DD := dd
# makefile (from 'makedefs', line 230)
riscv_IMG_SUFFIX := .img
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'makedefs', line 22)
LSYSNAME := sys
# makefile (from 'makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from 'makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from 'makedefs', line 121)
pc_FLASHER := 
# makefile (from 'makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from 'makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from 'makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# makefile (from 'makefile', line 58)
TESTS_COMPILED := $(subst ,, )
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from 'makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from 'makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=producer_consumer
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from 'makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from 'makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from 'makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from 'makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 1
# makefile (from 'makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from 'makedefs', line 316)
MAKE := make --print-directory
# default
MAKECMDGOALS := clean1 prebuild_producer_consumer all1 posbuild_producer_consumer
# environment
SHLVL = 2
# makefile (from 'makedefs', line 299)
CLEAN := rm -f
# makefile (from 'makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from 'makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from 'makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from 'makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile (from 'makefile', line 56)
TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile
.DEFAULT_GOAL := all
# makefile (from 'makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from 'makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from 'makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from 'makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from 'makedefs', line 236)
atmega_EMULATOR = 
# makefile (from 'makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# makefile (from 'makedefs', line 84)
BOOT_ROM = 
# makefile (from 'makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from 'makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from 'makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
 
# automatic
*F = $(notdir $*)
# makefile (from 'makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from 'makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from 'makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from 'makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from 'makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from 'makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from 'makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from 'makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 23)
LINITNAME := init
# makefile (from 'makefile', line 59)
TESTS_FINISHED := 
# makefile (from 'makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from 'makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from 'makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from 'makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from 'makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from 'makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from 'makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from 'makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from 'makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from 'makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from 'makefile', line 61)
UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from 'makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from 'makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from 'makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from 'makedefs', line 335)
TEE := tee
# makefile (from 'makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from 'makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from 'makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from 'makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from 'makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from 'makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from 'makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from 'makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from 'makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from 'makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from 'makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from 'makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from 'makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = producer_consumer
# makefile (from 'makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from 'makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from 'makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from 'makedefs', line 343)
TOUCH := touch
# makefile (from 'makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# makefile (from 'makefile', line 5)
SUBDIRS := etc tools src app img
# environment
LANG = C
# makefile (from 'makedefs', line 340)
TERM := konsole -e
# makefile (from 'makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from 'makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from 'makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from 'makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 1652): 19 files, 8 impossibilities.

# 19 files, 8 impossibilities in 1 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from 'makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from 'makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from 'makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from 'makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from 'makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from 'makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

 
%.o: %.c
#  recipe to execute (from 'makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from 'makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from 'makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from 'makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from 'makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from 'makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from 'makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from 'makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from 'makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from 'makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from 'makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from 'makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from 'makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from 'makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

img/producer_consumer.img:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 30):
		$(MAKE) $(PRECLEAN) all1
		

all: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		$(MAKE) all1

bin: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 53):
		$(MAKE) APPLICATION=hello etc tools

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: prebuild_producer_consumer posbuild_producer_consumer prerun_producer_consumer
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 66):
		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all1: etc tools src app img
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gittest: buildtest runtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

debug: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 36):
		$(MAKE) DEBUG=1 all1 debug1

app: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

test: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 63):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
		

# Not a target:
makefile:
#  Implicit rule search has been done.
 
#  Last modified 2022-06-02 14:19:05.1985899
#  File has been updated.
#  Successfully updated.

src: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

debug1: etc img/producer_consumer.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		(cd img && $(MAKE) DEBUG=1 debug)

posbuild_producer_consumer:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 85):
		@echo " done!"

# Not a target:
makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

prebuild_producer_consumer:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := prebuild_producer_consumer
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'makefile', line 83):
		@echo -n "Building $(APPLICATION) ..."

etc: FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := etc
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

runtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 69):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)

cleantest: cleanapps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 77):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;

run: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 23):
		$(MAKE) run1

clean: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 95):
		$(MAKE) clean1

veryclean: clean cleanapps cleantest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 109):
		(cd tools && $(MAKECLEAN))
		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;

img: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

dist: veryclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		$(CLEAN) $(ETC)/license.mk
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
		$(CLEAN) $(ETC)/license.as

flash: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 46):
		$(MAKE) flash1

run1: etc img/producer_consumer.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 27):
		(cd img && $(MAKE) run1)
		

clean1: FORCE
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := clean1
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
#  recipe to execute (from 'makefile', line 99):
		(cd etc && $(MAKECLEAN))
		(cd app && $(MAKECLEAN))
		(cd src && $(MAKECLEAN))
		(cd img && $(MAKECLEAN))
		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;

prerun_producer_consumer:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 89):
		@echo "Running $(APPLICATION):"

tools: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

flash1: all1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 50):
		(cd img && $(MAKE) flash)

cleanapps: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 106):
		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)

linktest: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 74):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

 
# strcache buffers: 1 (0) / strings = 78 / storage = 650 B / avg = 8 B
# current buf: size = 8162 B / used = 650 B / count = 78 / avg = 8 B

# strcache performance: lookups = 201 / hit rate = 61%
# hash-table stats:
# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
(cd etc && make --print-directory)
 
# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

# makefile (from '../makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from '../makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from '../makedefs', line 21)
LMACHNAME := mach
# makefile (from '../makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 311)
LINK := ln -sf
# makefile (from '../makedefs', line 329)
SHELL := bash
# makefile (from '../makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from '../makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from '../makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from '../makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from '../makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from '../makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from '../makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from '../makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from '../makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from '../makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 1)
MAKEFILE_LIST :=  makefile ../makedefs
# makefile (from '../makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from '../makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from '../makedefs', line 10)
 
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from '../makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from '../makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from '../makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '../makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from '../makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from '../makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from '../makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from '../makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from '../makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from '../makedefs', line 273)
TLD := gcc
# makefile (from '../makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from '../makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from '../makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from '../makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from '../makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from '../makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from '../makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from '../makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from '../makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from '../makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from '../makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from '../makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from '../makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from '../makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from '../makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from '../makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from '../makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from '../makedefs', line 302)
DD := dd
# makefile (from '../makedefs', line 230)
riscv_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '../makedefs', line 22)
LSYSNAME := sys
# makefile (from '../makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from '../makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from '../makedefs', line 121)
pc_FLASHER := 
# makefile (from '../makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from '../makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from '../makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from '../makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from '../makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from '../makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=pmu
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from '../makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from '../makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from '../makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from '../makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from '../makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 2
# makefile (from '../makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from '../makedefs', line 316)
MAKE := make --print-directory
# environment
SHLVL = 3
# makefile (from '../makedefs', line 299)
CLEAN := rm -f
# makefile (from '../makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from '../makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from '../makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from '../makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile
.DEFAULT_GOAL := all
# makefile (from '../makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from '../makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from '../makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from '../makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from '../makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from '../makedefs', line 236)
atmega_EMULATOR = 
# environment
OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 84)
BOOT_ROM = 
# makefile (from '../makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from '../makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from '../makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from '../makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from '../makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from '../makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from '../makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from '../makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from '../makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from '../makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from '../makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 23)
LINITNAME := init
# makefile (from '../makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from '../makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from '../makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
 
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from '../makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from '../makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from '../makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from '../makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from '../makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from '../makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from '../makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from '../makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from '../makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from '../makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from '../makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from '../makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from '../makedefs', line 335)
TEE := tee
# makefile (from '../makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from '../makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from '../makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from '../makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from '../makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from '../makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from '../makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from '../makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from '../makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from '../makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from '../makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from '../makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from '../makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from '../makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = pmu
# makefile (from '../makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from '../makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from '../makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from '../makedefs', line 343)
TOUCH := touch
# makefile (from '../makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# environment
LANG = C
# makefile (from '../makedefs', line 340)
TERM := konsole -e
# makefile (from '../makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from '../makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from '../makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from '../makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 14897): 4 files, 4 impossibilities.
# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
# .. (device 2080, inode 1652): 19 files, 2 impossibilities.

# 31 files, 8 impossibilities in 3 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from '../makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from '../makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from '../makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from '../makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from '../makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from '../makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from '../makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from '../makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from '../makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from '../makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from '../makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from '../makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from '../makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from '../makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from '../makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from '../makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from '../makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from '../makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from '../makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from '../makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:44:06.8804869
#  File has been updated.
#  Successfully updated.

config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
#  Implicit rule search has not been done.
 
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := config
# automatic
# % := 
# automatic
# * := 
# automatic
# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# | := 
# automatic
# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
#  recipe to execute (from 'makefile', line 14):
		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
	  		

all: /home/felipe/git/UFSC/SO-II/ine5424/app/pmu/pmu_traits.h config eposcfg eposcc.conf eposmkbi.conf
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/133=0%

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/home/felipe/git/UFSC/SO-II/ine5424/app/pmu/pmu_traits.h:
#  Implicit rule search has not been done.
#  Last modified 2022-06-13 09:44:57.4383429
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefile', line 8):
		$(error Missing traits file $@ !)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1785899
#  File has been updated.
#  Successfully updated.

# Not a target:
../makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean: /home/felipe/git/UFSC/SO-II/ine5424/app/pmu/pmu_traits.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 56):
		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
		$(CLEAN) *.conf

eposmkbi.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
		@echo "NODE_ID=$(NODE_ID)" >> $@
		@echo "UUID=$(UUID)" >> $@

eposcfg: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		(cd $(TLS)/eposcfg && $(MAKE) clean all)

eposcc.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 25):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 75 / storage = 860 B / avg = 11 B
# current buf: size = 8162 B / used = 860 B / count = 75 / avg = 11 B

# strcache performance: lookups = 136 / hit rate = 44%
# hash-table stats:
# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

# makefile (from 'makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from 'makedefs', line 21)
LMACHNAME := mach
# makefile (from 'makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 311)
LINK := ln -sf
# makefile (from 'makedefs', line 329)
SHELL := bash
# makefile (from 'makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from 'makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from 'makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from 'makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from 'makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from 'makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from 'makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from 'makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from 'makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from 'makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 1)
MAKEFILE_LIST :=  makefile makedefs
# makefile (from 'makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from 'makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from 'makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from 'makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'makefile', line 55)
TESTS := active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makefile', line 60)
UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from 'makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from 'makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from 'makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from 'makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from 'makedefs', line 273)
TLD := gcc
# makefile (from 'makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from 'makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from 'makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from 'makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from 'makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from 'makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from 'makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from 'makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from 'makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from 'makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from 'makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from 'makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from 'makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from 'makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from 'makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from 'makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'makedefs', line 302)
DD := dd
# makefile (from 'makedefs', line 230)
riscv_IMG_SUFFIX := .img
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'makedefs', line 22)
LSYSNAME := sys
# makefile (from 'makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from 'makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from 'makedefs', line 121)
pc_FLASHER := 
# makefile (from 'makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from 'makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from 'makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# makefile (from 'makefile', line 58)
TESTS_COMPILED := $(subst ,, )
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from 'makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from 'makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=pmu
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from 'makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from 'makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from 'makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from 'makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 1
# makefile (from 'makedefs', line 238)
 
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from 'makedefs', line 316)
MAKE := make --print-directory
# default
MAKECMDGOALS := clean1 prebuild_pmu all1 posbuild_pmu
# environment
SHLVL = 2
# makefile (from 'makedefs', line 299)
CLEAN := rm -f
# makefile (from 'makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from 'makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from 'makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from 'makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile (from 'makefile', line 56)
TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile
.DEFAULT_GOAL := all
# makefile (from 'makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from 'makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from 'makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from 'makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from 'makedefs', line 236)
atmega_EMULATOR = 
# makefile (from 'makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# makefile (from 'makedefs', line 84)
BOOT_ROM = 
# makefile (from 'makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from 'makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from 'makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from 'makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from 'makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from 'makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from 'makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from 'makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from 'makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from 'makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from 'makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 23)
LINITNAME := init
# makefile (from 'makefile', line 59)
TESTS_FINISHED := 
# makefile (from 'makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from 'makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from 'makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from 'makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from 'makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from 'makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from 'makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from 'makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from 'makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from 'makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from 'makefile', line 61)
UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from 'makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from 'makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from 'makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from 'makedefs', line 335)
TEE := tee
# makefile (from 'makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from 'makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from 'makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from 'makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from 'makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from 'makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from 'makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from 'makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from 'makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from 'makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from 'makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from 'makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from 'makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = pmu
# makefile (from 'makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from 'makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from 'makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from 'makedefs', line 343)
TOUCH := touch
# makefile (from 'makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# makefile (from 'makefile', line 5)
SUBDIRS := etc tools src app img
# environment
LANG = C
# makefile (from 'makedefs', line 340)
TERM := konsole -e
# makefile (from 'makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from 'makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from 'makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from 'makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 1652): 19 files, 8 impossibilities.

# 19 files, 8 impossibilities in 1 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from 'makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from 'makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from 'makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from 'makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from 'makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from 'makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from 'makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from 'makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from 'makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from 'makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from 'makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from 'makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from 'makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from 'makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from 'makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from 'makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from 'makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from 'makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from 'makedefs', line 406):
 
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from 'makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

all: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		$(MAKE) all1

bin: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 53):
		$(MAKE) APPLICATION=hello etc tools

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: prebuild_pmu posbuild_pmu prerun_pmu
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 66):
		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

posbuild_pmu:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 85):
		@echo " done!"

prebuild_pmu:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := prebuild_pmu
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'makefile', line 83):
		@echo -n "Building $(APPLICATION) ..."

all1: etc tools src app img
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gittest: buildtest runtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

debug: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 36):
		$(MAKE) DEBUG=1 all1 debug1

app: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

test: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 63):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
		

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1985899
#  File has been updated.
#  Successfully updated.

src: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

debug1: etc img/pmu.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		(cd img && $(MAKE) DEBUG=1 debug)

# Not a target:
makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

prerun_pmu:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 89):
		@echo "Running $(APPLICATION):"

etc: FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := etc
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

runtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 69):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)

cleantest: cleanapps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 77):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;

run: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 23):
		$(MAKE) run1

clean: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 95):
		$(MAKE) clean1

veryclean: clean cleanapps cleantest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 109):
		(cd tools && $(MAKECLEAN))
		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;

img: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

dist: veryclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		$(CLEAN) $(ETC)/license.mk
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
		$(CLEAN) $(ETC)/license.as

img/pmu.img:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 30):
		$(MAKE) $(PRECLEAN) all1
 
		

flash: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 46):
		$(MAKE) flash1

run1: etc img/pmu.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 27):
		(cd img && $(MAKE) run1)
		

clean1: FORCE
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := clean1
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
#  recipe to execute (from 'makefile', line 99):
		(cd etc && $(MAKECLEAN))
		(cd app && $(MAKECLEAN))
		(cd src && $(MAKECLEAN))
		(cd img && $(MAKECLEAN))
		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;

tools: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

flash1: all1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 50):
		(cd img && $(MAKE) flash)

cleanapps: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 106):
		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)

linktest: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 74):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 78 / storage = 594 B / avg = 7 B
# current buf: size = 8162 B / used = 594 B / count = 78 / avg = 7 B

# strcache performance: lookups = 201 / hit rate = 61%
# hash-table stats:
# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
(cd etc && make --print-directory)
 
# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

# makefile (from '../makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from '../makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from '../makedefs', line 21)
LMACHNAME := mach
# makefile (from '../makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 311)
LINK := ln -sf
# makefile (from '../makedefs', line 329)
SHELL := bash
# makefile (from '../makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from '../makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from '../makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from '../makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from '../makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from '../makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from '../makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from '../makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from '../makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from '../makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 1)
MAKEFILE_LIST :=  makefile ../makedefs
# makefile (from '../makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from '../makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from '../makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from '../makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from '../makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from '../makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '../makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from '../makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from '../makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from '../makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from '../makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from '../makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from '../makedefs', line 273)
TLD := gcc
# makefile (from '../makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from '../makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from '../makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from '../makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from '../makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from '../makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from '../makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from '../makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from '../makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from '../makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from '../makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from '../makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from '../makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from '../makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from '../makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from '../makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from '../makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from '../makedefs', line 302)
DD := dd
# makefile (from '../makedefs', line 230)
riscv_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '../makedefs', line 22)
LSYSNAME := sys
# makefile (from '../makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from '../makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from '../makedefs', line 121)
pc_FLASHER := 
# makefile (from '../makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from '../makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from '../makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from '../makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from '../makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from '../makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=philosophers_dinner
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from '../makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from '../makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from '../makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from '../makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from '../makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 2
# makefile (from '../makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from '../makedefs', line 316)
MAKE := make --print-directory
# environment
SHLVL = 3
# makefile (from '../makedefs', line 299)
CLEAN := rm -f
# makefile (from '../makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from '../makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from '../makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from '../makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile
.DEFAULT_GOAL := all
# makefile (from '../makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from '../makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from '../makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from '../makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from '../makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from '../makedefs', line 236)
atmega_EMULATOR = 
# environment
OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 84)
BOOT_ROM = 
# makefile (from '../makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from '../makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from '../makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from '../makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from '../makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from '../makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from '../makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from '../makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from '../makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from '../makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from '../makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 23)
LINITNAME := init
# makefile (from '../makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from '../makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from '../makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from '../makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from '../makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from '../makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from '../makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from '../makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from '../makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from '../makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from '../makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from '../makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from '../makedefs', line 214)
 
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from '../makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from '../makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from '../makedefs', line 335)
TEE := tee
# makefile (from '../makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from '../makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from '../makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from '../makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from '../makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from '../makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from '../makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from '../makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from '../makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from '../makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from '../makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from '../makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from '../makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from '../makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = philosophers_dinner
# makefile (from '../makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from '../makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from '../makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from '../makedefs', line 343)
TOUCH := touch
# makefile (from '../makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# environment
LANG = C
# makefile (from '../makedefs', line 340)
TERM := konsole -e
# makefile (from '../makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from '../makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from '../makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from '../makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 14897): 4 files, 4 impossibilities.
# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
# .. (device 2080, inode 1652): 19 files, 2 impossibilities.

# 31 files, 8 impossibilities in 3 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from '../makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from '../makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from '../makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from '../makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from '../makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from '../makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from '../makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from '../makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from '../makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from '../makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from '../makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from '../makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from '../makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from '../makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from '../makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from '../makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from '../makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from '../makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from '../makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from '../makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

/home/felipe/git/UFSC/SO-II/ine5424/app/philosophers_dinner/philosophers_dinner_traits.h:
#  Implicit rule search has not been done.
#  Last modified 2022-06-13 09:44:57.3683429
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefile', line 8):
		$(error Missing traits file $@ !)

# Not a target:
/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:44:06.8804869
#  File has been updated.
#  Successfully updated.

config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := config
# automatic
# % := 
# automatic
# * := 
# automatic
# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# | := 
# automatic
# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
#  recipe to execute (from 'makefile', line 14):
		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
 
		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
	  		

all: /home/felipe/git/UFSC/SO-II/ine5424/app/philosophers_dinner/philosophers_dinner_traits.h config eposcfg eposcc.conf eposmkbi.conf
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/133=0%

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1785899
#  File has been updated.
#  Successfully updated.

# Not a target:
../makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean: /home/felipe/git/UFSC/SO-II/ine5424/app/philosophers_dinner/philosophers_dinner_traits.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 56):
		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
		$(CLEAN) *.conf

eposmkbi.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
		@echo "NODE_ID=$(NODE_ID)" >> $@
		@echo "UUID=$(UUID)" >> $@

eposcfg: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		(cd $(TLS)/eposcfg && $(MAKE) clean all)

eposcc.conf: FORCE
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 25):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 75 / storage = 892 B / avg = 11 B
# current buf: size = 8162 B / used = 892 B / count = 75 / avg = 11 B

# strcache performance: lookups = 136 / hit rate = 44%
# hash-table stats:
# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:34 2022

# Variables

# makefile (from 'makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from 'makedefs', line 21)
LMACHNAME := mach
# makefile (from 'makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 311)
LINK := ln -sf
# makefile (from 'makedefs', line 329)
SHELL := bash
# makefile (from 'makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from 'makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from 'makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from 'makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from 'makedefs', line 92)
 
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from 'makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from 'makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from 'makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from 'makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from 'makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 1)
MAKEFILE_LIST :=  makefile makedefs
# makefile (from 'makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from 'makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from 'makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from 'makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'makefile', line 55)
TESTS := active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makefile', line 60)
UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from 'makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from 'makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from 'makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from 'makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from 'makedefs', line 273)
TLD := gcc
# makefile (from 'makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from 'makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from 'makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from 'makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from 'makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from 'makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from 'makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from 'makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from 'makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from 'makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from 'makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from 'makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from 'makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from 'makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from 'makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from 'makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'makedefs', line 302)
DD := dd
# makefile (from 'makedefs', line 230)
riscv_IMG_SUFFIX := .img
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'makedefs', line 22)
LSYSNAME := sys
# makefile (from 'makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from 'makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from 'makedefs', line 121)
pc_FLASHER := 
# makefile (from 'makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from 'makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from 'makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# makefile (from 'makefile', line 58)
TESTS_COMPILED := $(subst ,, )
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from 'makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from 'makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=philosophers_dinner
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from 'makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from 'makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from 'makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from 'makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 1
# makefile (from 'makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from 'makedefs', line 316)
MAKE := make --print-directory
# default
MAKECMDGOALS := clean1 prebuild_philosophers_dinner all1 posbuild_philosophers_dinner
# environment
SHLVL = 2
# makefile (from 'makedefs', line 299)
CLEAN := rm -f
# makefile (from 'makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from 'makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from 'makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from 'makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile (from 'makefile', line 56)
TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile
.DEFAULT_GOAL := all
# makefile (from 'makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from 'makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from 'makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from 'makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from 'makedefs', line 236)
atmega_EMULATOR = 
# makefile (from 'makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# makefile (from 'makedefs', line 84)
BOOT_ROM = 
# makefile (from 'makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from 'makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from 'makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from 'makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from 'makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from 'makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from 'makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from 'makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from 'makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from 'makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from 'makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 23)
LINITNAME := init
# makefile (from 'makefile', line 59)
TESTS_FINISHED := 
# makefile (from 'makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from 'makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from 'makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from 'makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from 'makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from 'makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from 'makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from 'makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from 'makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from 'makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from 'makefile', line 61)
UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from 'makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from 'makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from 'makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from 'makedefs', line 335)
TEE := tee
# makefile (from 'makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from 'makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from 'makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from 'makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from 'makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from 'makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from 'makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from 'makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from 'makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from 'makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from 'makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from 'makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from 'makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = philosophers_dinner
# makefile (from 'makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from 'makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from 'makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from 'makedefs', line 343)
TOUCH := touch
# makefile (from 'makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# makefile (from 'makefile', line 5)
SUBDIRS := etc tools src app img
# environment
LANG = C
# makefile (from 'makedefs', line 340)
TERM := konsole -e
# makefile (from 'makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from 'makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from 'makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from 'makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 1652): 19 files, 8 impossibilities.

# 19 files, 8 impossibilities in 1 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from 'makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from 'makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from 'makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from 'makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from 'makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from 'makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from 'makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from 'makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from 'makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from 'makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from 'makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from 'makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from 'makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from 'makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
 
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from 'makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from 'makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from 'makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from 'makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from 'makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from 'makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

all: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		$(MAKE) all1

bin: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 53):
		$(MAKE) APPLICATION=hello etc tools

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: prebuild_philosophers_dinner posbuild_philosophers_dinner prerun_philosophers_dinner
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 66):
		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img/philosophers_dinner.img:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 30):
		$(MAKE) $(PRECLEAN) all1
		

all1: etc tools src app img
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gittest: buildtest runtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

debug: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 36):
		$(MAKE) DEBUG=1 all1 debug1

app: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

test: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 63):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
		

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1985899
#  File has been updated.
#  Successfully updated.

src: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

debug1: etc img/philosophers_dinner.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		(cd img && $(MAKE) DEBUG=1 debug)

# Not a target:
makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

etc: FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := etc
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

posbuild_philosophers_dinner:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 85):
		@echo " done!"

runtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 69):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)

cleantest: cleanapps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 77):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;

run: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 23):
		$(MAKE) run1

prebuild_philosophers_dinner:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := prebuild_philosophers_dinner
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'makefile', line 83):
		@echo -n "Building $(APPLICATION) ..."

clean: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 95):
		$(MAKE) clean1

veryclean: clean cleanapps cleantest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 109):
		(cd tools && $(MAKECLEAN))
		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;

img: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

dist: veryclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		$(CLEAN) $(ETC)/license.mk
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
		$(CLEAN) $(ETC)/license.as

flash: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 46):
		$(MAKE) flash1

run1: etc img/philosophers_dinner.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 27):
		(cd img && $(MAKE) run1)
		

clean1: FORCE
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := clean1
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
#  recipe to execute (from 'makefile', line 99):
		(cd etc && $(MAKECLEAN))
		(cd app && $(MAKECLEAN))
		(cd src && $(MAKECLEAN))
		(cd img && $(MAKECLEAN))
		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;

tools: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

flash1: all1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 50):
		(cd img && $(MAKE) flash)

cleanapps: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 106):
		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)

prerun_philosophers_dinner:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 89):
		@echo "Running $(APPLICATION):"

linktest: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 74):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 78 / storage = 658 B / avg = 8 B
# current buf: size = 8162 B / used = 658 B / count = 78 / avg = 8 B

# strcache performance: lookups = 201 / hit rate = 61%
# hash-table stats:
# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
# Finished Make data base on Sat Jun 25 13:00:34 2022

# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
(cd etc && make --print-directory)
 
# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:35 2022

# Variables

# makefile (from '../makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from '../makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from '../makedefs', line 21)
LMACHNAME := mach
# makefile (from '../makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 311)
LINK := ln -sf
# makefile (from '../makedefs', line 329)
SHELL := bash
# makefile (from '../makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from '../makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from '../makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from '../makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from '../makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from '../makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from '../makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from '../makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from '../makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from '../makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 1)
MAKEFILE_LIST :=  makefile ../makedefs
# makefile (from '../makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from '../makedefs', line 310)
INSTALL := install
 
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from '../makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from '../makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from '../makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from '../makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '../makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from '../makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from '../makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from '../makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from '../makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from '../makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from '../makedefs', line 273)
TLD := gcc
# makefile (from '../makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from '../makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from '../makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from '../makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from '../makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from '../makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from '../makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from '../makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from '../makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from '../makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from '../makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from '../makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from '../makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from '../makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from '../makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from '../makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from '../makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from '../makedefs', line 302)
DD := dd
# makefile (from '../makedefs', line 230)
riscv_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '../makedefs', line 22)
LSYSNAME := sys
# makefile (from '../makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from '../makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from '../makedefs', line 121)
pc_FLASHER := 
# makefile (from '../makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from '../makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from '../makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from '../makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from '../makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from '../makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=hello
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from '../makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from '../makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from '../makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from '../makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from '../makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 2
# makefile (from '../makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from '../makedefs', line 316)
MAKE := make --print-directory
# environment
SHLVL = 3
# makefile (from '../makedefs', line 299)
CLEAN := rm -f
# makefile (from '../makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from '../makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from '../makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from '../makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile
.DEFAULT_GOAL := all
# makefile (from '../makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from '../makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from '../makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from '../makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from '../makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from '../makedefs', line 236)
atmega_EMULATOR = 
# environment
OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 84)
BOOT_ROM = 
# makefile (from '../makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from '../makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from '../makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from '../makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from '../makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from '../makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from '../makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from '../makedefs', line 245)
 
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from '../makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from '../makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from '../makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 23)
LINITNAME := init
# makefile (from '../makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from '../makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from '../makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from '../makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from '../makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from '../makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from '../makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from '../makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from '../makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from '../makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from '../makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from '../makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from '../makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from '../makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from '../makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from '../makedefs', line 335)
TEE := tee
# makefile (from '../makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from '../makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from '../makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from '../makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from '../makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from '../makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from '../makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from '../makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from '../makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from '../makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from '../makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from '../makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from '../makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from '../makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = hello
# makefile (from '../makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from '../makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from '../makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from '../makedefs', line 343)
TOUCH := touch
# makefile (from '../makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# environment
LANG = C
# makefile (from '../makedefs', line 340)
TERM := konsole -e
# makefile (from '../makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from '../makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from '../makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from '../makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 14897): 4 files, 4 impossibilities.
# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
# .. (device 2080, inode 1652): 19 files, 2 impossibilities.

# 31 files, 8 impossibilities in 3 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from '../makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from '../makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from '../makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from '../makedefs', line 357):
 
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from '../makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from '../makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from '../makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from '../makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from '../makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from '../makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from '../makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from '../makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from '../makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from '../makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from '../makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from '../makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from '../makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from '../makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from '../makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from '../makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:44:06.8804869
#  File has been updated.
#  Successfully updated.

config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := config
# automatic
# % := 
# automatic
# * := 
# automatic
# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# | := 
# automatic
# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
#  recipe to execute (from 'makefile', line 14):
		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
	  		

all: /home/felipe/git/UFSC/SO-II/ine5424/app/hello/hello_traits.h config eposcfg eposcc.conf eposmkbi.conf
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/133=0%

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.

/home/felipe/git/UFSC/SO-II/ine5424/app/hello/hello_traits.h:
#  Implicit rule search has not been done.
#  Last modified 2022-06-13 09:44:57.3683429
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefile', line 8):
		$(error Missing traits file $@ !)

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1785899
#  File has been updated.
#  Successfully updated.

# Not a target:
../makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean: /home/felipe/git/UFSC/SO-II/ine5424/app/hello/hello_traits.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 56):
		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
		$(CLEAN) *.conf

eposmkbi.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
		@echo "NODE_ID=$(NODE_ID)" >> $@
		@echo "UUID=$(UUID)" >> $@

eposcfg: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		(cd $(TLS)/eposcfg && $(MAKE) clean all)

eposcc.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 25):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 75 / storage = 864 B / avg = 11 B
# current buf: size = 8162 B / used = 864 B / count = 75 / avg = 11 B

# strcache performance: lookups = 136 / hit rate = 44%
# hash-table stats:
# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
# Finished Make data base on Sat Jun 25 13:00:35 2022

# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:35 2022

# Variables

# makefile (from 'makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from 'makedefs', line 21)
LMACHNAME := mach
# makefile (from 'makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 311)
LINK := ln -sf
# makefile (from 'makedefs', line 329)
SHELL := bash
# makefile (from 'makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from 'makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from 'makedefs', line 300)
CLEANDIR := rm -rf
 
# makefile (from 'makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from 'makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from 'makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from 'makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from 'makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from 'makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from 'makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 1)
MAKEFILE_LIST :=  makefile makedefs
# makefile (from 'makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from 'makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from 'makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from 'makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'makefile', line 55)
TESTS := active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makefile', line 60)
UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from 'makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from 'makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from 'makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from 'makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from 'makedefs', line 273)
TLD := gcc
# makefile (from 'makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from 'makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from 'makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from 'makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from 'makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from 'makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from 'makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from 'makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from 'makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from 'makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from 'makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from 'makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from 'makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from 'makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from 'makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from 'makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'makedefs', line 302)
DD := dd
# makefile (from 'makedefs', line 230)
riscv_IMG_SUFFIX := .img
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'makedefs', line 22)
LSYSNAME := sys
# makefile (from 'makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from 'makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from 'makedefs', line 121)
pc_FLASHER := 
# makefile (from 'makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from 'makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from 'makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# makefile (from 'makefile', line 58)
TESTS_COMPILED := $(subst ,, )
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from 'makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from 'makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=hello
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from 'makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from 'makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from 'makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from 'makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 1
# makefile (from 'makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from 'makedefs', line 316)
MAKE := make --print-directory
# default
MAKECMDGOALS := clean1 prebuild_hello all1 posbuild_hello
# environment
SHLVL = 2
# makefile (from 'makedefs', line 299)
CLEAN := rm -f
# makefile (from 'makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from 'makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from 'makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from 'makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile (from 'makefile', line 56)
TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile
.DEFAULT_GOAL := all
# makefile (from 'makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from 'makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from 'makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from 'makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from 'makedefs', line 236)
atmega_EMULATOR = 
# makefile (from 'makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# makefile (from 'makedefs', line 84)
BOOT_ROM = 
# makefile (from 'makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from 'makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from 'makedefs', line 106)
 
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from 'makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from 'makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from 'makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from 'makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from 'makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from 'makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from 'makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from 'makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 23)
LINITNAME := init
# makefile (from 'makefile', line 59)
TESTS_FINISHED := 
# makefile (from 'makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from 'makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from 'makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from 'makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from 'makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from 'makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from 'makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from 'makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from 'makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from 'makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from 'makefile', line 61)
UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from 'makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from 'makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from 'makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from 'makedefs', line 335)
TEE := tee
# makefile (from 'makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from 'makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from 'makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from 'makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from 'makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from 'makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from 'makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from 'makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from 'makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from 'makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from 'makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from 'makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from 'makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = hello
# makefile (from 'makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from 'makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from 'makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from 'makedefs', line 343)
TOUCH := touch
# makefile (from 'makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# makefile (from 'makefile', line 5)
SUBDIRS := etc tools src app img
# environment
LANG = C
# makefile (from 'makedefs', line 340)
TERM := konsole -e
# makefile (from 'makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from 'makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from 'makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from 'makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 1652): 19 files, 8 impossibilities.

# 19 files, 8 impossibilities in 1 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from 'makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from 'makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from 'makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

 
%_test.o: %_test.c
#  recipe to execute (from 'makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from 'makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from 'makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from 'makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from 'makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from 'makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from 'makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from 'makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from 'makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from 'makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from 'makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from 'makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from 'makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from 'makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from 'makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from 'makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from 'makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

prerun_hello:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 89):
		@echo "Running $(APPLICATION):"

all: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		$(MAKE) all1

bin: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 53):
		$(MAKE) APPLICATION=hello etc tools

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: prebuild_hello posbuild_hello prerun_hello
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 66):
		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all1: etc tools src app img
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gittest: buildtest runtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

debug: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
 
#  recipe to execute (from 'makefile', line 36):
		$(MAKE) DEBUG=1 all1 debug1

app: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

test: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 63):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
		

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1985899
#  File has been updated.
#  Successfully updated.

img/hello.img:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 30):
		$(MAKE) $(PRECLEAN) all1
		

src: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

debug1: etc img/hello.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		(cd img && $(MAKE) DEBUG=1 debug)

# Not a target:
makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

etc: FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := etc
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

runtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 69):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)

cleantest: cleanapps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 77):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;

run: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 23):
		$(MAKE) run1

posbuild_hello:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 85):
		@echo " done!"

clean: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 95):
 
		$(MAKE) clean1

veryclean: clean cleanapps cleantest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 109):
		(cd tools && $(MAKECLEAN))
		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;

img: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

dist: veryclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		$(CLEAN) $(ETC)/license.mk
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
		$(CLEAN) $(ETC)/license.as

prebuild_hello:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := prebuild_hello
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'makefile', line 83):
		@echo -n "Building $(APPLICATION) ..."

flash: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 46):
		$(MAKE) flash1

run1: etc img/hello.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 27):
		(cd img && $(MAKE) run1)
		

clean1: FORCE
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := clean1
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
#  recipe to execute (from 'makefile', line 99):
		(cd etc && $(MAKECLEAN))
		(cd app && $(MAKECLEAN))
		(cd src && $(MAKECLEAN))
		(cd img && $(MAKECLEAN))
		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;

tools: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

flash1: all1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 50):
		(cd img && $(MAKE) flash)

cleanapps: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 106):
		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)

linktest: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 74):
 
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=2/116=2%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 78 / storage = 602 B / avg = 7 B
# current buf: size = 8162 B / used = 602 B / count = 78 / avg = 7 B

# strcache performance: lookups = 201 / hit rate = 61%
# hash-table stats:
# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
# Finished Make data base on Sat Jun 25 13:00:35 2022

# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
# make[1]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
(cd etc && make --print-directory)
 
# make[2]: Entering directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:35 2022

# Variables

# makefile (from '../makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from '../makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from '../makedefs', line 21)
LMACHNAME := mach
# makefile (from '../makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 311)
LINK := ln -sf
# makefile (from '../makedefs', line 329)
SHELL := bash
# makefile (from '../makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from '../makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from '../makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from '../makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from '../makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from '../makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from '../makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from '../makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from '../makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from '../makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 1)
MAKEFILE_LIST :=  makefile ../makedefs
# makefile (from '../makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from '../makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from '../makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from '../makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from '../makedefs', line 241)
atmega_DATA_NAME := .data
# environment
 
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from '../makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from '../makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from '../makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from '../makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from '../makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from '../makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from '../makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from '../makedefs', line 273)
TLD := gcc
# makefile (from '../makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from '../makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from '../makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from '../makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from '../makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from '../makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from '../makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from '../makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from '../makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from '../makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from '../makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from '../makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from '../makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from '../makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from '../makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from '../makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from '../makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from '../makedefs', line 302)
DD := dd
# makefile (from '../makedefs', line 230)
riscv_IMG_SUFFIX := .img
# makefile (from '../makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '../makedefs', line 22)
LSYSNAME := sys
# makefile (from '../makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from '../makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424/etc
# makefile (from '../makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from '../makedefs', line 121)
pc_FLASHER := 
# makefile (from '../makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from '../makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from '../makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from '../makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from '../makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from '../makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=alarm
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from '../makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from '../makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from '../makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from '../makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from '../makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from '../makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 2
# makefile (from '../makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from '../makedefs', line 316)
MAKE := make --print-directory
# environment
SHLVL = 3
# makefile (from '../makedefs', line 299)
CLEAN := rm -f
# makefile (from '../makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from '../makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from '../makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from '../makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile
.DEFAULT_GOAL := all
# makefile (from '../makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from '../makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from '../makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from '../makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from '../makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from '../makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from '../makedefs', line 236)
atmega_EMULATOR = 
# environment
OLDPWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 84)
BOOT_ROM = 
# makefile (from '../makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from '../makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from '../makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from '../makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from '../makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from '../makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from '../makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from '../makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from '../makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from '../makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from '../makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from '../makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from '../makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from '../makedefs', line 23)
LINITNAME := init
# makefile (from '../makedefs', line 72)
 
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from '../makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from '../makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from '../makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from '../makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from '../makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from '../makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from '../makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from '../makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from '../makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from '../makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from '../makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from '../makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from '../makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from '../makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from '../makedefs', line 335)
TEE := tee
# makefile (from '../makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from '../makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from '../makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from '../makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from '../makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from '../makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from '../makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from '../makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from '../makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from '../makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from '../makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from '../makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from '../makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from '../makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = alarm
# makefile (from '../makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from '../makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from '../makedefs', line 246)
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from '../makedefs', line 343)
TOUCH := touch
# makefile (from '../makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# environment
LANG = C
# makefile (from '../makedefs', line 340)
TERM := konsole -e
# makefile (from '../makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from '../makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from '../makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from '../makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=235/1024=23%, Rehash=0, Collisions=126/735=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 14897): 4 files, 4 impossibilities.
# /home/felipe/git/UFSC/SO-II/ine5424/include/system (device 2080, inode 16463): 8 files, 2 impossibilities.
# .. (device 2080, inode 1652): 19 files, 2 impossibilities.

# 31 files, 8 impossibilities in 3 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from '../makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from '../makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from '../makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from '../makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from '../makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from '../makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from '../makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from '../makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from '../makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from '../makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from '../makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from '../makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from '../makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from '../makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from '../makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from '../makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from '../makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from '../makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from '../makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from '../makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
/home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:44:06.8804869
#  File has been updated.
#  Successfully updated.

config: /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := config
# automatic
# % := 
# automatic
# * := 
# automatic
# + := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# | := 
# automatic
# < := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ^ := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# automatic
# ? := /home/felipe/git/UFSC/SO-II/ine5424/include/system/config.h
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=14/141=10%
#  recipe to execute (from 'makefile', line 14):
		sed -e 's/^#define SMOD.*$$/#define SMOD $(SMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define ARCH.*$$/#define ARCH $(ARCH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MACH.*$$/#define MACH $(MACH)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define MMOD.*$$/#define MMOD $(MMOD)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define APPL.*$$/#define APPL $(APPLICATION)/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mode_.*__$$/#define __$(SMOD)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __arch_.*__$$/#define __$(ARCH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mach_.*__$$/#define __$(MACH)__/' -i $(INCLUDE)/system/config.h
		sed -e 's/^#define __mmod_.*__$$/#define __$(MMOD)__/' -i $(INCLUDE)/system/config.h
	  		

all: /home/felipe/git/UFSC/SO-II/ine5424/app/alarm/alarm_traits.h config eposcfg eposcc.conf eposmkbi.conf
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/133=0%

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
makefile:
#  Implicit rule search has been done.
 
#  Last modified 2022-06-02 14:19:05.1785899
#  File has been updated.
#  Successfully updated.

# Not a target:
../makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/home/felipe/git/UFSC/SO-II/ine5424/app/alarm/alarm_traits.h:
#  Implicit rule search has not been done.
#  Last modified 2022-06-20 19:41:17.1781797
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefile', line 8):
		$(error Missing traits file $@ !)

clean: /home/felipe/git/UFSC/SO-II/ine5424/app/alarm/alarm_traits.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 56):
		sed -e '/^#define SMOD.*$$/{:1;/^#define.*APPL.*$$/!{N;N;N;N;N;N;N;N;b 1}' \
		        -e 's/.*/#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__/g}' -i $(INCLUDE)/system/config.h
		$(CLEAN) *.conf

eposmkbi.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "CPUS=$(shell $(BIN)/eposcfg CPUS)" >> $@
		@echo "CLOCK=$(shell $(BIN)/eposcfg CLOCK)" >> $@
		@echo "WORD_SIZE=$(shell $(BIN)/eposcfg WORD_SIZE)" >> $@
		@echo "ENDIANESS=$(shell $(BIN)/eposcfg ENDIANESS)" >> $@
		@echo "RAM_BASE=$(shell $(BIN)/eposcfg RAM_BASE)" >> $@
		@echo "RAM_TOP=$(shell $(BIN)/eposcfg RAM_TOP)" >> $@
		@echo "MIO_BASE=$(shell $(BIN)/eposcfg MIO_BASE)" >> $@
		@echo "MIO_TOP=$(shell $(BIN)/eposcfg MIO_TOP)" >> $@
		@echo "NODE_ID=$(NODE_ID)" >> $@
		@echo "UUID=$(UUID)" >> $@

eposcfg: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		(cd $(TLS)/eposcfg && $(MAKE) clean all)

eposcc.conf: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 25):
		@echo "SMOD=$(shell $(BIN)/eposcfg MODE)" > $@
		@echo "ARCH=$(shell $(BIN)/eposcfg ARCH)" >> $@
		@echo "MACH=$(shell $(BIN)/eposcfg MACH)" >> $@
		@echo "MMOD=$(shell $(BIN)/eposcfg MMOD)" >> $@
		@echo "TOOLS_PREFIX=$(COMP_PREFIX)" >> $@
		@echo "APP_CODE=$(shell $(BIN)/eposcfg APP_CODE)" >> $@
		@echo "APP_DATA=$(shell $(BIN)/eposcfg APP_DATA)" >> $@
		@echo "SETUP=$(shell $(BIN)/eposcfg SETUP)" >> $@
		@echo "BOOT_STACK=$(shell $(BIN)/eposcfg BOOT_STACK)" >> $@
		@echo "MACH_CC_FLAGS='$(MACH_CC_FLAGS)'" >> $@
		@echo "MACH_LD_FLAGS='$(MACH_LD_FLAGS)'" >> $@
		@echo "MACH_CODE_NAME='$(MACH_CODE_NAME)'" >> $@
		@echo "MACH_DATA_NAME='$(MACH_DATA_NAME)'" >> $@

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/61=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 75 / storage = 864 B / avg = 11 B
# current buf: size = 8162 B / used = 864 B / count = 75 / avg = 11 B

# strcache performance: lookups = 136 / hit rate = 44%
# hash-table stats:
# Load=75/8192=1%, Rehash=0, Collisions=7/136=5%
# Finished Make data base on Sat Jun 25 13:00:35 2022

# make[2]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424/etc'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Jun 25 13:00:35 2022

# Variables

# makefile (from 'makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from 'makedefs', line 21)
LMACHNAME := mach
# makefile (from 'makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 311)
LINK := ln -sf
# makefile (from 'makedefs', line 329)
SHELL := bash
# makefile (from 'makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from 'makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /usr/bin/make
# makefile (from 'makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from 'makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from 'makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from 'makedefs', line 229)
riscv_DATA_NAME := .data
# makefile (from 'makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from 'makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from 'makedefs', line 278)
 
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from 'makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 1)
MAKEFILE_LIST :=  makefile makedefs
# makefile (from 'makedefs', line 248)
MACH_CODE_NAME := .init
# makefile (from 'makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from 'makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from 'makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'makefile', line 55)
TESTS := active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makefile', line 60)
UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 228)
riscv_CODE_NAME := .init
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from 'makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from 'makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from 'makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from 'makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from 'makedefs', line 273)
TLD := gcc
# makefile (from 'makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from 'makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from 'makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from 'makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from 'makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from 'makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from 'makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from 'makedefs', line 227)
riscv_MAGIC := --nmagic
# makefile (from 'makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from 'makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from 'makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from 'makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from 'makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from 'makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from 'makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from 'makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'makedefs', line 302)
DD := dd
# makefile (from 'makedefs', line 230)
riscv_IMG_SUFFIX := .img
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'makedefs', line 22)
LSYSNAME := sys
# makefile (from 'makedefs', line 251)
MACH_DEBUGGER := konsole -e gdb-multiarch -ex "set architecture riscv:rv64" -ex "target remote:1235" -ex "set confirm off"
# makefile (from 'makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from 'makedefs', line 121)
pc_FLASHER := 
# makefile (from 'makedefs', line 254)
MACH_IMGSUFF := .img
# default
.LOADED := 
# makefile (from 'makedefs', line 247)
MACH_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# makefile (from 'makedefs', line 212)
riscv_AS_FLAGS := -march=rv64gc -mabi=lp64d
# environment
WSL_INTEROP = /run/WSL/2387_interop
# makefile (from 'makefile', line 58)
TESTS_COMPILED := $(subst ,, )
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from 'makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from 'makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# automatic
-*-command-variables-*- := APPLICATION=alarm
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from 'makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from 'makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 244)
MACH_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from 'makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from 'makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 1
# makefile (from 'makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from 'makedefs', line 316)
MAKE := make --print-directory
# default
 
MAKECMDGOALS := clean1 prebuild_alarm all1 posbuild_alarm
# environment
SHLVL = 2
# makefile (from 'makedefs', line 299)
CLEAN := rm -f
# makefile (from 'makedefs', line 286)
AS = $(COMP_PREFIX)as
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from 'makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from 'makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from 'makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile (from 'makefile', line 56)
TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile
.DEFAULT_GOAL := all
# makefile (from 'makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from 'makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from 'makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from 'makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from 'makedefs', line 236)
atmega_EMULATOR = 
# makefile (from 'makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# makefile (from 'makedefs', line 84)
BOOT_ROM = 
# makefile (from 'makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from 'makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from 'makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from 'makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from 'makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from 'makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from 'makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from 'makedefs', line 245)
MACH_CXX_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from 'makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from 'makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from 'makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 23)
LINITNAME := init
# makefile (from 'makefile', line 59)
TESTS_FINISHED := 
# makefile (from 'makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from 'makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from 'makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from 'makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from 'makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from 'makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from 'makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from 'makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from 'makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from 'makedefs', line 253)
MACH_MAGIC := --nmagic
# makefile (from 'makefile', line 61)
UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 249)
MACH_DATA_NAME := .data
# makefile (from 'makedefs', line 214)
riscv_EMULATOR = qemu-system-riscv64 $(QEMU_DEBUG) -machine sifive_u -smp 2 -m $(MEM_SIZE)k -serial mon:stdio -bios none -nographic -no-reboot $(BOOT_ROM) -kernel 
# makefile (from 'makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from 'makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from 'makedefs', line 335)
TEE := tee
# makefile (from 'makedefs', line 226)
riscv_FLASHER := 
# environment
LC_ALL = C
# makefile (from 'makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from 'makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from 'makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from 'makedefs', line 52)
TRAITS = $(APP)/$(APPLICATION)/$(APPLICATION)_traits.h
# makefile (from 'makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from 'makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from 'makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from 'makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from 'makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from 'makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from 'makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# makefile (from 'makedefs', line 225)
riscv_DEBUGGER := gdb-multiarch -ex "set architecture riscv:rv64"
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# command line
APPLICATION = alarm
# makefile (from 'makedefs', line 211)
riscv_CC_FLAGS := -march=rv64gc -mabi=lp64d -Wl, -mno-relax -mcmodel=medany
# makefile (from 'makedefs', line 213)
riscv_LD_FLAGS := -m elf64lriscv_lp64f --no-relax
# default
.RECIPEPREFIX := 
# makefile (from 'makedefs', line 246)
 
MACH_AS_FLAGS := -march=rv64gc -mabi=lp64d
# makefile (from 'makedefs', line 343)
TOUCH := touch
# makefile (from 'makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# makefile (from 'makefile', line 5)
SUBDIRS := etc tools src app img
# environment
LANG = C
# makefile (from 'makedefs', line 340)
TERM := konsole -e
# makefile (from 'makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from 'makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from 'makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from 'makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=242/1024=24%, Rehash=0, Collisions=113/670=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 1652): 19 files, 8 impossibilities.

# 19 files, 8 impossibilities in 1 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from 'makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from 'makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from 'makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from 'makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from 'makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from 'makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from 'makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from 'makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from 'makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from 'makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from 'makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from 'makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from 'makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from 'makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
#  recipe to execute (from 'makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from 'makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from 'makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from 'makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from 'makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from 'makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

img/alarm.img:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 30):
		$(MAKE) $(PRECLEAN) all1
		

all: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 11):
		$(MAKE) all1

bin: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 53):
		$(MAKE) APPLICATION=hello etc tools

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.
 

.PHONY: prebuild_alarm posbuild_alarm prerun_alarm
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 66):
		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all1: etc tools src app img
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/6=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gittest: buildtest runtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

debug: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 36):
		$(MAKE) DEBUG=1 all1 debug1

app: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

test: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 63):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
		

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1985899
#  File has been updated.
#  Successfully updated.

src: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

posbuild_alarm:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 85):
		@echo " done!"

debug1: etc img/alarm.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		(cd img && $(MAKE) DEBUG=1 debug)

# Not a target:
makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

prebuild_alarm:
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := prebuild_alarm
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'makefile', line 83):
		@echo -n "Building $(APPLICATION) ..."

etc: FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
 
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := etc
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/15=13%
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

runtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 69):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)

cleantest: cleanapps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 77):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;

run: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 23):
		$(MAKE) run1

clean: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 95):
		$(MAKE) clean1

veryclean: clean cleanapps cleantest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 109):
		(cd tools && $(MAKECLEAN))
		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;

img: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

dist: veryclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		$(CLEAN) $(ETC)/license.mk
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
		$(CLEAN) $(ETC)/license.as

flash: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 46):
		$(MAKE) flash1

run1: etc img/alarm.img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 27):
		(cd img && $(MAKE) run1)
		

clean1: FORCE
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := clean1
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/17=6%
#  recipe to execute (from 'makefile', line 99):
		(cd etc && $(MAKECLEAN))
		(cd app && $(MAKECLEAN))
		(cd src && $(MAKECLEAN))
		(cd img && $(MAKECLEAN))
		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;

prerun_alarm:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 89):
		@echo "Running $(APPLICATION):"

tools: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

flash1: all1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 50):
		(cd img && $(MAKE) flash)

cleanapps: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 106):
		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)

linktest: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 74):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=3/116=3%
# VPATH Search Paths

# No 'vpath' search paths.

 
# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 78 / storage = 602 B / avg = 7 B
# current buf: size = 8162 B / used = 602 B / count = 78 / avg = 7 B

# strcache performance: lookups = 201 / hit rate = 61%
# hash-table stats:
# Load=78/8192=1%, Rehash=0, Collisions=1/201=0%
# Finished Make data base on Sat Jun 25 13:00:35 2022

# make[1]: Leaving directory '/home/felipe/git/UFSC/SO-II/ine5424'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Sat Jun 25 13:00:35 2022

# Variables

# makefile (from 'makedefs', line 38)
PRECLEAN := clean1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION:BASH_ENV/u:WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# makefile (from 'makedefs', line 12)
SRC := /home/felipe/git/UFSC/SO-II/ine5424/src
# makefile (from 'makedefs', line 21)
LMACHNAME := mach
# makefile (from 'makedefs', line 19)
TST := /home/felipe/git/UFSC/SO-II/ine5424/tests
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makedefs', line 294)
CPPFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 311)
LINK := ln -sf
# makefile (from 'makedefs', line 329)
SHELL := bash
# makefile (from 'makedefs', line 14)
BIN := /home/felipe/git/UFSC/SO-II/ine5424/bin
# makefile (from 'makedefs', line 75)
LIBSYS = $(LIB)/lib$(LSYSNAME)_$(MMOD).a
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin/code
# makefile (from 'makedefs', line 300)
CLEANDIR := rm -rf
# makefile (from 'makedefs', line 277)
ACC = $(BIN)/eposcc $(MACH_CC_FLAGS)  -c -ansi -O
# environment
SUDO_COMMAND = /usr/sbin/enter-systemd-namespace 
# makefile (from 'makedefs', line 92)
IMAGE_ADDR = $(shell $(BIN)/eposcfg IMAGE 2> /dev/null)
# environment
HUSHLOGIN = FALSE
# makefile (from 'makedefs', line 6)
TOLOWER = $(shell echo $(1) | tr A-Z a-z)
# makefile (from 'makedefs', line 102)
armv8_COMP_PREFIX := /usr/bin/aarch64-linux-gnu-
# makefile (from 'makedefs', line 278)
ACCFLAGS = $(MACH_CXX_FLAGS)
# makefile (from 'makedefs', line 73)
LIBARCH = $(LIB)/lib$(LARCHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 1)
MAKEFILE_LIST :=  makefile makedefs
# makefile (from 'makedefs', line 248)
MACH_CODE_NAME := 
# makefile (from 'makedefs', line 310)
INSTALL := install
# environment
PRE_NAMESPACE_PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'makedefs', line 10)
TOP := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 327)
OBJDUMPFLAGS := 
# makefile (from 'makedefs', line 239)
atmega_MAGIC := --omagic
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'makedefs', line 241)
atmega_DATA_NAME := .data
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'makedefs', line 289)
CC = $(COMP_PREFIX)gcc -ansi -c
# makefile (from 'makedefs', line 109)
ARCH_ENDIANESS = $(ARCH_$(call GETTK,ENDIANESS,$(ARCH_TRAITS)))
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'makefile', line 55)
TESTS := active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makefile', line 60)
UNFINISHED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'makedefs', line 13)
APP := /home/felipe/git/UFSC/SO-II/ine5424/app
# makefile (from 'makedefs', line 293)
CPP = $(COMP_PREFIX)gcc -E
# environment
VSCODE_CWD = /
# makefile (from 'makedefs', line 110)
ARCH_WORD_SIZE = $(call GETTK,WORD_SIZE,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 242)
atmega_IMG_SUFFIX := .hex
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/felipe/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/ProgramData/Oracle/Java/javapath:/mnt/c/Users/fecam/AppData/Local/Yarn:/mnt/c/Program Files (x86)/Rockwell Software/RSCommon:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/MongoDB/Server/4.4/bin:/mnt/c/Program Files/MongoDB/Tools/100/bin:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files/nodejs/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Gradle/gradle-7.4.2/bin:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/fecam/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/fecam/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Program Files/JetBrains/PyCharm 2020.3.3/bin:/mnt/c/Users/fecam/AppData/Roaming/cabal/bin:/mnt/c/tools/ghc-9.0.1/bin:/mnt/c/tools/msys64:/mnt/c/Users/fecam/AppData/Local/Yarn/bin:/mnt/c/Users/fecam/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin:/mnt/c/Users/fecam/AppData/Roaming/npm:/mnt/c/Program Files/heroku/bin:/snap/bin
# makefile (from 'makedefs', line 264)
TCC := gcc -ansi -c -Werror
# makefile (from 'makedefs', line 333)
TCPDUMP := tcpdump -tttttennvvvXXr
# makefile (from 'makedefs', line 273)
TLD := gcc
# makefile (from 'makedefs', line 280)
ALDFLAGS = --gc-sections $(MACH_MAGIC)
# makefile (from 'makedefs', line 265)
TCCFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# environment
XDG_RUNTIME_DIR = /run/user/1000
 
# makefile (from 'makedefs', line 122)
pc_MAGIC := --nmagic
# makefile (from 'makedefs', line 234)
atmega_AS_FLAGS := -mmcu=atmega128
# makefile (from 'makedefs', line 124)
pc_DATA_NAME := .data
# makefile (from 'makedefs', line 66)
SMOD = $(call TOLOWER,$(call GETTK,MODE,$(TRAITS)))
# makefile (from 'makedefs', line 81)
LINIT = $(LINITNAME)_$(MMOD)
# makefile (from 'makedefs', line 70)
CPUS = $(shell $(BIN)/eposcfg CPUS 2> /dev/null)
# makefile (from 'makedefs', line 24)
LUTILNAME := util
# environment
PRE_NAMESPACE_PWD = /mnt/c/Users/fecam/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'makedefs', line 317)
MAKECLEAN := make --ignore-errors clean
# makefile (from 'makedefs', line 283)
AR = $(COMP_PREFIX)ar
# makefile (from 'makedefs', line 250)
MACH_EMULATOR = $($(MACH)_EMULATOR)
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-773fb601-378b-4ca0-9cb6-2c3090c12b66.sock
# makefile (from 'makedefs', line 274)
TLDFLAGS = $(CC_M_FLAG)
# makefile (from 'makedefs', line 15)
LIB := /home/felipe/git/UFSC/SO-II/ine5424/lib
# makefile (from 'makedefs', line 252)
MACH_FLASHER = $($(MACH)_FLASHER)
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makedefs', line 125)
pc_IMG_SUFFIX := .img
# makefile (from 'makedefs', line 97)
UUID = $(shell cat /proc/sys/kernel/random/uuid | sed 's/-//g')
# makefile (from 'makedefs', line 321)
MKBI = $(BIN)/eposmkbi $(if $(findstring s, $(word 1, $(MAKEFLAGS))), -s) $(EPOS)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'makedefs', line 101)
armv7_COMP_PREFIX := /usr/bin/arm-none-eabi-
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'makedefs', line 302)
DD := dd
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'makedefs', line 22)
LSYSNAME := sys
# makefile (from 'makedefs', line 251)
MACH_DEBUGGER := xterm-256color  -ex "target remote:1235" -ex "set confirm off"
# makefile (from 'makedefs', line 20)
LARCHNAME := arch
# environment
PWD = /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 324)
OBJCOPYFLAGS := -R .note -R .comment
# makefile (from 'makedefs', line 121)
pc_FLASHER := 
# makefile (from 'makedefs', line 254)
MACH_IMGSUFF := 
# default
.LOADED := 
# makefile (from 'makedefs', line 247)
MACH_LD_FLAGS := 
# environment
WSL_INTEROP = /run/WSL/2387_interop
# makefile (from 'makefile', line 58)
TESTS_COMPILED := $(subst ,, )
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
WT_SESSION = 
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/felipe
# makefile (from 'makedefs', line 240)
atmega_CODE_NAME := .init
# makefile (from 'makedefs', line 68)
MACH = $(call TOLOWER,$(call GETTK,MACHINE,$(TRAITS)))
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'makedefs', line 267)
TCXX := g++ -c -ansi -fno-exceptions -std=c++14
# environment
SUDO_USER = felipe
# environment
LOGNAME = felipe
# environment
SUDO_GID = 1000
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'makedefs', line 76)
LIBINIT = $(LIB)/lib$(LINITNAME)_$(MMOD).a
# makefile (from 'makedefs', line 313)
LD = $(COMP_PREFIX)ld
# makefile (from 'makedefs', line 271)
TCPPFLAGS := -I/home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 244)
MACH_CC_FLAGS :=  -O -nostdinc --no-stack-protector --no-pie -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 279)
ALD = $(BIN)/eposcc --$(SMOD) --no-warn-mismatch
# makefile (from 'makedefs', line 304)
DEBUGGER = $(MACH_DEBUGGER)
# makefile (from 'makedefs', line 90)
MEM_SIZE = $(shell $(BIN)/eposcfg MEM_SIZE_KB 2> /dev/null)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makedefs', line 111)
ARCH_CLOCK = $(call GETTK,CLOCK,$(ARCH_TRAITS))
# makefile (from 'makedefs', line 27)
APPLICATIONS := uart producer_consumer pmu philosophers_dinner hello alarm
# environment
MAKELEVEL := 0
# makefile (from 'makedefs', line 238)
atmega_FLASHER = $(TLS)/eposflash/eposflash-$(MMOD)
# makefile (from 'makedefs', line 316)
MAKE := make --print-directory
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# makefile (from 'makedefs', line 299)
CLEAN := rm -f
# makefile (from 'makedefs', line 286)
AS = $(COMP_PREFIX)as
# makefile (from 'makedefs', line 100)
ia32_COMP_PREFIX := /usr/bin/x86_64-linux-gnu-
# environment
SUDO_UID = 1000
# makefile (from 'makedefs', line 96)
SYS_DATA_ADDR = $(shell $(BIN)/eposcfg SYS_DATA 2> /dev/null)
# makefile (from 'makedefs', line 123)
pc_CODE_NAME := .init
# makefile (from 'makedefs', line 287)
ASFLAGS = $(MACH_AS_FLAGS)
# environment
XDG_SESSION_ID = c2
# environment
USER = felipe
# makefile (from 'makefile', line 56)
 
TESTS_TO_RUN := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile
.DEFAULT_GOAL := all
# makefile (from 'makedefs', line 11)
INCLUDE := /home/felipe/git/UFSC/SO-II/ine5424/include
# makefile (from 'makedefs', line 290)
CCFLAGS = $(MACH_CC_FLAGS) -I$(INCLUDE)
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# makefile (from 'makedefs', line 69)
MMOD = $(call TOLOWER,$(call GETTK,MODEL,$(TRAITS)))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'makedefs', line 79)
LMACH = $(LMACHNAME)_$(MMOD)
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/fecam/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# makefile (from 'makedefs', line 284)
ARFLAGS := rcs
# default
MAKE_COMMAND := make
# makefile (from 'makedefs', line 117)
pc_AS_FLAGS := --32
# makefile (from 'makedefs', line 18)
TLS := /home/felipe/git/UFSC/SO-II/ine5424/tools
# makefile (from 'makedefs', line 236)
atmega_EMULATOR = 
# makefile (from 'makedefs', line 103)
rv32_COMP_PREFIX := /usr/local/rv32/bin/riscv32-unknown-linux-gnu-
# makefile (from 'makedefs', line 86)
BOOT_ROM = -device loader,file=$(APPLICATION).img,addr=$(IMAGE_ADDR),force-raw=on 
# makefile (from 'makedefs', line 94)
INIT_ADDR = $(shell $(BIN)/eposcfg INIT 2> /dev/null)
# makefile (from 'makedefs', line 4)
GETTK = $(shell sed -n -e '/^.* $(1)[ ]*=.*;.*$$/s/^.* =[ ]*\(.*\)[ ]*;.*$$/\1/p' $(2) | head -1 2> /dev/null)
# default
.VARIABLES := 
# makefile (from 'makedefs', line 106)
COMP_PREFIX = $($(ARCH)_COMP_PREFIX)
# automatic
*F = $(notdir $*)
# makefile (from 'makedefs', line 16)
IMG := /home/felipe/git/UFSC/SO-II/ine5424/img
# makefile (from 'makedefs', line 71)
NODES = $(shell $(BIN)/eposcfg NODES 2> /dev/null)
# makefile (from 'makedefs', line 67)
ARCH = $(call TOLOWER,$(call GETTK,ARCHITECTURE,$(TRAITS)))
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MAIL = /var/mail/felipe
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'makedefs', line 318)
MAKETEST := make --no-print-directory --silent --stop
# makefile (from 'makedefs', line 326)
OBJDUMP = $(COMP_PREFIX)objdump
# makefile (from 'makedefs', line 245)
MACH_CXX_FLAGS :=  -O -std=c++14 -nostdinc --no-exceptions --no-rtti --no-use-cxa-atexit --no-unwind-tables --no-asynchronous-unwind-tables --no-stack-protector --no-pie --data-sections --function-sections -Wall -Werror -Wno-builtin-declaration-mismatch -Wno-array-bounds -Wno-attribute-alias -Wno-placement-new -Wno-class-memaccess -Wno-address-of-packed-member -Wno-stringop-overflow
# makefile (from 'makedefs', line 77)
LIBUTIL = $(LIB)/lib$(LUTILNAME)_$(MMOD).a
# automatic
+F = $(notdir $+)
# makefile (from 'makedefs', line 237)
atmega_DEBUGGER = 
# makefile (from 'makedefs', line 59)
MACH_TRAITS = $(INCLUDE)/machine/$(MACH)/$(MMOD)_traits.h
# makefile (from 'makedefs', line 74)
LIBMACH = $(LIB)/lib$(LMACHNAME)_$(MMOD).a
# makefile (from 'makedefs', line 9)
EPOS := /home/felipe/git/UFSC/SO-II/ine5424
# makefile (from 'makedefs', line 23)
LINITNAME := init
# makefile (from 'makefile', line 59)
TESTS_FINISHED := 
# makefile (from 'makedefs', line 72)
STIME = $(shell $(BIN)/eposcfg EXPECTED_SIMULATION_TIME 2> /dev/null)
# makefile (from 'makedefs', line 331)
STRIP = $(COMP_PREFIX)strip -R .note -R .comment
# makefile (from 'makedefs', line 82)
LUTIL = $(LUTILNAME)_$(MMOD)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'makedefs', line 235)
atmega_LD_FLAGS := -m avr5
# environment
WT_PROFILE_ID = 
# makefile (from 'makedefs', line 314)
LDFLAGS = $(MACH_LD_FLAGS) -nostdlib -L$(LIB) -Bstatic
# makefile (from 'makedefs', line 17)
ETC := /home/felipe/git/UFSC/SO-II/ine5424/etc
# default
MAKEFILES := 
# makefile (from 'makedefs', line 119)
pc_EMULATOR = qemu-system-i386 $(QEMU_DEBUG) -smp $(CPUS) -m $(MEM_SIZE)k -nographic -no-reboot -drive format=raw,index=0,if=floppy,read-only,file=
# makefile (from 'makedefs', line 112)
CC_M_FLAG = -m$(ARCH_WORD_SIZE)
# makefile (from 'makedefs', line 297)
CXXFLAGS = $(MACH_CXX_FLAGS) -I$(INCLUDE)
# makefile (from 'makedefs', line 268)
TCXXFLAGS = $(CC_M_FLAG) -Wall -O -I$(INCLUDE)
# automatic
<F = $(notdir $<)
# makefile (from 'makedefs', line 253)
MACH_MAGIC := 
# makefile (from 'makefile', line 61)
UNCOMPILED_TESTS := uart producer_consumer pmu philosophers_dinner hello alarm active_test uart_test segment_test pmu_test alarm_test
# makefile (from 'makedefs', line 249)
MACH_DATA_NAME := 
# makefile (from 'makedefs', line 296)
CXX = $(COMP_PREFIX)g++ -c
# makefile (from 'makedefs', line 91)
BOOT_ADDR = $(shell $(BIN)/eposcfg BOOT 2> /dev/null)
# makefile (from 'makedefs', line 335)
TEE := tee
# environment
LC_ALL = C
# makefile (from 'makedefs', line 104)
rv64_COMP_PREFIX := /usr/local/rv64/bin/riscv64-unknown-linux-gnu-
# makefile (from 'makedefs', line 233)
atmega_CC_FLAGS := -mmcu=atmega128 -Wno-inline
# makefile (from 'makedefs', line 78)
LARCH = $(LARCHNAME)_$(MMOD)
# makefile (from 'makedefs', line 54)
TRAITS = $(INCLUDE)/system/traits.h
 
# makefile (from 'makedefs', line 308)
FLASHER = $(MACH_FLASHER)
# makefile (from 'makedefs', line 80)
LSYS = $(LSYSNAME)_$(MMOD)
# makefile (from 'makedefs', line 291)
CCLIB = `$(CC) $(MACH_CC_FLAGS) -print-file-name=`
# makefile (from 'makedefs', line 270)
TCPP := gcc -E
# environment
HOSTTYPE = x86_64
# makefile (from 'makedefs', line 120)
pc_DEBUGGER := gdb
# automatic
^F = $(notdir $^)
# makefile (from 'makedefs', line 323)
OBJCOPY = $(COMP_PREFIX)objcopy
# default
SUFFIXES := 
# makefile (from 'makedefs', line 95)
SYS_CODE_ADDR = $(shell $(BIN)/eposcfg SYS_CODE 2> /dev/null)
# environment
WAYLAND_DISPLAY = wayland-0
# makefile (from 'makedefs', line 118)
pc_LD_FLAGS := -m elf_i386
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# makefile (from 'makedefs', line 246)
MACH_AS_FLAGS := 
# makefile (from 'makedefs', line 343)
TOUCH := touch
# makefile (from 'makedefs', line 306)
EMULATOR = $(MACH_EMULATOR)
# makefile (from 'makefile', line 5)
SUBDIRS := etc tools src app img
# environment
LANG = C
# makefile (from 'makedefs', line 340)
TERM := konsole -e
# makefile (from 'makedefs', line 5)
DBSEC = $(1) 0x$(shell objdump -h $(1) | grep $(2) | tr -s ' ' | cut -d ' ' -f 5 2> /dev/null)
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# makefile (from 'makedefs', line 116)
pc_CC_FLAGS = $(CC_M_FLAG) -Wa,--32
# makefile (from 'makedefs', line 93)
SETUP_ADDR = $(shell $(BIN)/eposcfg SETUP 2> /dev/null)
# environment
MOTD_SHOWN = pam
# makefile (from 'makedefs', line 64)
ARCH_TRAITS = $(INCLUDE)/architecture/$(ARCH)/$(ARCH)_traits.h
# variable set hash-table stats:
# Load=229/1024=22%, Rehash=0, Collisions=107/594=18%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2080, inode 1652): 19 files, 6 impossibilities.

# 19 files, 6 impossibilities in 1 directories.

# Implicit Rules

lib%.o: lib%.cc
#  recipe to execute (from 'makedefs', line 348):
		$(CXX) $(CXXFLAGS) $<

%_test_traits.h: %_test.cc
#  recipe to execute (from 'makedefs', line 351):
		$(INSTALL) -m 755 $(INCLUDE)/system/traits.h $@

%_test.o: %_test.cc
#  recipe to execute (from 'makedefs', line 354):
		$(ACXX) $(ACXXFLAGS) $<

%_test.o: %_test.c
#  recipe to execute (from 'makedefs', line 357):
		$(ACC) $(ACCFLAGS) $<

%_test: %_test.o
#  recipe to execute (from 'makedefs', line 360):
		$(ALD) $(ALDFLAGS) $< -o $@

%.o: %.cc
#  recipe to execute (from 'makedefs', line 363):
		$(CXX) $(CXXFLAGS) $<

%.o: %.c
#  recipe to execute (from 'makedefs', line 366):
		$(CC) $(CCFLAGS) $<

%.s: %.S
#  recipe to execute (from 'makedefs', line 369):
		$(CPP) $(CPPFLAGS) $< -o $@

%.o: %.s
#  recipe to execute (from 'makedefs', line 372):
		$(AS) $(ASFLAGS) $< -o $@

%: %.cc
#  recipe to execute (from 'makedefs', line 375):
		$(CXX) $(CXXFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

%: %.c
#  recipe to execute (from 'makedefs', line 379):
		$(CC) $(CCFLAGS) $<
		$(LD) $(LDFLAGS) %@.o -o $@

(%.o): %.o
#  recipe to execute (from 'makedefs', line 383):
		$(AR) $(ARFLAGS) $@ $^

%.img: %
#  recipe to execute (from 'makedefs', line 386):
		$(MKBI) $@ $<

%.hex: %
#  recipe to execute (from 'makedefs', line 389):
		$(OBJCOPY) -I elf32-$(ARCH_ENDIANESS) -O ihex $< $<.tmp
		$(MKBI) $@ $<.tmp
		$(CLEAN) $<.tmp

%.bin: %.img
 
#  recipe to execute (from 'makedefs', line 394):
		$(OBJCOPY) -O binary $< $@

%.out: %.img
#  recipe to execute (from 'makedefs', line 397):
		$(EMULATOR) $< | $(TEE) $@

%.out: %.bin
#  recipe to execute (from 'makedefs', line 400):
		$(EMULATOR) $< | $(TEE) $@

%.net: %.pcap
#  recipe to execute (from 'makedefs', line 403):
		$(TCPDUMP) $< > $@

%.key: %.cc
#  recipe to execute (from 'makedefs', line 406):
		$(EPOSANL) $<

%.key: %.c
#  recipe to execute (from 'makedefs', line 409):
		$(EPOSANL) $<

# 20 implicit rules, 0 (0.0%) terminal.

# Files

prerun_:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 89):
		@echo "Running $(APPLICATION):"

all: FORCE
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := all
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE
# automatic
# ? := FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=13/24=54%
#  recipe to execute (from 'makefile', line 9):
		$(foreach app,$(APPLICATIONS),$(MAKE) APPLICATION=$(app) $(PRECLEAN) prebuild_$(app) all1 posbuild_$(app);)

bin: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 53):
		$(MAKE) APPLICATION=hello etc tools

# Not a target:
%.o:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

FORCE:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: prebuild_ posbuild_ prerun_
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 66):
		$(foreach tst,$(UNCOMPILED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) || exit;)

.PRECIOUS: %.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all1: etc tools src app img
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gittest: buildtest runtest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

debug: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 34):
 
		$(foreach app,$(APPLICATIONS),$(MAKE) DEBUG=1 APPLICATION=$(app) debug1;)

app: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

test: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 63):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prebuild_$(tst) clean1 all1 posbuild_$(tst) prerun_$(tst) run1 posbuild_$(tst);)
		

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-02 14:19:05.1985899
#  File has been updated.
#  Successfully updated.

src: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

debug1: etc img/
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 40):
		(cd img && $(MAKE) DEBUG=1 debug)

# Not a target:
makedefs:
#  Implicit rule search has been done.
#  Last modified 2022-06-16 14:41:08.0204869
#  File has been updated.
#  Successfully updated.

etc: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

runtest: linktest
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 69):
		$(foreach tst,$(UNFINISHED_TESTS),$(MAKETEST) APPLICATION=$(tst) prerun_$(tst) run1 posbuild_$(tst) || exit;)

cleantest: cleanapps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 77):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)
		$(foreach tst,$(TESTS),cd $(TST)/${tst} && $(MAKE) APPLICATION=$(tst) clean;)
		find $(APP) -maxdepth 1 -type l -exec $(CLEAN) {} \;

posbuild_:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 85):
		@echo " done!"

run: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 21):
		$(foreach app,$(APPLICATIONS),$(MAKE) APPLICATION=$(app) prerun_$(app) run1;)

img/:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 30):
		$(MAKE) $(PRECLEAN) all1
		

clean: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 93):
		$(MAKE) APPLICATION=$(word 1,$(APPLICATIONS)) clean1

veryclean: clean cleanapps cleantest
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 109):
		(cd tools && $(MAKECLEAN))
		find $(BIN) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;
		find $(IMG) -name "*.img" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.bin" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.hex" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.out" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.pcap" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.net" -exec $(CLEAN) {} \;
		find $(IMG) -name "*.log" -exec $(CLEAN) {} \;
		find $(IMG) -maxdepth 1 -type f -perm 755 -exec $(CLEAN) {} \;

img: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

dist: veryclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
		find $(TOP) -name "*.h" -print | xargs sed -i "1r $(ETC)/license.txt"
		find $(TOP) -name "*.cc" -print | xargs sed -i "1r $(ETC)/license.txt"
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.mk
		find $(TOP) -name "makedefs" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		find $(TOP) -name "makefile" -print | xargs sed -i "1r $(ETC)/license.txt.mk"
		$(CLEAN) $(ETC)/license.mk
		sed -e 's/^\/\//#/' $(ETC)/license.txt > $(ETC)/license.as
		find $(TOP) -name "*.S" -print | xargs sed -i "1r $(ETC)/license.txt.as"
		$(CLEAN) $(ETC)/license.as

prebuild_:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 83):
		@echo -n "Building $(APPLICATION) ..."

flash: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 44):
		$(foreach app,$(APPLICATIONS),$(MAKE) APPLICATION=$(app) $(PRECLEAN) flash1;)

run1: etc img/
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 27):
		(cd img && $(MAKE) run1)
		

clean1: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 99):
		(cd etc && $(MAKECLEAN))
		(cd app && $(MAKECLEAN))
		(cd src && $(MAKECLEAN))
		(cd img && $(MAKECLEAN))
		find $(LIB) -maxdepth 1 -type f -not -name .gitignore -exec $(CLEAN) {} \;

tools: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 17):
		(cd $@ && $(MAKE))

flash1: all1
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 50):
		(cd img && $(MAKE) flash)

cleanapps: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 106):
		$(foreach app,$(APPLICATIONS),cd $(APP)/${app} && $(MAKE) APPLICATION=$(app) clean;)

linktest: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 74):
		$(foreach tst,$(TESTS),$(LINK) $(TST)/$(tst) $(APP);)

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=2/109=2%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 76 / storage = 563 B / avg = 7 B
# current buf: size = 8162 B / used = 563 B / count = 76 / avg = 7 B

# strcache performance: lookups = 187 / hit rate = 59%
# hash-table stats:
# Load=76/8192=1%, Rehash=0, Collisions=1/187=1%
# Finished Make data base on Sat Jun 25 13:00:35 2022

 
